9991 parse: --- defining scenario_editor-initially-prints-text-to-screen
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"10": "literal", "width": <>}
9993 parse:   ingredient: {"5": "literal", "height": <>}
9992 load: after rewriting: screen:address:shared:screen <- new-fake-screen 10/width, 5/height
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    1:address:shared:array:character <- new [abc]\n    new-editor 1:address:shared:array:character, screen:address:shared:screen, 0/left, 10/right\n  ": "literal-string"}
9992 load: after rewriting: run [
    1:address:shared:array:character <- new [abc]
    new-editor 1:address:shared:array:character, screen:address:shared:screen, 0/left, 10/right
  ]
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    # top line of screen reserved for menu\n    .          .\n    .abc       .\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain [
    # top line of screen reserved for menu
    .          .
    .abc       .
    .          .
  ]
9999 parse: recipe scenario_editor-initially-prints-text-to-screen has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe scenario_editor-initially-prints-text-to-screen
9991 transform: --- deduce types for recipe scenario_editor-initially-prints-text-to-screen
9992 transform: screen => <address : <shared : <screen : <>>>>
9991 transform: --- collect surrounding spaces for recipe scenario_editor-initially-prints-text-to-screen
9991 transform: --- transform names for recipe scenario_editor-initially-prints-text-to-screen
9991 transform: --- resolve ambiguous calls for recipe scenario_editor-initially-prints-text-to-screen
9992 transform: instruction screen:address:shared:screen <- new-fake-screen 10/width, 5/height
9992 transform: checking variant (strict) 0: recipe new-fake-screen {"w": "number"} {"h": "number"} -> {"result": <"address" : <"shared" : <"screen" : <>>>>}
9991 transform: --- compute instruction operations for recipe scenario_editor-initially-prints-text-to-screen
9991 transform: --- transform braces for recipe scenario_editor-initially-prints-text-to-screen
9992 transform: assume-screen ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform:  ...
9991 transform: --- perform checks for recipe scenario_editor-initially-prints-text-to-screen
9991 transform: --- type-check 'call' instructions inside recipe scenario_editor-initially-prints-text-to-screen
9991 transform: --- type-check calls inside recipe scenario_editor-initially-prints-text-to-screen
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_editor-initially-prints-text-to-screen
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_editor-initially-prints-text-to-screen
 102 run: screen:address:shared:screen <- new-fake-screen 10/width, 5/height
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1000
9999 mem: storing 10 in location 1001
 103 run: w:number <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1003
 103 run: h:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 103 run: result <- new screen:type
9999 mem: allocating size 6
9999 mem: new alloc: 1012
9999 mem: storing 1012 in location 1005
9999 mem: incrementing refcount of 1012: 0 -> 1
 103 run: width:address:number <- get-address *result, num-columns:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 0
9999 mem: location 1014 is 0
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1006
 103 run: *width <- copy w
9999 mem: location 1003 is 10
9999 mem: location 1006 is 1014
9999 mem: storing 10 in location 1014
 103 run: height:address:number <- get-address *result, num-rows:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 0
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1007
 103 run: *height <- copy h
9999 mem: location 1004 is 5
9999 mem: location 1007 is 1013
9999 mem: storing 5 in location 1013
 103 run: row:address:number <- get-address *result, cursor-row:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1008
 103 run: *row <- copy 0
9999 mem: location 1008 is 1015
9999 mem: storing 0 in location 1015
 103 run: column:address:number <- get-address *result, cursor-column:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1009
 103 run: *column <- copy 0
9999 mem: location 1009 is 1016
9999 mem: storing 0 in location 1016
 103 run: bufsize:number <- multiply *width, *height
9999 mem: location 1006 is 1014
9999 mem: location 1014 is 10
9999 mem: location 1007 is 1013
9999 mem: location 1013 is 5
9999 mem: storing 50 in location 1010
 103 run: buf:address:address:shared:array:screen-cell <- get-address *result, data:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9999 mem: storing 1017 in location 1011
 103 run: *buf <- new screen-cell:type, bufsize
9999 mem: location 1010 is 50
9999 mem: array size is 50
9999 mem: allocating size 102
9999 mem: new alloc: 1018
9999 mem: storing 50 in location 1019
9999 mem: location 1011 is 1017
9999 mem: storing 1018 in location 1017
9999 mem: incrementing refcount of 1018: 0 -> 1
 103 run: result <- clear-screen result
9999 mem: location 1005 is 1012
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1120
9999 mem: storing 10 in location 1121
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1123
9999 mem: incrementing refcount of 1012: 1 -> 2
 104 run: jump-unless screen, 
9999 mem: location 1123 is 1012
9998 run: jump-unless fell through
 104 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1124
9999 mem: incrementing refcount of 1018: 1 -> 2
 104 run: max:number <- length *buf
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1125
 104 run: i:number <- copy 0
9999 mem: storing 0 in location 1126
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 0
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 0
9999 mem: storing 1020 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1020
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1128 is 1020
9998 run: address to copy is 1020
9999 mem: storing 1020 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1020
9999 mem: storing 0 in location 1020
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1020
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1128 is 1020
9998 run: address to copy is 1021
9999 mem: storing 1021 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1021
9999 mem: storing 7 in location 1021
 104 run: i <- add i, 1
9999 mem: location 1126 is 0
9999 mem: storing 1 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 1
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 1
9999 mem: storing 1022 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1022
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1128 is 1022
9998 run: address to copy is 1022
9999 mem: storing 1022 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1022
9999 mem: storing 0 in location 1022
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1022
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1128 is 1022
9998 run: address to copy is 1023
9999 mem: storing 1023 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1023
9999 mem: storing 7 in location 1023
 104 run: i <- add i, 1
9999 mem: location 1126 is 1
9999 mem: storing 2 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 2
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 2
9999 mem: storing 1024 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1128 is 1024
9998 run: address to copy is 1024
9999 mem: storing 1024 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1024
9999 mem: storing 0 in location 1024
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1128 is 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1025
9999 mem: storing 7 in location 1025
 104 run: i <- add i, 1
9999 mem: location 1126 is 2
9999 mem: storing 3 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 3
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 3
9999 mem: storing 1026 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1026
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1128 is 1026
9998 run: address to copy is 1026
9999 mem: storing 1026 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1026
9999 mem: storing 0 in location 1026
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1026
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1128 is 1026
9998 run: address to copy is 1027
9999 mem: storing 1027 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1027
9999 mem: storing 7 in location 1027
 104 run: i <- add i, 1
9999 mem: location 1126 is 3
9999 mem: storing 4 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 4
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 4
9999 mem: storing 1028 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1028
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1128 is 1028
9998 run: address to copy is 1028
9999 mem: storing 1028 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1028
9999 mem: storing 0 in location 1028
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1028
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1128 is 1028
9998 run: address to copy is 1029
9999 mem: storing 1029 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1029
9999 mem: storing 7 in location 1029
 104 run: i <- add i, 1
9999 mem: location 1126 is 4
9999 mem: storing 5 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 5
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 5
9999 mem: storing 1030 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1030
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1128 is 1030
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1030
9999 mem: storing 0 in location 1030
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1030
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1128 is 1030
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1031
9999 mem: storing 7 in location 1031
 104 run: i <- add i, 1
9999 mem: location 1126 is 5
9999 mem: storing 6 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 6
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 6
9999 mem: storing 1032 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1032
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1128 is 1032
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1032
9999 mem: storing 0 in location 1032
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1032
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1128 is 1032
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1033
9999 mem: storing 7 in location 1033
 104 run: i <- add i, 1
9999 mem: location 1126 is 6
9999 mem: storing 7 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 7
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 7
9999 mem: storing 1034 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1128 is 1034
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1034
9999 mem: storing 0 in location 1034
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1128 is 1034
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1035
9999 mem: storing 7 in location 1035
 104 run: i <- add i, 1
9999 mem: location 1126 is 7
9999 mem: storing 8 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 8
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 8
9999 mem: storing 1036 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1128 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1036
9999 mem: storing 0 in location 1036
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1128 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1037
9999 mem: storing 7 in location 1037
 104 run: i <- add i, 1
9999 mem: location 1126 is 8
9999 mem: storing 9 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 9
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 9
9999 mem: storing 1038 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1128 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1038
9999 mem: storing 0 in location 1038
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1128 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1039
9999 mem: storing 7 in location 1039
 104 run: i <- add i, 1
9999 mem: location 1126 is 9
9999 mem: storing 10 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 10
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 10
9999 mem: storing 1040 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1128 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1040
9999 mem: storing 0 in location 1040
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1128 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1041
9999 mem: storing 7 in location 1041
 104 run: i <- add i, 1
9999 mem: location 1126 is 10
9999 mem: storing 11 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 11
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 11
9999 mem: storing 1042 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1128 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1042
9999 mem: storing 0 in location 1042
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1128 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1043
9999 mem: storing 7 in location 1043
 104 run: i <- add i, 1
9999 mem: location 1126 is 11
9999 mem: storing 12 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 12
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 12
9999 mem: storing 1044 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1128 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1044
9999 mem: storing 0 in location 1044
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1128 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1045
9999 mem: storing 7 in location 1045
 104 run: i <- add i, 1
9999 mem: location 1126 is 12
9999 mem: storing 13 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 13
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 13
9999 mem: storing 1046 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1128 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1046
9999 mem: storing 0 in location 1046
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1128 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1047
9999 mem: storing 7 in location 1047
 104 run: i <- add i, 1
9999 mem: location 1126 is 13
9999 mem: storing 14 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 14
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 14
9999 mem: storing 1048 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1128 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1048
9999 mem: storing 0 in location 1048
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1128 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1049
9999 mem: storing 7 in location 1049
 104 run: i <- add i, 1
9999 mem: location 1126 is 14
9999 mem: storing 15 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 15
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 15
9999 mem: storing 1050 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1128 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1050
9999 mem: storing 0 in location 1050
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1128 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1051
9999 mem: storing 7 in location 1051
 104 run: i <- add i, 1
9999 mem: location 1126 is 15
9999 mem: storing 16 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 16
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 16
9999 mem: storing 1052 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1128 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1052
9999 mem: storing 0 in location 1052
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1128 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1053
9999 mem: storing 7 in location 1053
 104 run: i <- add i, 1
9999 mem: location 1126 is 16
9999 mem: storing 17 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 17
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 17
9999 mem: storing 1054 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1128 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1054
9999 mem: storing 0 in location 1054
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1128 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1055
9999 mem: storing 7 in location 1055
 104 run: i <- add i, 1
9999 mem: location 1126 is 17
9999 mem: storing 18 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 18
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 18
9999 mem: storing 1056 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1128 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1056
9999 mem: storing 0 in location 1056
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1128 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1057
9999 mem: storing 7 in location 1057
 104 run: i <- add i, 1
9999 mem: location 1126 is 18
9999 mem: storing 19 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 19
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 19
9999 mem: storing 1058 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1128 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1058
9999 mem: storing 0 in location 1058
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1128 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1059
9999 mem: storing 7 in location 1059
 104 run: i <- add i, 1
9999 mem: location 1126 is 19
9999 mem: storing 20 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 20
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 20
9999 mem: storing 1060 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1128 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1060
9999 mem: storing 0 in location 1060
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1128 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1061
9999 mem: storing 7 in location 1061
 104 run: i <- add i, 1
9999 mem: location 1126 is 20
9999 mem: storing 21 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 21
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 21
9999 mem: storing 1062 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1128 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1062
9999 mem: storing 0 in location 1062
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1128 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1063
9999 mem: storing 7 in location 1063
 104 run: i <- add i, 1
9999 mem: location 1126 is 21
9999 mem: storing 22 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 22
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 22
9999 mem: storing 1064 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1064
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1128 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1064
9999 mem: storing 0 in location 1064
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1064
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1128 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1065
9999 mem: storing 7 in location 1065
 104 run: i <- add i, 1
9999 mem: location 1126 is 22
9999 mem: storing 23 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 23
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 23
9999 mem: storing 1066 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1066
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1128 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1066
9999 mem: storing 0 in location 1066
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1066
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1128 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1067
9999 mem: storing 7 in location 1067
 104 run: i <- add i, 1
9999 mem: location 1126 is 23
9999 mem: storing 24 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 24
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 24
9999 mem: storing 1068 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1068
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1128 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1068
9999 mem: storing 0 in location 1068
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1068
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1128 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1069
9999 mem: storing 7 in location 1069
 104 run: i <- add i, 1
9999 mem: location 1126 is 24
9999 mem: storing 25 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 25
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 25
9999 mem: storing 1070 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1070
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1128 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1070
9999 mem: storing 0 in location 1070
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1070
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1128 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1071
9999 mem: storing 7 in location 1071
 104 run: i <- add i, 1
9999 mem: location 1126 is 25
9999 mem: storing 26 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 26
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 26
9999 mem: storing 1072 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1072
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1128 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1072
9999 mem: storing 0 in location 1072
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1072
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1128 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1073
9999 mem: storing 7 in location 1073
 104 run: i <- add i, 1
9999 mem: location 1126 is 26
9999 mem: storing 27 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 27
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 27
9999 mem: storing 1074 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1074
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1128 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1074
9999 mem: storing 0 in location 1074
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1074
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1128 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1075
9999 mem: storing 7 in location 1075
 104 run: i <- add i, 1
9999 mem: location 1126 is 27
9999 mem: storing 28 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 28
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 28
9999 mem: storing 1076 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1128 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1076
9999 mem: storing 0 in location 1076
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1128 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1077
9999 mem: storing 7 in location 1077
 104 run: i <- add i, 1
9999 mem: location 1126 is 28
9999 mem: storing 29 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 29
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 29
9999 mem: storing 1078 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1128 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1078
9999 mem: storing 0 in location 1078
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1128 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1079
9999 mem: storing 7 in location 1079
 104 run: i <- add i, 1
9999 mem: location 1126 is 29
9999 mem: storing 30 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 30
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 30
9999 mem: storing 1080 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1128 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1080
9999 mem: storing 0 in location 1080
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1128 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1081
9999 mem: storing 7 in location 1081
 104 run: i <- add i, 1
9999 mem: location 1126 is 30
9999 mem: storing 31 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 31
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 31
9999 mem: storing 1082 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1128 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1082
9999 mem: storing 0 in location 1082
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1128 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1083
9999 mem: storing 7 in location 1083
 104 run: i <- add i, 1
9999 mem: location 1126 is 31
9999 mem: storing 32 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 32
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 32
9999 mem: storing 1084 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1084
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1128 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1084
9999 mem: storing 0 in location 1084
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1084
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1128 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1085
9999 mem: storing 7 in location 1085
 104 run: i <- add i, 1
9999 mem: location 1126 is 32
9999 mem: storing 33 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 33
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 33
9999 mem: storing 1086 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1086
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1128 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1086
9999 mem: storing 0 in location 1086
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1086
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1128 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1087
9999 mem: storing 7 in location 1087
 104 run: i <- add i, 1
9999 mem: location 1126 is 33
9999 mem: storing 34 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 34
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 34
9999 mem: storing 1088 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1088
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1128 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1088
9999 mem: storing 0 in location 1088
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1088
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1128 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1089
9999 mem: storing 7 in location 1089
 104 run: i <- add i, 1
9999 mem: location 1126 is 34
9999 mem: storing 35 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 35
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 35
9999 mem: storing 1090 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1090
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1128 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1090
9999 mem: storing 0 in location 1090
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1090
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1128 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1091
9999 mem: storing 7 in location 1091
 104 run: i <- add i, 1
9999 mem: location 1126 is 35
9999 mem: storing 36 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 36
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 36
9999 mem: storing 1092 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1092
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1128 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1092
9999 mem: storing 0 in location 1092
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1092
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1128 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1093
9999 mem: storing 7 in location 1093
 104 run: i <- add i, 1
9999 mem: location 1126 is 36
9999 mem: storing 37 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 37
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 37
9999 mem: storing 1094 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1094
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1128 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1094
9999 mem: storing 0 in location 1094
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1094
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1128 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1095
9999 mem: storing 7 in location 1095
 104 run: i <- add i, 1
9999 mem: location 1126 is 37
9999 mem: storing 38 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 38
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 38
9999 mem: storing 1096 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1128 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1096
9999 mem: storing 0 in location 1096
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1128 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1097
9999 mem: storing 7 in location 1097
 104 run: i <- add i, 1
9999 mem: location 1126 is 38
9999 mem: storing 39 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 39
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 39
9999 mem: storing 1098 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1128 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1098
9999 mem: storing 0 in location 1098
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1128 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1099
9999 mem: storing 7 in location 1099
 104 run: i <- add i, 1
9999 mem: location 1126 is 39
9999 mem: storing 40 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 40
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 40
9999 mem: storing 1100 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1128 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1100
9999 mem: storing 0 in location 1100
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1128 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1101
9999 mem: storing 7 in location 1101
 104 run: i <- add i, 1
9999 mem: location 1126 is 40
9999 mem: storing 41 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 41
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 41
9999 mem: storing 1102 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1102
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1128 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1102
9999 mem: storing 0 in location 1102
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1102
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1128 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1103
9999 mem: storing 7 in location 1103
 104 run: i <- add i, 1
9999 mem: location 1126 is 41
9999 mem: storing 42 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 42
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 42
9999 mem: storing 1104 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1104
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1128 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1104
9999 mem: storing 0 in location 1104
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1104
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1128 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1105
9999 mem: storing 7 in location 1105
 104 run: i <- add i, 1
9999 mem: location 1126 is 42
9999 mem: storing 43 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 43
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 43
9999 mem: storing 1106 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1106
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1128 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1106
9999 mem: storing 0 in location 1106
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1106
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1128 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1107
9999 mem: storing 7 in location 1107
 104 run: i <- add i, 1
9999 mem: location 1126 is 43
9999 mem: storing 44 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 44
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 44
9999 mem: storing 1108 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1128 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1108
9999 mem: storing 0 in location 1108
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1128 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1109
9999 mem: storing 7 in location 1109
 104 run: i <- add i, 1
9999 mem: location 1126 is 44
9999 mem: storing 45 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 45
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 45
9999 mem: storing 1110 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1110
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1128 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1110
9999 mem: storing 0 in location 1110
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1110
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1128 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1111
9999 mem: storing 7 in location 1111
 104 run: i <- add i, 1
9999 mem: location 1126 is 45
9999 mem: storing 46 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 46
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 46
9999 mem: storing 1112 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1128 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1112
9999 mem: storing 0 in location 1112
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1128 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1113
9999 mem: storing 7 in location 1113
 104 run: i <- add i, 1
9999 mem: location 1126 is 46
9999 mem: storing 47 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 47
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 47
9999 mem: storing 1114 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1128 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1114
9999 mem: storing 0 in location 1114
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1128 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1115
9999 mem: storing 7 in location 1115
 104 run: i <- add i, 1
9999 mem: location 1126 is 47
9999 mem: storing 48 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 48
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 48
9999 mem: storing 1116 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1116
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1128 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1116
9999 mem: storing 0 in location 1116
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1116
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1128 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1117
9999 mem: storing 7 in location 1117
 104 run: i <- add i, 1
9999 mem: location 1126 is 48
9999 mem: storing 49 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 49
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 49
9999 mem: storing 1118 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1128 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1118
9999 mem: storing 0 in location 1118
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1128 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1119
9999 mem: storing 7 in location 1119
 104 run: i <- add i, 1
9999 mem: location 1126 is 49
9999 mem: storing 50 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 50
9999 mem: location 1125 is 50
9999 mem: storing 1 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 1
9998 run: jumping to instruction 17
 104 run: x:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1131
 104 run: *x <- copy 0
9999 mem: location 1131 is 1015
9999 mem: storing 0 in location 1015
 104 run: x <- get-address *screen, cursor-column:offset
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1131
 104 run: *x <- copy 0
9999 mem: location 1131 is 1016
9999 mem: storing 0 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1123 is 1012
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 2 -> 1
9999 mem: storing 1012 in location 1005
9999 mem: incrementing refcount of 1012: 1 -> 2
 103 run: reply result:address:shared:screen
9999 mem: location 1005 is 1012
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 900
9999 mem: incrementing refcount of 1012: 2 -> 3
 102 run: run [
    1:address:shared:array:character <- new [abc]
    new-editor 1:address:shared:array:character, screen:address:shared:screen, 0/left, 10/right
  ]
9991 parse: --- defining run_1001
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"abc": "literal-string"}
9993 parse:   product: {"1": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9992 load: after rewriting: 1:address:shared:array:character <- new [abc]
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {"1": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"0": "literal", "left": <>}
9993 parse:   ingredient: {"10": "literal", "right": <>}
9992 load: after rewriting: new-editor 1:address:shared:array:character, screen:address:shared:screen, 0/left, 10/right
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction new-editor 1:address:shared:array:character, screen:address:shared:screen, 0/left, 10/right
9992 transform: checking variant (strict) 0: recipe new-editor {"s": <"address" : <"shared" : <"array" : <"character" : <>>>>>} {"screen": <"address" : <"shared" : <"screen" : <>>>>} {"left": "number"} {"right": "number"} -> {"result": <"address" : <"shared" : <"editor-data" : <>>>>} {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: new ...
9992 transform: new-editor ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: 1:address:shared:array:character <- new [abc]
9999 mem: storing 1132 in location 1
9999 mem: incrementing refcount of 1132: 0 -> 1
 103 run: new-editor 1:address:shared:array:character, screen:address:shared:screen, 0/left, 10/right
9999 mem: location 1 is 1132
9999 mem: location 900 is 1012
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1137
9999 mem: storing 11 in location 1138
 104 run: s:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1140
9999 mem: incrementing refcount of 1132: 1 -> 2
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1141
9999 mem: incrementing refcount of 1012: 3 -> 4
 104 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1142
 104 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1143
 104 run: right <- subtract right, 1
9999 mem: location 1143 is 10
9999 mem: storing 9 in location 1143
 104 run: result <- new editor-data:type
9999 mem: allocating size 13
9999 mem: new alloc: 1150
9999 mem: storing 1150 in location 1144
9999 mem: incrementing refcount of 1150: 0 -> 1
 104 run: x:address:number <- get-address *result, left:offset
9999 mem: location 1144 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1144 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1145
 104 run: *x <- copy left
9999 mem: location 1142 is 0
9999 mem: location 1145 is 1155
9999 mem: storing 0 in location 1155
 104 run: x <- get-address *result, right:offset
9999 mem: location 1144 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1144 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1145
 104 run: *x <- copy right
9999 mem: location 1143 is 9
9999 mem: location 1145 is 1156
9999 mem: storing 9 in location 1156
 104 run: x <- get-address *result, cursor-row:offset
9999 mem: location 1144 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1144 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1145
 104 run: *x <- copy 1/top
9999 mem: location 1145 is 1158
9999 mem: storing 1 in location 1158
9990 schedule: new-editor/run_1001/scenario_editor-initially-prints-text-to-screen
 104 run: x <- get-address *result, cursor-column:offset
9999 mem: location 1144 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1144 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1145
 104 run: *x <- copy left
9999 mem: location 1142 is 0
9999 mem: location 1145 is 1159
9999 mem: storing 0 in location 1159
 104 run: init:address:address:shared:duplex-list:character <- get-address *result, data:offset
9999 mem: location 1144 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1144 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1146
 104 run: *init <- push_3 167/§, 0/tail
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1163
9999 mem: storing 7 in location 1164
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1166
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 105 run: result:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1172
9999 mem: storing 1172 in location 1168
9999 mem: incrementing refcount of 1172: 0 -> 1
 105 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1168 is 1172
9999 mem: skipping refcount at 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1168 is 1172
9999 mem: skipping refcount at 1172
9998 run: address to copy is 1173
9999 mem: storing 1173 in location 1169
 105 run: *val <- copy x
9999 mem: location 1166 is 167
9999 mem: location 1169 is 1173
9999 mem: storing 167 in location 1173
 105 run: next:address:address:shared:duplex-list:_elem <- get-address *result, next:offset
9999 mem: location 1168 is 1172
9999 mem: skipping refcount at 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 167
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1168 is 1172
9999 mem: skipping refcount at 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9999 mem: storing 1174 in location 1170
 105 run: *next <- copy in
9999 mem: location 1167 is 0
9999 mem: location 1170 is 1174
9999 mem: storing 0 in location 1174
 105 run: jump-unless in, 
9999 mem: location 1167 is 0
9998 run: jumping to instruction 12
 105 run: reply result
9999 mem: location 1168 is 1172
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1172
9999 mem: location 1146 is 1151
9999 mem: storing 1172 in location 1151
9999 mem: incrementing refcount of 1172: 1 -> 2
 104 run: top-of-screen:address:address:shared:duplex-list:character <- get-address *result, top-of-screen:offset
9999 mem: location 1144 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1144 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1147
 104 run: *top-of-screen <- copy *init
9999 mem: location 1146 is 1151
9999 mem: location 1151 is 1172
9999 mem: location 1147 is 1152
9999 mem: storing 1172 in location 1152
9999 mem: incrementing refcount of 1172: 2 -> 3
 104 run: y:address:address:shared:duplex-list:character <- get-address *result, before-cursor:offset
9999 mem: location 1144 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1144 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1148
 104 run: *y <- copy *init
9999 mem: location 1146 is 1151
9999 mem: location 1151 is 1172
9999 mem: location 1148 is 1154
9999 mem: storing 1172 in location 1154
9999 mem: incrementing refcount of 1172: 3 -> 4
 104 run: result <- insert-text result, s
9999 mem: location 1144 is 1150
9999 mem: location 1140 is 1132
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1176
9999 mem: storing 8 in location 1177
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1150 in location 1179
9999 mem: incrementing refcount of 1150: 1 -> 2
 105 run: text:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1180
9999 mem: incrementing refcount of 1132: 2 -> 3
 105 run: jump-if text, 1:offset
9999 mem: location 1180 is 1132
9998 run: jumping to instruction 5
 105 run: len:number <- length *text
9999 mem: location 1180 is 1132
9999 mem: skipping refcount at 1132
9999 mem: storing 3 in location 1181
 105 run: jump-if len, 1:offset
9999 mem: location 1181 is 3
9998 run: jumping to instruction 8
 105 run: idx:number <- copy 0
9999 mem: storing 0 in location 1182
 105 run: curr:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1179 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1179 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1151
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1151 is 1172
9999 mem: storing 1172 in location 1183
9999 mem: incrementing refcount of 1172: 4 -> 5
 105 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1182 is 0
9999 mem: location 1181 is 3
9999 mem: storing 0 in location 1184
 105 run: jump-if done?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: c:character <- index *text, idx
9999 mem: location 1180 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1182 is 0
9998 run: address to copy is 1134
9998 run: its type is character
9999 mem: location 1134 is 97
9999 mem: storing 97 in location 1185
 105 run: insert_2 c, curr
9999 mem: location 1185 is 97
9999 mem: location 1183 is 1172
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1166
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1172 in location 1167
9999 mem: incrementing refcount of 1172: 5 -> 6
 106 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1186
9999 mem: storing 1186 in location 1168
9999 mem: incrementing refcount of 1186: 0 -> 1
 106 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1168 is 1186
9999 mem: skipping refcount at 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 0
9999 mem: location 1188 is 0
9999 mem: location 1189 is 0
9999 mem: location 1168 is 1186
9999 mem: skipping refcount at 1186
9998 run: address to copy is 1187
9999 mem: storing 1187 in location 1169
 106 run: *val <- copy x
9999 mem: location 1166 is 97
9999 mem: location 1169 is 1187
9999 mem: storing 97 in location 1187
 106 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1167 is 1172
9999 mem: skipping refcount at 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 167
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1167 is 1172
9999 mem: skipping refcount at 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1174 is 0
9999 mem: storing 0 in location 1170
 106 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1167 is 1172
9999 mem: skipping refcount at 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 167
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1167 is 1172
9999 mem: skipping refcount at 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9999 mem: storing 1174 in location 1171
 106 run: *y <- copy new-node
9999 mem: location 1168 is 1186
9999 mem: location 1171 is 1174
9999 mem: storing 1186 in location 1174
9999 mem: incrementing refcount of 1186: 1 -> 2
 106 run: y <- get-address *new-node, prev:offset
9999 mem: location 1168 is 1186
9999 mem: skipping refcount at 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 97
9999 mem: location 1188 is 0
9999 mem: location 1189 is 0
9999 mem: location 1168 is 1186
9999 mem: skipping refcount at 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1189
9999 mem: storing 1189 in location 1171
 106 run: *y <- copy in
9999 mem: location 1167 is 1172
9999 mem: location 1171 is 1189
9999 mem: storing 1172 in location 1189
9999 mem: incrementing refcount of 1172: 6 -> 7
 106 run: y <- get-address *new-node, next:offset
9999 mem: location 1168 is 1186
9999 mem: skipping refcount at 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 97
9999 mem: location 1188 is 0
9999 mem: location 1189 is 1172
9999 mem: location 1168 is 1186
9999 mem: skipping refcount at 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1188
9999 mem: storing 1188 in location 1171
 106 run: *y <- copy next-node
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1188
9999 mem: storing 0 in location 1188
 106 run: jump-if next-node, 1:offset
9999 mem: location 1170 is 0
9998 run: jump-if fell through
 106 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1167 is 1172
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
 105 run: curr <- next_2 curr
9999 mem: location 1183 is 1172
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1190
9999 mem: storing 3 in location 1191
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1172 in location 1193
9999 mem: incrementing refcount of 1172: 7 -> 8
 106 run: jump-if in, 1:offset
9999 mem: location 1193 is 1172
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1193 is 1172
9999 mem: skipping refcount at 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 167
9999 mem: location 1174 is 1186
9999 mem: location 1175 is 0
9999 mem: location 1193 is 1172
9999 mem: skipping refcount at 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1174 is 1186
9999 mem: storing 1186 in location 1194
9999 mem: incrementing refcount of 1186: 2 -> 3
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1186
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1186
9999 mem: decrementing refcount of 1172: 8 -> 7
9999 mem: storing 1186 in location 1183
9999 mem: incrementing refcount of 1186: 3 -> 4
 105 run: idx <- add idx, 1
9999 mem: location 1182 is 0
9999 mem: storing 1 in location 1182
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1182 is 1
9999 mem: location 1181 is 3
9999 mem: storing 0 in location 1184
 105 run: jump-if done?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: c:character <- index *text, idx
9999 mem: location 1180 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1182 is 1
9998 run: address to copy is 1135
9998 run: its type is character
9999 mem: location 1135 is 98
9999 mem: storing 98 in location 1185
 105 run: insert_2 c, curr
9999 mem: location 1185 is 98
9999 mem: location 1183 is 1186
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1166
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1167
9999 mem: incrementing refcount of 1186: 4 -> 5
 106 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1195
9999 mem: storing 1195 in location 1168
9999 mem: incrementing refcount of 1195: 0 -> 1
 106 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1168 is 1195
9999 mem: skipping refcount at 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1196 is 0
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1168 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1196
9999 mem: storing 1196 in location 1169
 106 run: *val <- copy x
9999 mem: location 1166 is 98
9999 mem: location 1169 is 1196
9999 mem: storing 98 in location 1196
 106 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1167 is 1186
9999 mem: skipping refcount at 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 97
9999 mem: location 1188 is 0
9999 mem: location 1189 is 1172
9999 mem: location 1167 is 1186
9999 mem: skipping refcount at 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1188
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1188 is 0
9999 mem: storing 0 in location 1170
 106 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1167 is 1186
9999 mem: skipping refcount at 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 97
9999 mem: location 1188 is 0
9999 mem: location 1189 is 1172
9999 mem: location 1167 is 1186
9999 mem: skipping refcount at 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1188
9999 mem: storing 1188 in location 1171
 106 run: *y <- copy new-node
9999 mem: location 1168 is 1195
9999 mem: location 1171 is 1188
9999 mem: storing 1195 in location 1188
9999 mem: incrementing refcount of 1195: 1 -> 2
 106 run: y <- get-address *new-node, prev:offset
9999 mem: location 1168 is 1195
9999 mem: skipping refcount at 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1196 is 98
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1168 is 1195
9999 mem: skipping refcount at 1195
9999 type: type deduced to be character$
9998 run: address to copy is 1198
9999 mem: storing 1198 in location 1171
 106 run: *y <- copy in
9999 mem: location 1167 is 1186
9999 mem: location 1171 is 1198
9999 mem: storing 1186 in location 1198
9999 mem: incrementing refcount of 1186: 5 -> 6
 106 run: y <- get-address *new-node, next:offset
9999 mem: location 1168 is 1195
9999 mem: skipping refcount at 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1196 is 98
9999 mem: location 1197 is 0
9999 mem: location 1198 is 1186
9999 mem: location 1168 is 1195
9999 mem: skipping refcount at 1195
9999 type: type deduced to be character$
9998 run: address to copy is 1197
9999 mem: storing 1197 in location 1171
 106 run: *y <- copy next-node
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1197
9999 mem: storing 0 in location 1197
 106 run: jump-if next-node, 1:offset
9999 mem: location 1170 is 0
9998 run: jump-if fell through
 106 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1167 is 1186
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
 105 run: curr <- next_2 curr
9999 mem: location 1183 is 1186
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1193
9999 mem: incrementing refcount of 1186: 6 -> 7
 106 run: jump-if in, 1:offset
9999 mem: location 1193 is 1186
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1193 is 1186
9999 mem: skipping refcount at 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 97
9999 mem: location 1188 is 1195
9999 mem: location 1189 is 1172
9999 mem: location 1193 is 1186
9999 mem: skipping refcount at 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1188
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1188 is 1195
9999 mem: storing 1195 in location 1194
9999 mem: incrementing refcount of 1195: 2 -> 3
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1195
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1195
9999 mem: decrementing refcount of 1186: 7 -> 6
9999 mem: storing 1195 in location 1183
9999 mem: incrementing refcount of 1195: 3 -> 4
 105 run: idx <- add idx, 1
9999 mem: location 1182 is 1
9999 mem: storing 2 in location 1182
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1182 is 2
9999 mem: location 1181 is 3
9999 mem: storing 0 in location 1184
 105 run: jump-if done?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: c:character <- index *text, idx
9999 mem: location 1180 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1182 is 2
9998 run: address to copy is 1136
9998 run: its type is character
9999 mem: location 1136 is 99
9999 mem: storing 99 in location 1185
 105 run: insert_2 c, curr
9999 mem: location 1185 is 99
9999 mem: location 1183 is 1195
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1166
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1195 in location 1167
9999 mem: incrementing refcount of 1195: 4 -> 5
 106 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1199
9999 mem: storing 1199 in location 1168
9999 mem: incrementing refcount of 1199: 0 -> 1
 106 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1168 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 0
9999 mem: location 1201 is 0
9999 mem: location 1202 is 0
9999 mem: location 1168 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9999 mem: storing 1200 in location 1169
 106 run: *val <- copy x
9999 mem: location 1166 is 99
9999 mem: location 1169 is 1200
9999 mem: storing 99 in location 1200
 106 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1167 is 1195
9999 mem: skipping refcount at 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1196 is 98
9999 mem: location 1197 is 0
9999 mem: location 1198 is 1186
9999 mem: location 1167 is 1195
9999 mem: skipping refcount at 1195
9999 type: type deduced to be character$
9998 run: address to copy is 1197
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1197 is 0
9999 mem: storing 0 in location 1170
 106 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1167 is 1195
9999 mem: skipping refcount at 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1196 is 98
9999 mem: location 1197 is 0
9999 mem: location 1198 is 1186
9999 mem: location 1167 is 1195
9999 mem: skipping refcount at 1195
9999 type: type deduced to be character$
9998 run: address to copy is 1197
9999 mem: storing 1197 in location 1171
 106 run: *y <- copy new-node
9999 mem: location 1168 is 1199
9999 mem: location 1171 is 1197
9999 mem: storing 1199 in location 1197
9999 mem: incrementing refcount of 1199: 1 -> 2
 106 run: y <- get-address *new-node, prev:offset
9999 mem: location 1168 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 99
9999 mem: location 1201 is 0
9999 mem: location 1202 is 0
9999 mem: location 1168 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1202
9999 mem: storing 1202 in location 1171
 106 run: *y <- copy in
9999 mem: location 1167 is 1195
9999 mem: location 1171 is 1202
9999 mem: storing 1195 in location 1202
9999 mem: incrementing refcount of 1195: 5 -> 6
 106 run: y <- get-address *new-node, next:offset
9999 mem: location 1168 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 99
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1195
9999 mem: location 1168 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9999 mem: storing 1201 in location 1171
 106 run: *y <- copy next-node
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1201
9999 mem: storing 0 in location 1201
 106 run: jump-if next-node, 1:offset
9999 mem: location 1170 is 0
9998 run: jump-if fell through
 106 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1167 is 1195
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
 105 run: curr <- next_2 curr
9999 mem: location 1183 is 1195
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1195 in location 1193
9999 mem: incrementing refcount of 1195: 6 -> 7
 106 run: jump-if in, 1:offset
9999 mem: location 1193 is 1195
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1193 is 1195
9999 mem: skipping refcount at 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1196 is 98
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1186
9999 mem: location 1193 is 1195
9999 mem: skipping refcount at 1195
9999 type: type deduced to be character$
9998 run: address to copy is 1197
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1197 is 1199
9999 mem: storing 1199 in location 1194
9999 mem: incrementing refcount of 1199: 2 -> 3
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1195: 7 -> 6
9999 mem: storing 1199 in location 1183
9999 mem: incrementing refcount of 1199: 3 -> 4
 105 run: idx <- add idx, 1
9999 mem: location 1182 is 2
9999 mem: storing 3 in location 1182
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1182 is 3
9999 mem: location 1181 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if done?, 
9999 mem: location 1184 is 1
9998 run: jumping to instruction 18
 105 run: reply editor/same-as-ingredient:0
9999 mem: location 1179 is 1150
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1150
9999 mem: decrementing refcount of 1150: 2 -> 1
9999 mem: storing 1150 in location 1144
9999 mem: incrementing refcount of 1150: 1 -> 2
 104 run: y <- get-address *result, before-cursor:offset
9999 mem: location 1144 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1144 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1148
 104 run: *y <- copy *init
9999 mem: location 1146 is 1151
9999 mem: location 1151 is 1172
9999 mem: location 1148 is 1154
9999 mem: decrementing refcount of 1172: 7 -> 6
9999 mem: storing 1172 in location 1154
9999 mem: incrementing refcount of 1172: 6 -> 7
 104 run: _, _, screen, result <- render screen, result
9999 mem: location 1141 is 1012
9999 mem: location 1144 is 1150
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 mem: new alloc: 1203
9999 mem: storing 28 in location 1204
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 4 -> 5
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1150 in location 1207
9999 mem: incrementing refcount of 1150: 2 -> 3
 105 run: jump-if editor, 1:offset
9999 mem: location 1207 is 1150
9998 run: jumping to instruction 5
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1207 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1207 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 0
9999 mem: storing 0 in location 1208
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1206 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1193
9999 mem: incrementing refcount of 1012: 5 -> 6
 106 run: jump-unless screen, 
9999 mem: location 1193 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1193 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1193 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1194
 106 run: reply height:number
9999 mem: location 1194 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1209
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1207 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1207 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 9
9999 mem: storing 9 in location 1210
 105 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1207 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1207 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1152
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1152 is 1172
9999 mem: storing 1172 in location 1211
9999 mem: incrementing refcount of 1172: 7 -> 8
 105 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1211 is 1172
9999 mem: storing 1172 in location 1212
9999 mem: incrementing refcount of 1172: 8 -> 9
 105 run: curr <- next_2 curr
9999 mem: location 1211 is 1172
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1172 in location 1193
9999 mem: incrementing refcount of 1172: 9 -> 10
 106 run: jump-if in, 1:offset
9999 mem: location 1193 is 1172
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1193 is 1172
9999 mem: skipping refcount at 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 167
9999 mem: location 1174 is 1186
9999 mem: location 1175 is 0
9999 mem: location 1193 is 1172
9999 mem: skipping refcount at 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1174 is 1186
9999 mem: storing 1186 in location 1194
9999 mem: incrementing refcount of 1186: 6 -> 7
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1186
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1186
9999 mem: decrementing refcount of 1172: 10 -> 9
9999 mem: storing 1186 in location 1211
9999 mem: incrementing refcount of 1186: 7 -> 8
 105 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1213
 105 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1214
 105 run: column:number <- copy left
9999 mem: location 1208 is 0
9999 mem: storing 0 in location 1215
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1207 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1207 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1216
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1207 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1207 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1217
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1207 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1207 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1218
 105 run: screen <- move-cursor screen, row, column
9999 mem: location 1206 is 1012
9999 mem: location 1214 is 1
9999 mem: location 1215 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1233
9999 mem: storing 6 in location 1234
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1236
9999 mem: incrementing refcount of 1012: 6 -> 7
 106 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1237
 106 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1238
 106 run: jump-unless screen, 
9999 mem: location 1236 is 1012
9998 run: jump-unless fell through
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1239
 106 run: *row <- copy new-row
9999 mem: location 1237 is 1
9999 mem: location 1239 is 1015
9999 mem: storing 1 in location 1015
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1240
 106 run: *column <- copy new-column
9999 mem: location 1238 is 0
9999 mem: location 1240 is 1016
9999 mem: storing 0 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1236 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 7 -> 6
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 6 -> 7
 105 run: jump-unless curr, 
9999 mem: location 1211 is 1186
9998 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1214 is 1
9999 mem: location 1209 is 5
9999 mem: storing 0 in location 1219
 105 run: jump-if off-screen?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1214 is 1
9999 mem: location 1216 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1220
 105 run: jump-unless at-cursor-row?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1215 is 0
9999 mem: location 1217 is 1159
9999 mem: location 1159 is 0
9999 mem: storing 1 in location 1221
 105 run: jump-unless at-cursor?, 
9999 mem: location 1221 is 1
9998 run: jump-unless fell through
 105 run: *before-cursor <- copy prev
9999 mem: location 1212 is 1172
9999 mem: location 1218 is 1154
9999 mem: decrementing refcount of 1172: 9 -> 8
9999 mem: storing 1172 in location 1154
9999 mem: incrementing refcount of 1172: 8 -> 9
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1211 is 1186
9999 mem: skipping refcount at 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 97
9999 mem: location 1188 is 1195
9999 mem: location 1189 is 1172
9999 mem: location 1211 is 1186
9999 mem: skipping refcount at 1186
9998 run: address to copy is 1187
9998 run: its type is character
9999 mem: location 1187 is 97
9999 mem: storing 97 in location 1222
 105 run: color <- get-color color, c
9999 mem: location 1213 is 7
9999 mem: location 1222 is 97
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 106 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1004
 106 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 106 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 106 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 97
9999 mem: storing 0 in location 1006
 106 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 106 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 106 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 106 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 97
9999 mem: storing 0 in location 1009
 106 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 106 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 106 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 106 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1213
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1222 is 97
9999 mem: storing 0 in location 1223
 105 run: jump-unless newline?, 
9999 mem: location 1223 is 0
9998 run: jumping to instruction 52
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1215 is 0
9999 mem: location 1210 is 9
9999 mem: storing 0 in location 1225
 105 run: jump-unless at-right?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 62
 105 run: print screen, c, color
9999 mem: location 1206 is 1012
9999 mem: location 1222 is 97
9999 mem: location 1213 is 7
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 mem: new alloc: 1241
9999 mem: storing 25 in location 1242
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1244
9999 mem: incrementing refcount of 1012: 7 -> 8
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1245
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1246
9999 mem: storing 1 in location 1247
 106 run: jump-if color-found?, 
9999 mem: location 1247 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1248
9999 mem: storing 0 in location 1249
 106 run: jump-if bg-color-found?, 
9999 mem: location 1249 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1248
 106 run: trace 90, [print-character], c
9999 mem: location 1245 is 97
  90 print-character: 97 
 106 run: jump-unless screen, 
9999 mem: location 1244 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1250
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1251
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1252
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1252 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1253
 106 run: jump-if legal?, 1:offset
9999 mem: location 1253 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1252 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1251 is 5
9999 mem: storing 1 in location 1253
 106 run: jump-if legal?, 1:offset
9999 mem: location 1253 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1254
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1253
 106 run: jump-if legal?, 1:offset
9999 mem: location 1253 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1250 is 10
9999 mem: storing 1 in location 1253
 106 run: jump-if legal?, 1:offset
9999 mem: location 1253 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1245 is 97
9999 mem: storing 0 in location 1255
 106 run: jump-unless newline?, 
9999 mem: location 1255 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1252 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1250 is 10
9999 mem: storing 10 in location 1258
 106 run: index <- add index, *column
9999 mem: location 1258 is 10
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1258
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1259
9999 mem: incrementing refcount of 1018: 2 -> 3
 106 run: len:number <- length *buf
9999 mem: location 1259 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1260
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1245 is 97
9999 mem: storing 0 in location 1261
 106 run: jump-unless backspace?, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1259 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1258 is 10
9999 mem: storing 1040 in location 1263
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1263 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 7
9999 mem: location 1263 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1264
 106 run: *cursor-contents <- copy c
9999 mem: location 1245 is 97
9999 mem: location 1264 is 1040
9999 mem: storing 97 in location 1040
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1263 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1263 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1265
 106 run: *cursor-color <- copy color
9999 mem: location 1246 is 7
9999 mem: location 1265 is 1041
9999 mem: storing 7 in location 1041
 106 run: right:number <- subtract width, 1
9999 mem: location 1250 is 10
9999 mem: storing 9 in location 1266
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1266 is 9
9999 mem: storing 0 in location 1267
 106 run: jump-if at-right?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1254 is 1016
9999 mem: storing 1 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1244 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: curr <- next_2 curr
9999 mem: location 1211 is 1186
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1193
9999 mem: incrementing refcount of 1186: 8 -> 9
 106 run: jump-if in, 1:offset
9999 mem: location 1193 is 1186
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1193 is 1186
9999 mem: skipping refcount at 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 97
9999 mem: location 1188 is 1195
9999 mem: location 1189 is 1172
9999 mem: location 1193 is 1186
9999 mem: skipping refcount at 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1188
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1188 is 1195
9999 mem: storing 1195 in location 1194
9999 mem: incrementing refcount of 1195: 6 -> 7
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1195
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1195
9999 mem: decrementing refcount of 1186: 9 -> 8
9999 mem: storing 1195 in location 1211
9999 mem: incrementing refcount of 1195: 7 -> 8
 105 run: prev <- next_2 prev
9999 mem: location 1212 is 1172
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1172 in location 1193
9999 mem: incrementing refcount of 1172: 9 -> 10
 106 run: jump-if in, 1:offset
9999 mem: location 1193 is 1172
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1193 is 1172
9999 mem: skipping refcount at 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 167
9999 mem: location 1174 is 1186
9999 mem: location 1175 is 0
9999 mem: location 1193 is 1172
9999 mem: skipping refcount at 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1174 is 1186
9999 mem: storing 1186 in location 1194
9999 mem: incrementing refcount of 1186: 8 -> 9
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1186
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1186
9999 mem: decrementing refcount of 1172: 10 -> 9
9999 mem: storing 1186 in location 1212
9999 mem: incrementing refcount of 1186: 9 -> 10
 105 run: column <- add column, 1
9999 mem: location 1215 is 0
9999 mem: storing 1 in location 1215
 105 run: jump 
9998 run: jumping to instruction 20
 105 run: jump-unless curr, 
9999 mem: location 1211 is 1195
9998 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1214 is 1
9999 mem: location 1209 is 5
9999 mem: storing 0 in location 1219
 105 run: jump-if off-screen?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1214 is 1
9999 mem: location 1216 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1220
 105 run: jump-unless at-cursor-row?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1215 is 1
9999 mem: location 1217 is 1159
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1221
 105 run: jump-unless at-cursor?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 30
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1211 is 1195
9999 mem: skipping refcount at 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1196 is 98
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1186
9999 mem: location 1211 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1196
9998 run: its type is character
9999 mem: location 1196 is 98
9999 mem: storing 98 in location 1222
 105 run: color <- get-color color, c
9999 mem: location 1213 is 7
9999 mem: location 1222 is 98
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 106 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1004
 106 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 106 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 106 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 98
9999 mem: storing 0 in location 1006
 106 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 106 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 106 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 106 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 98
9999 mem: storing 0 in location 1009
 106 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 106 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 106 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 106 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1213
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1222 is 98
9999 mem: storing 0 in location 1223
 105 run: jump-unless newline?, 
9999 mem: location 1223 is 0
9998 run: jumping to instruction 52
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1215 is 1
9999 mem: location 1210 is 9
9999 mem: storing 0 in location 1225
 105 run: jump-unless at-right?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 62
 105 run: print screen, c, color
9999 mem: location 1206 is 1012
9999 mem: location 1222 is 98
9999 mem: location 1213 is 7
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1244
9999 mem: incrementing refcount of 1012: 8 -> 9
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1245
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1246
9999 mem: storing 1 in location 1247
 106 run: jump-if color-found?, 
9999 mem: location 1247 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1248
9999 mem: storing 0 in location 1249
 106 run: jump-if bg-color-found?, 
9999 mem: location 1249 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1248
 106 run: trace 90, [print-character], c
9999 mem: location 1245 is 98
  90 print-character: 98 
 106 run: jump-unless screen, 
9999 mem: location 1244 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1250
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1251
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1252
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1252 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1253
 106 run: jump-if legal?, 1:offset
9999 mem: location 1253 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1252 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1251 is 5
9999 mem: storing 1 in location 1253
 106 run: jump-if legal?, 1:offset
9999 mem: location 1253 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1254
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1253
 106 run: jump-if legal?, 1:offset
9999 mem: location 1253 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1250 is 10
9999 mem: storing 1 in location 1253
 106 run: jump-if legal?, 1:offset
9999 mem: location 1253 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1245 is 98
9999 mem: storing 0 in location 1255
 106 run: jump-unless newline?, 
9999 mem: location 1255 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1252 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1250 is 10
9999 mem: storing 10 in location 1258
 106 run: index <- add index, *column
9999 mem: location 1258 is 10
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1258
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1259
9999 mem: incrementing refcount of 1018: 3 -> 4
 106 run: len:number <- length *buf
9999 mem: location 1259 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1260
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1245 is 98
9999 mem: storing 0 in location 1261
 106 run: jump-unless backspace?, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1259 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1258 is 11
9999 mem: storing 1042 in location 1263
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1263 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 7
9999 mem: location 1263 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1264
 106 run: *cursor-contents <- copy c
9999 mem: location 1245 is 98
9999 mem: location 1264 is 1042
9999 mem: storing 98 in location 1042
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1263 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1263 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1265
 106 run: *cursor-color <- copy color
9999 mem: location 1246 is 7
9999 mem: location 1265 is 1043
9999 mem: storing 7 in location 1043
 106 run: right:number <- subtract width, 1
9999 mem: location 1250 is 10
9999 mem: storing 9 in location 1266
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1266 is 9
9999 mem: storing 0 in location 1267
 106 run: jump-if at-right?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1254 is 1016
9999 mem: storing 2 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1244 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: curr <- next_2 curr
9999 mem: location 1211 is 1195
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1195 in location 1193
9999 mem: incrementing refcount of 1195: 8 -> 9
 106 run: jump-if in, 1:offset
9999 mem: location 1193 is 1195
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1193 is 1195
9999 mem: skipping refcount at 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1196 is 98
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1186
9999 mem: location 1193 is 1195
9999 mem: skipping refcount at 1195
9999 type: type deduced to be character$
9998 run: address to copy is 1197
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1197 is 1199
9999 mem: storing 1199 in location 1194
9999 mem: incrementing refcount of 1199: 4 -> 5
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1195: 9 -> 8
9999 mem: storing 1199 in location 1211
9999 mem: incrementing refcount of 1199: 5 -> 6
 105 run: prev <- next_2 prev
9999 mem: location 1212 is 1186
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1193
9999 mem: incrementing refcount of 1186: 10 -> 11
 106 run: jump-if in, 1:offset
9999 mem: location 1193 is 1186
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1193 is 1186
9999 mem: skipping refcount at 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 97
9999 mem: location 1188 is 1195
9999 mem: location 1189 is 1172
9999 mem: location 1193 is 1186
9999 mem: skipping refcount at 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1188
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1188 is 1195
9999 mem: storing 1195 in location 1194
9999 mem: incrementing refcount of 1195: 8 -> 9
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1195
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1195
9999 mem: decrementing refcount of 1186: 11 -> 10
9999 mem: storing 1195 in location 1212
9999 mem: incrementing refcount of 1195: 9 -> 10
 105 run: column <- add column, 1
9999 mem: location 1215 is 1
9999 mem: storing 2 in location 1215
 105 run: jump 
9998 run: jumping to instruction 20
 105 run: jump-unless curr, 
9999 mem: location 1211 is 1199
9998 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1214 is 1
9999 mem: location 1209 is 5
9999 mem: storing 0 in location 1219
 105 run: jump-if off-screen?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1214 is 1
9999 mem: location 1216 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1220
 105 run: jump-unless at-cursor-row?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1215 is 2
9999 mem: location 1217 is 1159
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1221
 105 run: jump-unless at-cursor?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 30
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1211 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 99
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1195
9999 mem: location 1211 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9998 run: its type is character
9999 mem: location 1200 is 99
9999 mem: storing 99 in location 1222
 105 run: color <- get-color color, c
9999 mem: location 1213 is 7
9999 mem: location 1222 is 99
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 106 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1004
 106 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 106 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 106 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 99
9999 mem: storing 0 in location 1006
 106 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 106 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 106 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 106 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 99
9999 mem: storing 0 in location 1009
 106 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 106 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 106 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 106 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1213
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1222 is 99
9999 mem: storing 0 in location 1223
 105 run: jump-unless newline?, 
9999 mem: location 1223 is 0
9998 run: jumping to instruction 52
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1215 is 2
9999 mem: location 1210 is 9
9999 mem: storing 0 in location 1225
 105 run: jump-unless at-right?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 62
 105 run: print screen, c, color
9999 mem: location 1206 is 1012
9999 mem: location 1222 is 99
9999 mem: location 1213 is 7
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1244
9999 mem: incrementing refcount of 1012: 9 -> 10
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1245
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1246
9999 mem: storing 1 in location 1247
 106 run: jump-if color-found?, 
9999 mem: location 1247 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1248
9999 mem: storing 0 in location 1249
 106 run: jump-if bg-color-found?, 
9999 mem: location 1249 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1248
 106 run: trace 90, [print-character], c
9999 mem: location 1245 is 99
  90 print-character: 99 
 106 run: jump-unless screen, 
9999 mem: location 1244 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1250
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1251
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1252
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1252 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1253
 106 run: jump-if legal?, 1:offset
9999 mem: location 1253 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1252 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1251 is 5
9999 mem: storing 1 in location 1253
 106 run: jump-if legal?, 1:offset
9999 mem: location 1253 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1254
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1253
 106 run: jump-if legal?, 1:offset
9999 mem: location 1253 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1250 is 10
9999 mem: storing 1 in location 1253
 106 run: jump-if legal?, 1:offset
9999 mem: location 1253 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1245 is 99
9999 mem: storing 0 in location 1255
 106 run: jump-unless newline?, 
9999 mem: location 1255 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1252 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1250 is 10
9999 mem: storing 10 in location 1258
 106 run: index <- add index, *column
9999 mem: location 1258 is 10
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1258
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1259
9999 mem: incrementing refcount of 1018: 4 -> 5
 106 run: len:number <- length *buf
9999 mem: location 1259 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1260
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1245 is 99
9999 mem: storing 0 in location 1261
 106 run: jump-unless backspace?, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1259 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1258 is 12
9999 mem: storing 1044 in location 1263
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1263 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 7
9999 mem: location 1263 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1264
 106 run: *cursor-contents <- copy c
9999 mem: location 1245 is 99
9999 mem: location 1264 is 1044
9999 mem: storing 99 in location 1044
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1263 is 1044
9999 mem: location 1044 is 99
9999 mem: location 1045 is 7
9999 mem: location 1263 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1265
 106 run: *cursor-color <- copy color
9999 mem: location 1246 is 7
9999 mem: location 1265 is 1045
9999 mem: storing 7 in location 1045
 106 run: right:number <- subtract width, 1
9999 mem: location 1250 is 10
9999 mem: storing 9 in location 1266
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1266 is 9
9999 mem: storing 0 in location 1267
 106 run: jump-if at-right?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1254 is 1016
9999 mem: storing 3 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1244 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: curr <- next_2 curr
9999 mem: location 1211 is 1199
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1193
9999 mem: incrementing refcount of 1199: 6 -> 7
 106 run: jump-if in, 1:offset
9999 mem: location 1193 is 1199
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1193 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 99
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1195
9999 mem: location 1193 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1201 is 0
9999 mem: storing 0 in location 1194
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1199: 7 -> 6
9999 mem: storing 0 in location 1211
 105 run: prev <- next_2 prev
9999 mem: location 1212 is 1195
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1195 in location 1193
9999 mem: incrementing refcount of 1195: 10 -> 11
 106 run: jump-if in, 1:offset
9999 mem: location 1193 is 1195
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1193 is 1195
9999 mem: skipping refcount at 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1196 is 98
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1186
9999 mem: location 1193 is 1195
9999 mem: skipping refcount at 1195
9999 type: type deduced to be character$
9998 run: address to copy is 1197
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1197 is 1199
9999 mem: storing 1199 in location 1194
9999 mem: incrementing refcount of 1199: 6 -> 7
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1195: 11 -> 10
9999 mem: storing 1199 in location 1212
9999 mem: incrementing refcount of 1199: 7 -> 8
 105 run: column <- add column, 1
9999 mem: location 1215 is 2
9999 mem: storing 3 in location 1215
 105 run: jump 
9998 run: jumping to instruction 20
 105 run: jump-unless curr, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 68
 105 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1207 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1207 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1227
 105 run: *bottom-of-screen <- copy curr
9999 mem: location 1211 is 0
9999 mem: location 1227 is 1153
9999 mem: storing 0 in location 1153
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1214 is 1
9999 mem: location 1216 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1220
9990 schedule: render/new-editor/run_1001/scenario_editor-initially-prints-text-to-screen
 105 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1215 is 3
9999 mem: location 1217 is 1159
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1228
 105 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1220 is 1
9999 mem: location 1228 is 0
9999 mem: storing 0 in location 1229
 105 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1214 is 1
9999 mem: location 1216 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 0 in location 1230
 105 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1229 is 0
9999 mem: location 1230 is 0
9999 mem: storing 0 in location 1231
 105 run: jump-unless before-cursor?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 81
 105 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1207 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1207 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1232
 105 run: *bottom <- copy row
9999 mem: location 1214 is 1
9999 mem: location 1232 is 1157
9999 mem: storing 1 in location 1157
 105 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1214 is 1
9999 mem: location 1215 is 3
9999 mem: location 1206 is 1012
9999 mem: location 1207 is 1150
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1
9998 run: result 1 is 3
9998 run: result 2 is 1012
9998 run: result 3 is 1150
9999 mem: decrementing refcount of 1012: 10 -> 9
9999 mem: storing 1012 in location 1141
9999 mem: incrementing refcount of 1012: 9 -> 10
9999 mem: decrementing refcount of 1150: 3 -> 2
9999 mem: storing 1150 in location 1144
9999 mem: incrementing refcount of 1150: 2 -> 3
 104 run: indent?:address:boolean <- get-address *result, indent?:offset
9999 mem: location 1144 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1144 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1149
 104 run: *indent? <- copy 1/true
9999 mem: location 1149 is 1160
9999 mem: storing 1 in location 1160
 104 run: reply result:address:shared:editor-data, screen:address:shared:screen
9999 mem: location 1144 is 1150
9999 mem: location 1141 is 1012
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    # top line of screen reserved for menu
    .          .
    .abc       .
    .          .
  ]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
