9991 parse: --- defining main
9993 parse: instruction: local-scope
9993 parse:   number of ingredients: 0
9992 load: after rewriting: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9993 parse: instruction: foo
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal"}
9992 load: after rewriting: foo 0
9999 parse: recipe main has a header
9999 parse: recipe has a header; parsing
9999 parse: header ingredient: x:address:_elem
9999 parse: header product: y:address:_elem
9991 parse: --- defining foo
9993 parse: instruction: local-scope
9993 parse:   number of ingredients: 0
9992 load: after rewriting: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9993 parse: instruction: load-ingredients
9993 parse:   number of ingredients: 0
9992 load: after rewriting:  
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"x": <>}
9993 parse:   product: {"y": <>}
9992 load: after rewriting: y <- copy x
9999 parse: recipe foo has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- deduce types for recipe main
9992 transform: default-space => <address : <shared : <array : <number : <>>>>>
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9991 transform: --- resolve ambiguous calls for recipe main
9992 transform: instruction foo
9993 transform: mismatch: ingredient 0
9992 transform: score for base: -1
9992 transform: checking variant 32: recipe foo x:address:_elem -> y:address:_elem
9993 transform: mismatch: ingredient 0
9992 transform: score for variant 32: -1
9992 transform: no variant found; checking for variant with suitable type ingredients
9992 transform: checking shape-shifting variant 32: recipe foo x:address:_elem -> y:address:_elem
9992 transform: final score: 101
9992 transform: matches
9992 transform: found variant to specialize: 1001 foo
9993 transform: switching foo to foo_2
9993 transform: compute type names: foo_2
9994 transform:     checking {"x": <"address" : <"_elem" : <>>>}: <"address" : <"_elem" : <>>>
9993 transform: type of x is <"address" : <"_elem" : <>>>
9994 transform:     checking {"y": <"address" : <"_elem" : <>>>}: <"address" : <"_elem" : <>>>
9993 transform: type of y is <"address" : <"_elem" : <>>>
9993 transform:   instruction: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9994 transform:     checking {"location": "type"}: "type"
9993 transform: type of location is "type"
9994 transform:     checking {"number-of-locals": "literal"}: "literal"
9993 transform: type of number-of-locals is "literal"
9994 transform:     checking {"default-space": <"address" : <"shared" : <"array" : <"location" : <>>>>>}: <"address" : <"shared" : <"array" : <"location" : <>>>>>
9993 transform: type of default-space is <"address" : <"shared" : <"array" : <"location" : <>>>>>
9993 transform:   instruction: x:address:_elem <- next-ingredient-without-typechecking 
9994 transform:     checking {"x": <"address" : <"_elem" : <>>>}: <"address" : <"_elem" : <>>>
9993 transform:   instruction: y <- copy x
9994 transform:     checking {"x": <>}: <>
9994 transform:     deducing type to <"address" : <"_elem" : <>>>
9994 transform:     checking {"y": <>}: <>
9994 transform:     deducing type to <"address" : <"_elem" : <>>>
   0 error: foo: failed to map a type to x

   0 error: foo: failed to map a type to y

9992 transform: transforming new specialization: foo_2
9991 transform: --- checking reply instructions against header for foo_2
9991 transform: --- fill in reply ingredients from header for recipe foo_2
9991 transform: --- deduce types for recipe foo_2
9992 transform: default-space => <address : <shared : <array : <number : <>>>>>
9992 transform: x => <address : <?-1 : <>>>
9992 transform: y => <address : <?-1 : <>>>
9991 transform: --- deduce types from header for foo_2
9993 transform: type of x is <address : <?-1 : <>>>
9993 transform: type of y is <address : <?-1 : <>>>
9992 transform: instruction: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9993 transform:   product: default-space: <address : <shared : <array : <number : <>>>>> -- {"default-space": <"address" : <"shared" : <"array" : <"location" : <>>>>>}
9992 transform: instruction: x:address:_elem <- next-ingredient-without-typechecking 
9993 transform:   product: x: <address : <?-1 : <>>> -- {"x": <"address" : <"_elem" : <>>>}
9992 transform: instruction: y <- copy x
9993 transform:   product: y: ?0 -- {"y": <"address" : <"_elem" : <>>>}
9992 transform: instruction: reply y:address:_elem
   0 error: foo_2: unknown type _elem in 'x:address:_elem <- next-ingredient-without-typechecking '

   0 error: foo_2: unknown type _elem in 'reply y:address:_elem'

   0 error: foo_2: unknown type _elem in recipe header ingredient

   0 error: foo_2: unknown type _elem in recipe header product

9991 transform: --- collect surrounding spaces for recipe foo_2
9991 transform: --- transform names for recipe foo_2
9993 name: assign x 1
   0 error: foo_2: use before set: y

9991 transform: --- resolve ambiguous calls for recipe foo_2
9991 transform: --- compute instruction operations for recipe foo_2
9991 transform: --- transform braces for recipe foo_2
9992 transform: local-scope ...
9992 transform:  ...
9992 transform: copy ...
9992 transform:  ...
9991 transform: --- perform checks for recipe foo_2
   0 error: foo_2: can't copy x to y; types don't match

9991 transform: --- type-check 'call' instructions inside recipe foo_2
9991 transform: --- type-check calls inside recipe foo_2
9991 transform: --- convert 'new' to 'allocate' for recipe foo_2
9992 new: size of "location" is 1
9991 transform: --- checking reply instructions against header for foo_2
9992 transform: new specialization: foo_2
9991 transform: --- compute instruction operations for recipe main
   0 error: main: instruction foo_2 has no valid specialization

9991 transform: --- transform braces for recipe main
9992 transform: local-scope ...
9992 transform: foo ...
9992 transform:  ...
9991 transform: --- perform checks for recipe main
   0 error: main: undefined operation in 'reply '

9991 transform: --- type-check 'call' instructions inside recipe main
9991 transform: --- type-check calls inside recipe main
   0 error: main: ingredient 0 has the wrong type at 'foo_2 0'

9991 transform: --- convert 'new' to 'allocate' for recipe main
9992 new: size of "location" is 1
9991 transform: --- parsing any uninitialized reagents as integers
