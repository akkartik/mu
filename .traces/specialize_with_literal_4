9991 parse: --- defining main
9993 parse: instruction: local-scope
9993 parse:   number of ingredients: 0
9992 load: after rewriting: default-space:address:array:location <- new location:type, number-of-locals:literal
9993 parse: instruction: foo
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal"}
9992 load: after rewriting: foo 0
9999 parse: recipe main has a header
9999 parse: recipe has a header; parsing
9999 parse: header ingredient: x:address:_elem
9999 parse: header product: y:address:_elem
9991 parse: --- defining foo
9993 parse: instruction: local-scope
9993 parse:   number of ingredients: 0
9992 load: after rewriting: default-space:address:array:location <- new location:type, number-of-locals:literal
9993 parse: instruction: load-ingredients
9993 parse:   number of ingredients: 0
9992 load: after rewriting:  
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"x": <>}
9993 parse:   product: {"y": <>}
9992 load: after rewriting: y <- copy x
9999 parse: recipe foo has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- transform braces for recipe main
9992 transform: local-scope ...
9992 transform: foo ...
9992 transform:  ...
9991 transform: --- deduce types for recipe main
9992 transform: default-space => <address : <array : <number : <>>>>
9991 transform: --- resolve ambiguous calls for recipe main
9992 transform: instruction foo
9993 transform: non-strict match: ingredient 0
9992 transform: checking variant 0: -1
9992 transform: checking variant 1: -1
9992 transform: checking variant 2: -1
9992 transform: checking variant 3: -1
9992 transform: checking variant 4: -1
9992 transform: checking variant 5: -1
9992 transform: checking variant 6: -1
9992 transform: checking variant 7: -1
9992 transform: checking variant 8: -1
9992 transform: checking variant 9: -1
9992 transform: checking variant 10: -1
9992 transform: checking variant 11: -1
9992 transform: checking variant 12: -1
9992 transform: checking variant 13: -1
9992 transform: checking variant 14: -1
9992 transform: checking variant 15: -1
9992 transform: checking variant 16: -1
9993 transform: non-strict match: ingredient 0
9992 transform: checking variant 17: 98
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- perform checks for recipe main
9991 transform: --- convert 'new' to 'allocate' for recipe main
9992 new: size of "location" is 1
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 1
9999 mem: new alloc: 1000
 102 run: foo 0
9999 trace: incrementing callstack depth to 2
   0 error: ran into unspecialized shape-shifting recipe foo

 103 run: default-space:address:array:location <- new location:type, number-of-locals:literal
   0 error: no space allocated for default-space in recipe foo; are you using names?

