schedule: main
run: -- nil
run: 1 main 0: ((1 integer) <- copy (1 literal))
run: 1 => (1 integer)
setm: (1 integer) <= 1
sizeof: (1 integer)
setm: size of (1 integer) is 1
setm: (1 integer): setting 1 to 1
run: -- ((1 1))
run: 2 main 1: ((2 integer) <- copy (3 literal))
run: 3 => (2 integer)
setm: (2 integer) <= 3
sizeof: (2 integer)
setm: size of (2 integer) is 1
setm: (2 integer): setting 2 to 3
run: -- ((1 1) (2 3))
run: 3 main 2: ((3 integer) (7 integer) <- test1 (1 integer) (2 integer))
m: (1 integer)
sizeof: (1 integer)
m: (2 integer)
sizeof: (2 integer)
run: -- ((1 1) (2 3))
run: 4 test1 0: ((4 integer) <- arg)
arg: nil 0 (1 3)
run: 1 => (4 integer)
setm: (4 integer) <= 1
sizeof: (4 integer)
setm: size of (4 integer) is 1
setm: (4 integer): setting 4 to 1
run: -- ((1 1) (2 3) (4 1))
run: 5 test1 1: ((5 integer) <- arg)
arg: nil 1 (1 3)
run: 3 => (5 integer)
setm: (5 integer) <= 3
sizeof: (5 integer)
setm: size of (5 integer) is 1
setm: (5 integer): setting 5 to 3
run: -- ((1 1) (2 3) (4 1) (5 3))
run: 6 test1 2: ((6 integer) <- add (4 integer) (5 integer))
m: (4 integer)
sizeof: (4 integer)
m: (5 integer)
sizeof: (5 integer)
add: 1 3
m: (4 integer)
sizeof: (4 integer)
m: (5 integer)
sizeof: (5 integer)
run: 4 => (6 integer)
setm: (6 integer) <= 4
sizeof: (6 integer)
setm: size of (6 integer) is 1
setm: (6 integer): setting 6 to 4
run: -- ((1 1) (2 3) (4 1) (5 3) (6 4))
run: 7 test1 3: (prepare-reply (6 integer) (5 integer))
m: (6 integer)
sizeof: (6 integer)
m: (5 integer)
sizeof: (5 integer)
run: -- ((1 1) (2 3) (4 1) (5 3) (6 4))
run: 8 test1 4: (reply)
reply: nil ((3 integer) (7 integer))
reply: 4 => (3 integer)
setm: (3 integer) <= 4
sizeof: (3 integer)
setm: size of (3 integer) is 1
setm: (3 integer): setting 3 to 4
reply: 3 => (7 integer)
setm: (7 integer) <= 3
sizeof: (7 integer)
setm: size of (7 integer) is 1
setm: (7 integer): setting 7 to 3
schedule: done with routine
