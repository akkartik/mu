parse: instruction: run
parse:   ingredient: {name: "\n    1:address:array:character/raw <- integer-to-decimal-string 0\n    2:array:character/raw <- copy *1:address:array:character/raw\n  ", properties: [_: "literal-string"]}
parse: instruction: memory-should-contain
parse:   ingredient: {name: "\n    2:string <- [0]\n  ", properties: [_: "literal-string"]}
after-brace: recipe scenario-integer-to-decimal-digit-zero
after-brace: run ...
after-brace: memory-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: scenario-integer-to-decimal-digit-zero
 101 run: run [
    1:address:array:character/raw <- integer-to-decimal-string 0
    2:array:character/raw <- copy *1:address:array:character/raw
  ]
parse: instruction: integer-to-decimal-string
parse:   ingredient: {name: "0", properties: ["0": "literal"]}
parse:   product: {name: "1", properties: ["1": "address":"array":"character", "raw": ]}
parse: instruction: copy
parse:   ingredient: {name: "1", properties: ["*1": "address":"array":"character", "raw": , "lookup": ]}
parse:   product: {name: "2", properties: ["2": "array":"character", "raw": ]}
after-brace: recipe run1001
after-brace: integer-to-decimal-string ...
after-brace: copy ...
 101 run: 1:address:array:character/raw <- integer-to-decimal-string 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 16
9999 mem: new alloc: 1000
 102 run: n:number <- next-ingredient 
9999 mem: storing 0 in location 1002
 102 run: break-if n, 
9999 mem: location 1002 is 0
9999 run: jump-if fell through
 102 run: result:address:array:character <- new [0]
9999 mem: storing 1017 in location 1003
 102 run: reply result
9999 mem: location 1003 is 1017
9999 run: result 0 is 1017
9999 mem: storing 1017 in location 1
 101 run: 2:array:character/raw <- copy *1:address:array:character/raw
9999 mem: location 1 is 1017
9999 mem: location 1017 is 1
9999 mem: location 1018 is 48
9999 mem: location 1 is 1017
9999 mem: location 1 is 1017
9999 mem: storing 1 in location 2
9999 mem: storing 48 in location 3
 100 run: memory-should-contain [
    2:string <- [0]
  ]
9999 run: checking string length at 2
9999 run: checking location 3
