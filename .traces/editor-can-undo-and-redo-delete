9991 parse: --- defining scenario-editor-can-undo-and-redo-delete
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"10": "literal", "width": <>}
9993 parse:   ingredient: {"5": "literal", "height": <>}
9992 load: after rewriting: screen:address:shared:screen <- new-fake-screen 10/width, 5/height
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"": "literal-string"}
9993 parse:   product: {"1": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9992 load: after rewriting: 1:address:shared:array:character <- new []
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {"1": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"0": "literal", "left": <>}
9993 parse:   ingredient: {"10": "literal", "right": <>}
9993 parse:   product: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: 2:address:shared:editor-data <- new-editor 1:address:shared:array:character, screen:address:shared:screen, 0/left, 10/right
9993 parse: instruction: editor-render
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"screen": <>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-render screen, 2:address:shared:editor-data
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    type [abcdef]\n    left-click 1, 2\n    press delete\n    press backspace\n    press delete\n    press delete\n  ": "literal-string"}
9992 load: after rewriting: assume-console [
    type [abcdef]
    left-click 1, 2
    press delete
    press backspace
    press delete
    press delete
  ]
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .af        .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain [
    .          .
    .af        .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 1\n    4 <- 1\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain [
    3 <- 1
    4 <- 1
  ]
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press ctrl-z\n  ": "literal-string"}
9992 load: after rewriting: assume-console [
    press ctrl-z
  ]
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 1\n    4 <- 1\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain [
    3 <- 1
    4 <- 1
  ]
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .adef      .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain [
    .          .
    .adef      .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press ctrl-z\n  ": "literal-string"}
9992 load: after rewriting: assume-console [
    press ctrl-z
  ]
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 1\n    4 <- 2\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain [
    3 <- 1
    4 <- 2
  ]
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .abdef     .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain [
    .          .
    .abdef     .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press ctrl-z\n  ": "literal-string"}
9992 load: after rewriting: assume-console [
    press ctrl-z
  ]
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 1\n    4 <- 2\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain [
    3 <- 1
    4 <- 2
  ]
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .abcdef    .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain [
    .          .
    .abcdef    .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press ctrl-y\n  ": "literal-string"}
9992 load: after rewriting: assume-console [
    press ctrl-y
  ]
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 1\n    4 <- 2\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain [
    3 <- 1
    4 <- 2
  ]
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .abdef     .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain [
    .          .
    .abdef     .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press ctrl-y\n  ": "literal-string"}
9992 load: after rewriting: assume-console [
    press ctrl-y
  ]
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 1\n    4 <- 1\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain [
    3 <- 1
    4 <- 1
  ]
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .adef      .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain [
    .          .
    .adef      .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press ctrl-y\n  ": "literal-string"}
9992 load: after rewriting: assume-console [
    press ctrl-y
  ]
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 1\n    4 <- 1\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain [
    3 <- 1
    4 <- 1
  ]
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .af        .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain [
    .          .
    .af        .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
9999 parse: recipe scenario-editor-can-undo-and-redo-delete has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe scenario-editor-can-undo-and-redo-delete
9991 transform: --- deduce types for recipe scenario-editor-can-undo-and-redo-delete
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: screen <= <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe scenario-editor-can-undo-and-redo-delete
9991 transform: --- transform names for recipe scenario-editor-can-undo-and-redo-delete
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe scenario-editor-can-undo-and-redo-delete
9992 transform: instruction new-fake-screen
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: product 0
9992 transform: score for base: 1000
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: product 0
9992 transform: score for variant 0: 1000
9992 transform: instruction new-editor
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9993 transform: strict match: ingredient 3
9993 transform: strict match: product 0
9992 transform: score for base: 999
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9993 transform: strict match: ingredient 3
9993 transform: strict match: product 0
9992 transform: score for variant 0: 999
9992 transform: instruction editor-render
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9992 transform: score for base: 998
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9992 transform: score for variant 0: 998
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe scenario-editor-can-undo-and-redo-delete
9991 transform: --- transform braces for recipe scenario-editor-can-undo-and-redo-delete
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: editor-render ...
9992 transform: assume-console ...
9992 transform: editor-event-loop ...
9992 transform: screen-should-contain ...
9992 transform: get ...
9992 transform: get ...
9992 transform: memory-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: get ...
9992 transform: get ...
9992 transform: memory-should-contain ...
9992 transform: screen-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: get ...
9992 transform: get ...
9992 transform: memory-should-contain ...
9992 transform: screen-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: get ...
9992 transform: get ...
9992 transform: memory-should-contain ...
9992 transform: screen-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: get ...
9992 transform: get ...
9992 transform: memory-should-contain ...
9992 transform: screen-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: get ...
9992 transform: get ...
9992 transform: memory-should-contain ...
9992 transform: screen-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: get ...
9992 transform: get ...
9992 transform: memory-should-contain ...
9992 transform: screen-should-contain ...
9992 transform:  ...
9991 transform: --- perform checks for recipe scenario-editor-can-undo-and-redo-delete
9991 transform: --- type-check 'call' instructions inside recipe scenario-editor-can-undo-and-redo-delete
9991 transform: --- type-check calls inside recipe scenario-editor-can-undo-and-redo-delete
9991 transform: --- convert 'new' to 'allocate' for recipe scenario-editor-can-undo-and-redo-delete
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario-editor-can-undo-and-redo-delete
 102 run: screen:address:shared:screen <- new-fake-screen 10/width, 5/height
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1000
9999 mem: storing 10 in location 1001
 103 run: w:number <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1003
 103 run: h:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 103 run: result <- new screen:type
9999 mem: allocating size 6
9999 mem: new alloc: 1012
9999 mem: storing 1012 in location 1005
9999 mem: incrementing refcount of 1012: 0 -> 1
 103 run: width:address:number <- get-address *result, num-columns:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 0
9999 mem: location 1014 is 0
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1006
 103 run: *width <- copy w
9999 mem: location 1003 is 10
9999 mem: location 1006 is 1014
9999 mem: storing 10 in location 1014
 103 run: height:address:number <- get-address *result, num-rows:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 0
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1007
 103 run: *height <- copy h
9999 mem: location 1004 is 5
9999 mem: location 1007 is 1013
9999 mem: storing 5 in location 1013
 103 run: row:address:number <- get-address *result, cursor-row:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1008
 103 run: *row <- copy 0
9999 mem: location 1008 is 1015
9999 mem: storing 0 in location 1015
 103 run: column:address:number <- get-address *result, cursor-column:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1009
 103 run: *column <- copy 0
9999 mem: location 1009 is 1016
9999 mem: storing 0 in location 1016
 103 run: bufsize:number <- multiply *width, *height
9999 mem: location 1006 is 1014
9999 mem: location 1014 is 10
9999 mem: location 1007 is 1013
9999 mem: location 1013 is 5
9999 mem: storing 50 in location 1010
 103 run: buf:address:address:shared:array:screen-cell <- get-address *result, data:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9999 mem: storing 1017 in location 1011
 103 run: *buf <- new screen-cell:type, bufsize
9999 mem: location 1010 is 50
9999 mem: array size is 50
9999 mem: allocating size 102
9999 mem: new alloc: 1018
9999 mem: storing 50 in location 1019
9999 mem: location 1011 is 1017
9999 mem: storing 1018 in location 1017
9999 mem: incrementing refcount of 1018: 0 -> 1
 103 run: result <- clear-screen result
9999 mem: location 1005 is 1012
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1120
9999 mem: storing 10 in location 1121
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1123
9999 mem: incrementing refcount of 1012: 1 -> 2
 104 run: jump-unless screen, 
9999 mem: location 1123 is 1012
9998 run: jump-unless fell through
 104 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1124
9999 mem: incrementing refcount of 1018: 1 -> 2
 104 run: max:number <- length *buf
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1125
 104 run: i:number <- copy 0
9999 mem: storing 0 in location 1126
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 0
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 0
9999 mem: storing 1020 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1020
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1128 is 1020
9998 run: address to copy is 1020
9999 mem: storing 1020 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1020
9999 mem: storing 0 in location 1020
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1020
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1128 is 1020
9998 run: address to copy is 1021
9999 mem: storing 1021 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1021
9999 mem: storing 7 in location 1021
 104 run: i <- add i, 1
9999 mem: location 1126 is 0
9999 mem: storing 1 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 1
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 1
9999 mem: storing 1022 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1022
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1128 is 1022
9998 run: address to copy is 1022
9999 mem: storing 1022 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1022
9999 mem: storing 0 in location 1022
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1022
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1128 is 1022
9998 run: address to copy is 1023
9999 mem: storing 1023 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1023
9999 mem: storing 7 in location 1023
 104 run: i <- add i, 1
9999 mem: location 1126 is 1
9999 mem: storing 2 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 2
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 2
9999 mem: storing 1024 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1128 is 1024
9998 run: address to copy is 1024
9999 mem: storing 1024 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1024
9999 mem: storing 0 in location 1024
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1128 is 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1025
9999 mem: storing 7 in location 1025
 104 run: i <- add i, 1
9999 mem: location 1126 is 2
9999 mem: storing 3 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 3
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 3
9999 mem: storing 1026 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1026
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1128 is 1026
9998 run: address to copy is 1026
9999 mem: storing 1026 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1026
9999 mem: storing 0 in location 1026
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1026
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1128 is 1026
9998 run: address to copy is 1027
9999 mem: storing 1027 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1027
9999 mem: storing 7 in location 1027
 104 run: i <- add i, 1
9999 mem: location 1126 is 3
9999 mem: storing 4 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 4
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 4
9999 mem: storing 1028 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1028
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1128 is 1028
9998 run: address to copy is 1028
9999 mem: storing 1028 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1028
9999 mem: storing 0 in location 1028
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1028
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1128 is 1028
9998 run: address to copy is 1029
9999 mem: storing 1029 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1029
9999 mem: storing 7 in location 1029
 104 run: i <- add i, 1
9999 mem: location 1126 is 4
9999 mem: storing 5 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 5
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 5
9999 mem: storing 1030 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1030
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1128 is 1030
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1030
9999 mem: storing 0 in location 1030
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1030
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1128 is 1030
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1031
9999 mem: storing 7 in location 1031
 104 run: i <- add i, 1
9999 mem: location 1126 is 5
9999 mem: storing 6 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 6
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 6
9999 mem: storing 1032 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1032
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1128 is 1032
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1032
9999 mem: storing 0 in location 1032
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1032
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1128 is 1032
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1033
9999 mem: storing 7 in location 1033
 104 run: i <- add i, 1
9999 mem: location 1126 is 6
9999 mem: storing 7 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 7
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 7
9999 mem: storing 1034 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1128 is 1034
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1034
9999 mem: storing 0 in location 1034
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1128 is 1034
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1035
9999 mem: storing 7 in location 1035
 104 run: i <- add i, 1
9999 mem: location 1126 is 7
9999 mem: storing 8 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 8
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 8
9999 mem: storing 1036 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1128 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1036
9999 mem: storing 0 in location 1036
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1128 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1037
9999 mem: storing 7 in location 1037
 104 run: i <- add i, 1
9999 mem: location 1126 is 8
9999 mem: storing 9 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 9
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 9
9999 mem: storing 1038 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1128 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1038
9999 mem: storing 0 in location 1038
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1128 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1039
9999 mem: storing 7 in location 1039
 104 run: i <- add i, 1
9999 mem: location 1126 is 9
9999 mem: storing 10 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 10
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 10
9999 mem: storing 1040 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1128 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1040
9999 mem: storing 0 in location 1040
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1128 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1041
9999 mem: storing 7 in location 1041
 104 run: i <- add i, 1
9999 mem: location 1126 is 10
9999 mem: storing 11 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 11
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 11
9999 mem: storing 1042 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1128 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1042
9999 mem: storing 0 in location 1042
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1128 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1043
9999 mem: storing 7 in location 1043
 104 run: i <- add i, 1
9999 mem: location 1126 is 11
9999 mem: storing 12 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 12
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 12
9999 mem: storing 1044 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1128 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1044
9999 mem: storing 0 in location 1044
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1128 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1045
9999 mem: storing 7 in location 1045
 104 run: i <- add i, 1
9999 mem: location 1126 is 12
9999 mem: storing 13 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 13
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 13
9999 mem: storing 1046 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1128 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1046
9999 mem: storing 0 in location 1046
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1128 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1047
9999 mem: storing 7 in location 1047
 104 run: i <- add i, 1
9999 mem: location 1126 is 13
9999 mem: storing 14 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 14
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 14
9999 mem: storing 1048 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1128 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1048
9999 mem: storing 0 in location 1048
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1128 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1049
9999 mem: storing 7 in location 1049
 104 run: i <- add i, 1
9999 mem: location 1126 is 14
9999 mem: storing 15 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 15
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 15
9999 mem: storing 1050 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1128 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1050
9999 mem: storing 0 in location 1050
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1128 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1051
9999 mem: storing 7 in location 1051
 104 run: i <- add i, 1
9999 mem: location 1126 is 15
9999 mem: storing 16 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 16
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 16
9999 mem: storing 1052 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1128 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1052
9999 mem: storing 0 in location 1052
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1128 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1053
9999 mem: storing 7 in location 1053
 104 run: i <- add i, 1
9999 mem: location 1126 is 16
9999 mem: storing 17 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 17
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 17
9999 mem: storing 1054 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1128 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1054
9999 mem: storing 0 in location 1054
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1128 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1055
9999 mem: storing 7 in location 1055
 104 run: i <- add i, 1
9999 mem: location 1126 is 17
9999 mem: storing 18 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 18
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 18
9999 mem: storing 1056 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1128 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1056
9999 mem: storing 0 in location 1056
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1128 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1057
9999 mem: storing 7 in location 1057
 104 run: i <- add i, 1
9999 mem: location 1126 is 18
9999 mem: storing 19 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 19
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 19
9999 mem: storing 1058 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1128 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1058
9999 mem: storing 0 in location 1058
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1128 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1059
9999 mem: storing 7 in location 1059
 104 run: i <- add i, 1
9999 mem: location 1126 is 19
9999 mem: storing 20 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 20
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 20
9999 mem: storing 1060 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1128 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1060
9999 mem: storing 0 in location 1060
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1128 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1061
9999 mem: storing 7 in location 1061
 104 run: i <- add i, 1
9999 mem: location 1126 is 20
9999 mem: storing 21 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 21
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 21
9999 mem: storing 1062 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1128 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1062
9999 mem: storing 0 in location 1062
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1128 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1063
9999 mem: storing 7 in location 1063
 104 run: i <- add i, 1
9999 mem: location 1126 is 21
9999 mem: storing 22 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 22
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 22
9999 mem: storing 1064 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1064
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1128 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1064
9999 mem: storing 0 in location 1064
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1064
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1128 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1065
9999 mem: storing 7 in location 1065
 104 run: i <- add i, 1
9999 mem: location 1126 is 22
9999 mem: storing 23 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 23
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 23
9999 mem: storing 1066 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1066
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1128 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1066
9999 mem: storing 0 in location 1066
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1066
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1128 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1067
9999 mem: storing 7 in location 1067
 104 run: i <- add i, 1
9999 mem: location 1126 is 23
9999 mem: storing 24 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 24
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 24
9999 mem: storing 1068 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1068
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1128 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1068
9999 mem: storing 0 in location 1068
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1068
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1128 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1069
9999 mem: storing 7 in location 1069
 104 run: i <- add i, 1
9999 mem: location 1126 is 24
9999 mem: storing 25 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 25
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 25
9999 mem: storing 1070 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1070
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1128 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1070
9999 mem: storing 0 in location 1070
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1070
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1128 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1071
9999 mem: storing 7 in location 1071
 104 run: i <- add i, 1
9999 mem: location 1126 is 25
9999 mem: storing 26 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 26
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 26
9999 mem: storing 1072 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1072
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1128 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1072
9999 mem: storing 0 in location 1072
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1072
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1128 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1073
9999 mem: storing 7 in location 1073
 104 run: i <- add i, 1
9999 mem: location 1126 is 26
9999 mem: storing 27 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 27
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 27
9999 mem: storing 1074 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1074
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1128 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1074
9999 mem: storing 0 in location 1074
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1074
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1128 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1075
9999 mem: storing 7 in location 1075
 104 run: i <- add i, 1
9999 mem: location 1126 is 27
9999 mem: storing 28 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 28
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 28
9999 mem: storing 1076 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1128 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1076
9999 mem: storing 0 in location 1076
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1128 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1077
9999 mem: storing 7 in location 1077
 104 run: i <- add i, 1
9999 mem: location 1126 is 28
9999 mem: storing 29 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 29
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 29
9999 mem: storing 1078 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1128 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1078
9999 mem: storing 0 in location 1078
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1128 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1079
9999 mem: storing 7 in location 1079
 104 run: i <- add i, 1
9999 mem: location 1126 is 29
9999 mem: storing 30 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 30
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 30
9999 mem: storing 1080 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1128 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1080
9999 mem: storing 0 in location 1080
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1128 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1081
9999 mem: storing 7 in location 1081
 104 run: i <- add i, 1
9999 mem: location 1126 is 30
9999 mem: storing 31 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 31
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 31
9999 mem: storing 1082 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1128 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1082
9999 mem: storing 0 in location 1082
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1128 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1083
9999 mem: storing 7 in location 1083
 104 run: i <- add i, 1
9999 mem: location 1126 is 31
9999 mem: storing 32 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 32
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 32
9999 mem: storing 1084 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1084
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1128 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1084
9999 mem: storing 0 in location 1084
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1084
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1128 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1085
9999 mem: storing 7 in location 1085
 104 run: i <- add i, 1
9999 mem: location 1126 is 32
9999 mem: storing 33 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 33
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 33
9999 mem: storing 1086 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1086
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1128 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1086
9999 mem: storing 0 in location 1086
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1086
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1128 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1087
9999 mem: storing 7 in location 1087
 104 run: i <- add i, 1
9999 mem: location 1126 is 33
9999 mem: storing 34 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 34
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 34
9999 mem: storing 1088 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1088
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1128 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1088
9999 mem: storing 0 in location 1088
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1088
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1128 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1089
9999 mem: storing 7 in location 1089
 104 run: i <- add i, 1
9999 mem: location 1126 is 34
9999 mem: storing 35 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 35
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 35
9999 mem: storing 1090 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1090
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1128 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1090
9999 mem: storing 0 in location 1090
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1090
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1128 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1091
9999 mem: storing 7 in location 1091
 104 run: i <- add i, 1
9999 mem: location 1126 is 35
9999 mem: storing 36 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 36
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 36
9999 mem: storing 1092 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1092
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1128 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1092
9999 mem: storing 0 in location 1092
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1092
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1128 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1093
9999 mem: storing 7 in location 1093
 104 run: i <- add i, 1
9999 mem: location 1126 is 36
9999 mem: storing 37 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 37
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 37
9999 mem: storing 1094 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1094
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1128 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1094
9999 mem: storing 0 in location 1094
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1094
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1128 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1095
9999 mem: storing 7 in location 1095
 104 run: i <- add i, 1
9999 mem: location 1126 is 37
9999 mem: storing 38 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 38
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 38
9999 mem: storing 1096 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1128 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1096
9999 mem: storing 0 in location 1096
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1128 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1097
9999 mem: storing 7 in location 1097
 104 run: i <- add i, 1
9999 mem: location 1126 is 38
9999 mem: storing 39 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 39
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 39
9999 mem: storing 1098 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1128 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1098
9999 mem: storing 0 in location 1098
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1128 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1099
9999 mem: storing 7 in location 1099
 104 run: i <- add i, 1
9999 mem: location 1126 is 39
9999 mem: storing 40 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 40
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 40
9999 mem: storing 1100 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1128 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1100
9999 mem: storing 0 in location 1100
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1128 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1101
9999 mem: storing 7 in location 1101
 104 run: i <- add i, 1
9999 mem: location 1126 is 40
9999 mem: storing 41 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 41
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 41
9999 mem: storing 1102 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1102
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1128 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1102
9999 mem: storing 0 in location 1102
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1102
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1128 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1103
9999 mem: storing 7 in location 1103
 104 run: i <- add i, 1
9999 mem: location 1126 is 41
9999 mem: storing 42 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 42
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 42
9999 mem: storing 1104 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1104
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1128 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1104
9999 mem: storing 0 in location 1104
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1104
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1128 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1105
9999 mem: storing 7 in location 1105
 104 run: i <- add i, 1
9999 mem: location 1126 is 42
9999 mem: storing 43 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 43
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 43
9999 mem: storing 1106 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1106
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1128 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1106
9999 mem: storing 0 in location 1106
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1106
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1128 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1107
9999 mem: storing 7 in location 1107
 104 run: i <- add i, 1
9999 mem: location 1126 is 43
9999 mem: storing 44 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 44
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 44
9999 mem: storing 1108 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1128 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1108
9999 mem: storing 0 in location 1108
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1128 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1109
9999 mem: storing 7 in location 1109
 104 run: i <- add i, 1
9999 mem: location 1126 is 44
9999 mem: storing 45 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 45
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 45
9999 mem: storing 1110 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1110
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1128 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1110
9999 mem: storing 0 in location 1110
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1110
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1128 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1111
9999 mem: storing 7 in location 1111
 104 run: i <- add i, 1
9999 mem: location 1126 is 45
9999 mem: storing 46 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 46
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 46
9999 mem: storing 1112 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1128 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1112
9999 mem: storing 0 in location 1112
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1128 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1113
9999 mem: storing 7 in location 1113
 104 run: i <- add i, 1
9999 mem: location 1126 is 46
9999 mem: storing 47 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 47
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 47
9999 mem: storing 1114 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1128 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1114
9999 mem: storing 0 in location 1114
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1128 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1115
9999 mem: storing 7 in location 1115
 104 run: i <- add i, 1
9999 mem: location 1126 is 47
9999 mem: storing 48 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 48
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 48
9999 mem: storing 1116 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1116
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1128 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1116
9999 mem: storing 0 in location 1116
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1116
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1128 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1117
9999 mem: storing 7 in location 1117
 104 run: i <- add i, 1
9999 mem: location 1126 is 48
9999 mem: storing 49 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 49
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 49
9999 mem: storing 1118 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1128 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1118
9999 mem: storing 0 in location 1118
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1128 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1119
9999 mem: storing 7 in location 1119
 104 run: i <- add i, 1
9999 mem: location 1126 is 49
9999 mem: storing 50 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 50
9999 mem: location 1125 is 50
9999 mem: storing 1 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 1
9998 run: jumping to instruction 17
 104 run: x:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1131
 104 run: *x <- copy 0
9999 mem: location 1131 is 1015
9999 mem: storing 0 in location 1015
 104 run: x <- get-address *screen, cursor-column:offset
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1131
 104 run: *x <- copy 0
9999 mem: location 1131 is 1016
9999 mem: storing 0 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1123 is 1012
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 2 -> 1
9999 mem: storing 1012 in location 1005
9999 mem: incrementing refcount of 1012: 1 -> 2
 103 run: reply result:address:shared:screen
9999 mem: location 1005 is 1012
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 900
9999 mem: incrementing refcount of 1012: 2 -> 3
 102 run: 1:address:shared:array:character <- new []
9999 mem: storing 1132 in location 1
9999 mem: incrementing refcount of 1132: 0 -> 1
 102 run: 2:address:shared:editor-data <- new-editor 1:address:shared:array:character, screen:address:shared:screen, 0/left, 10/right
9999 mem: location 1 is 1132
9999 mem: location 900 is 1012
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1134
9999 mem: storing 11 in location 1135
 103 run: s:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1137
9999 mem: incrementing refcount of 1132: 1 -> 2
 103 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1138
9999 mem: incrementing refcount of 1012: 3 -> 4
 103 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1139
 103 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1140
 103 run: right <- subtract right, 1
9999 mem: location 1140 is 10
9999 mem: storing 9 in location 1140
 103 run: result <- new editor-data:type
9999 mem: allocating size 13
9999 mem: new alloc: 1147
9999 mem: storing 1147 in location 1141
9999 mem: incrementing refcount of 1147: 0 -> 1
 103 run: x:address:number <- get-address *result, left:offset
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1142
 103 run: *x <- copy left
9999 mem: location 1139 is 0
9999 mem: location 1142 is 1152
9999 mem: storing 0 in location 1152
 103 run: x <- get-address *result, right:offset
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1142
 103 run: *x <- copy right
9999 mem: location 1140 is 9
9999 mem: location 1142 is 1153
9999 mem: storing 9 in location 1153
 103 run: x <- get-address *result, cursor-row:offset
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1142
 103 run: *x <- copy 1/top
9999 mem: location 1142 is 1155
9999 mem: storing 1 in location 1155
 103 run: x <- get-address *result, cursor-column:offset
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1142
9990 schedule: new-editor/scenario-editor-can-undo-and-redo-delete
 103 run: *x <- copy left
9999 mem: location 1139 is 0
9999 mem: location 1142 is 1156
9999 mem: storing 0 in location 1156
 103 run: init:address:address:shared:duplex-list:character <- get-address *result, data:offset
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1143
 103 run: *init <- push_3 167/§, 0/tail
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1160
9999 mem: storing 7 in location 1161
 104 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1163
 104 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1164
 104 run: result:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1169
9999 mem: storing 1169 in location 1165
9999 mem: incrementing refcount of 1169: 0 -> 1
 104 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1165 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 0
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1165 is 1169
9999 mem: skipping refcount at 1169
9998 run: address to copy is 1170
9999 mem: storing 1170 in location 1166
 104 run: *val <- copy x
9999 mem: location 1163 is 167
9999 mem: location 1166 is 1170
9999 mem: storing 167 in location 1170
 104 run: next:address:address:shared:duplex-list:_elem <- get-address *result, next:offset
9999 mem: location 1165 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1165 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9999 mem: storing 1171 in location 1167
 104 run: *next <- copy in
9999 mem: location 1164 is 0
9999 mem: location 1167 is 1171
9999 mem: storing 0 in location 1171
 104 run: jump-unless in, 
9999 mem: location 1164 is 0
9998 run: jumping to instruction 12
 104 run: reply result
9999 mem: location 1165 is 1169
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1169
9999 mem: location 1143 is 1148
9999 mem: storing 1169 in location 1148
9999 mem: incrementing refcount of 1169: 1 -> 2
 103 run: top-of-screen:address:address:shared:duplex-list:character <- get-address *result, top-of-screen:offset
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1144
 103 run: *top-of-screen <- copy *init
9999 mem: location 1143 is 1148
9999 mem: location 1148 is 1169
9999 mem: location 1144 is 1149
9999 mem: storing 1169 in location 1149
9999 mem: incrementing refcount of 1169: 2 -> 3
 103 run: y:address:address:shared:duplex-list:character <- get-address *result, before-cursor:offset
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1145
 103 run: *y <- copy *init
9999 mem: location 1143 is 1148
9999 mem: location 1148 is 1169
9999 mem: location 1145 is 1151
9999 mem: storing 1169 in location 1151
9999 mem: incrementing refcount of 1169: 3 -> 4
 103 run: result <- insert-text result, s
9999 mem: location 1141 is 1147
9999 mem: location 1137 is 1132
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1173
9999 mem: storing 8 in location 1174
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1176
9999 mem: incrementing refcount of 1147: 1 -> 2
 104 run: text:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1177
9999 mem: incrementing refcount of 1132: 2 -> 3
 104 run: jump-if text, 1:offset
9999 mem: location 1177 is 1132
9998 run: jumping to instruction 5
 104 run: len:number <- length *text
9999 mem: location 1177 is 1132
9999 mem: skipping refcount at 1132
9999 mem: storing 0 in location 1178
 104 run: jump-if len, 1:offset
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1176 is 1147
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1147: 2 -> 1
9999 mem: storing 1147 in location 1141
9999 mem: incrementing refcount of 1147: 1 -> 2
 103 run: y <- get-address *result, before-cursor:offset
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1145
 103 run: *y <- copy *init
9999 mem: location 1143 is 1148
9999 mem: location 1148 is 1169
9999 mem: location 1145 is 1151
9999 mem: decrementing refcount of 1169: 4 -> 3
9999 mem: storing 1169 in location 1151
9999 mem: incrementing refcount of 1169: 3 -> 4
 103 run: _, _, screen, result <- render screen, result
9999 mem: location 1138 is 1012
9999 mem: location 1141 is 1147
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 mem: new alloc: 1183
9999 mem: storing 28 in location 1184
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 4 -> 5
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1187
9999 mem: incrementing refcount of 1147: 2 -> 3
 104 run: jump-if editor, 1:offset
9999 mem: location 1187 is 1147
9998 run: jumping to instruction 5
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1188
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1186 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1213
9999 mem: storing 3 in location 1214
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 5 -> 6
 105 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 105 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 105 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1189
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1190
 104 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1191
9999 mem: incrementing refcount of 1169: 4 -> 5
 104 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1191 is 1169
9999 mem: storing 1169 in location 1192
9999 mem: incrementing refcount of 1169: 5 -> 6
 104 run: curr <- next_2 curr
9999 mem: location 1191 is 1169
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1216
9999 mem: incrementing refcount of 1169: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1216 is 1169
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1216 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1216 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 0
9999 mem: storing 0 in location 1217
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1169: 7 -> 6
9999 mem: storing 0 in location 1191
 104 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1193
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1194
 104 run: column:number <- copy left
9999 mem: location 1188 is 0
9999 mem: storing 0 in location 1195
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1196
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1197
 104 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1198
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1186 is 1012
9999 mem: location 1194 is 1
9999 mem: location 1195 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1218
9999 mem: storing 6 in location 1219
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 6 -> 7
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 105 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 105 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 105 run: *column <- copy new-column
9999 mem: location 1223 is 0
9999 mem: location 1225 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 7 -> 6
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 6 -> 7
 104 run: jump-unless curr, 
9999 mem: location 1191 is 0
9998 run: jumping to instruction 68
 104 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1207
 104 run: *bottom-of-screen <- copy curr
9999 mem: location 1191 is 0
9999 mem: location 1207 is 1150
9999 mem: storing 0 in location 1150
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1195 is 0
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 0
9999 mem: storing 1 in location 1208
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1200 is 1
9999 mem: location 1208 is 1
9999 mem: storing 1 in location 1209
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 0 in location 1210
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1209 is 1
9999 mem: location 1210 is 0
9999 mem: storing 1 in location 1211
 104 run: jump-unless before-cursor?, 
9999 mem: location 1211 is 1
9998 run: jump-unless fell through
 104 run: *cursor-row <- copy row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: storing 1 in location 1155
 104 run: *cursor-column <- copy column
9999 mem: location 1195 is 0
9999 mem: location 1197 is 1156
9999 mem: storing 0 in location 1156
 104 run: *before-cursor <- copy prev
9999 mem: location 1192 is 1169
9999 mem: location 1198 is 1151
9999 mem: decrementing refcount of 1169: 6 -> 5
9999 mem: storing 1169 in location 1151
9999 mem: incrementing refcount of 1169: 5 -> 6
 104 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1212
 104 run: *bottom <- copy row
9999 mem: location 1194 is 1
9999 mem: location 1212 is 1154
9999 mem: storing 1 in location 1154
 104 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1194 is 1
9999 mem: location 1195 is 0
9999 mem: location 1186 is 1012
9999 mem: location 1187 is 1147
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1
9998 run: result 1 is 0
9998 run: result 2 is 1012
9998 run: result 3 is 1147
9999 mem: decrementing refcount of 1012: 7 -> 6
9999 mem: storing 1012 in location 1138
9999 mem: incrementing refcount of 1012: 6 -> 7
9999 mem: decrementing refcount of 1147: 3 -> 2
9999 mem: storing 1147 in location 1141
9999 mem: incrementing refcount of 1147: 2 -> 3
 103 run: indent?:address:boolean <- get-address *result, indent?:offset
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1146
 103 run: *indent? <- copy 1/true
9999 mem: location 1146 is 1157
9999 mem: storing 1 in location 1157
 103 run: reply result:address:shared:editor-data, screen:address:shared:screen
9999 mem: location 1141 is 1147
9999 mem: location 1138 is 1012
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1147
9999 mem: storing 1147 in location 2
9999 mem: incrementing refcount of 1147: 3 -> 4
 102 run: editor-render screen, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 2 is 1147
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 103 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1163
9999 mem: incrementing refcount of 1012: 7 -> 8
 103 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1164
9999 mem: incrementing refcount of 1147: 4 -> 5
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1165
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1166
 103 run: row:number, column:number <- render screen, editor
9999 mem: location 1163 is 1012
9999 mem: location 1164 is 1147
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 8 -> 9
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1187
9999 mem: incrementing refcount of 1147: 5 -> 6
 104 run: jump-if editor, 1:offset
9999 mem: location 1187 is 1147
9998 run: jumping to instruction 5
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1188
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1186 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 9 -> 10
 105 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 105 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 105 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1189
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1190
 104 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1191
9999 mem: incrementing refcount of 1169: 6 -> 7
 104 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1191 is 1169
9999 mem: storing 1169 in location 1192
9999 mem: incrementing refcount of 1169: 7 -> 8
 104 run: curr <- next_2 curr
9999 mem: location 1191 is 1169
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1216
9999 mem: incrementing refcount of 1169: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1216 is 1169
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1216 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1216 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 0
9999 mem: storing 0 in location 1217
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1169: 9 -> 8
9999 mem: storing 0 in location 1191
 104 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1193
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1194
 104 run: column:number <- copy left
9999 mem: location 1188 is 0
9999 mem: storing 0 in location 1195
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1196
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1197
 104 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1198
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1186 is 1012
9999 mem: location 1194 is 1
9999 mem: location 1195 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 10 -> 11
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 105 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 105 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 105 run: *column <- copy new-column
9999 mem: location 1223 is 0
9999 mem: location 1225 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 11 -> 10
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 10 -> 11
 104 run: jump-unless curr, 
9999 mem: location 1191 is 0
9998 run: jumping to instruction 68
 104 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1207
 104 run: *bottom-of-screen <- copy curr
9999 mem: location 1191 is 0
9999 mem: location 1207 is 1150
9999 mem: storing 0 in location 1150
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1195 is 0
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 0
9999 mem: storing 1 in location 1208
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1200 is 1
9999 mem: location 1208 is 1
9999 mem: storing 1 in location 1209
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 0 in location 1210
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1209 is 1
9999 mem: location 1210 is 0
9999 mem: storing 1 in location 1211
 104 run: jump-unless before-cursor?, 
9999 mem: location 1211 is 1
9998 run: jump-unless fell through
 104 run: *cursor-row <- copy row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: storing 1 in location 1155
 104 run: *cursor-column <- copy column
9999 mem: location 1195 is 0
9999 mem: location 1197 is 1156
9999 mem: storing 0 in location 1156
 104 run: *before-cursor <- copy prev
9999 mem: location 1192 is 1169
9999 mem: location 1198 is 1151
9999 mem: decrementing refcount of 1169: 8 -> 7
9999 mem: storing 1169 in location 1151
9999 mem: incrementing refcount of 1169: 7 -> 8
 104 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1212
 104 run: *bottom <- copy row
9999 mem: location 1194 is 1
9999 mem: location 1212 is 1154
9999 mem: storing 1 in location 1154
 104 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1194 is 1
9999 mem: location 1195 is 0
9999 mem: location 1186 is 1012
9999 mem: location 1187 is 1147
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1
9998 run: result 1 is 0
9999 mem: storing 1 in location 1167
9999 mem: storing 0 in location 1168
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1163 is 1012
9999 mem: location 1168 is 0
9999 mem: location 1166 is 9
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 11 -> 12
 104 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1222
 104 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1223
 104 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1224
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 0
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 104 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 104 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 mem: new alloc: 1226
9999 mem: storing 25 in location 1227
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 12 -> 13
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 105 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1243
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 2 -> 3
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 10
9999 mem: storing 1040 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 7
9999 mem: location 1248 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1040
9999 mem: storing 32 in location 1040
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1040
9999 mem: location 1040 is 32
9999 mem: location 1041 is 7
9999 mem: location 1248 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1041
9999 mem: storing 7 in location 1041
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 13 -> 12
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 12 -> 13
 104 run: column <- add column, 1
9999 mem: location 1222 is 0
9999 mem: storing 1 in location 1222
 104 run: jump 
9998 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 1
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 104 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 104 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 13 -> 14
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 105 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1243
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 3 -> 4
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 11
9999 mem: storing 1042 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1042
9999 mem: storing 32 in location 1042
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1043
9999 mem: storing 7 in location 1043
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 14 -> 13
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 13 -> 14
 104 run: column <- add column, 1
9999 mem: location 1222 is 1
9999 mem: storing 2 in location 1222
 104 run: jump 
9998 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 2
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 104 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 104 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 14 -> 15
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 105 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1243
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 4 -> 5
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 12
9999 mem: storing 1044 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1044
9999 mem: storing 32 in location 1044
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1045
9999 mem: storing 7 in location 1045
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 15 -> 14
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 14 -> 15
 104 run: column <- add column, 1
9999 mem: location 1222 is 2
9999 mem: storing 3 in location 1222
 104 run: jump 
9998 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 3
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 104 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 104 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 15 -> 16
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 105 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1243
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 5 -> 6
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 13
9999 mem: storing 1046 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 7
9999 mem: location 1248 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1046
9999 mem: storing 32 in location 1046
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1248 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1047
9999 mem: storing 7 in location 1047
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 16 -> 15
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 15 -> 16
 104 run: column <- add column, 1
9999 mem: location 1222 is 3
9999 mem: storing 4 in location 1222
 104 run: jump 
9998 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 4
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 104 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 104 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 16 -> 17
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 105 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1243
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 6 -> 7
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 14
9999 mem: storing 1048 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 7
9999 mem: location 1248 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1048
9999 mem: storing 32 in location 1048
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1248 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1049
9999 mem: storing 7 in location 1049
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 17 -> 16
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 16 -> 17
 104 run: column <- add column, 1
9999 mem: location 1222 is 4
9999 mem: storing 5 in location 1222
 104 run: jump 
9998 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 5
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 104 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 104 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 17 -> 18
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 105 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1243
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 7 -> 8
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 15
9999 mem: storing 1050 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 7
9999 mem: location 1248 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1050
9999 mem: storing 32 in location 1050
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1248 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1250
9990 schedule: print/clear-line-delimited/editor-render/scenario-editor-can-undo-and-redo-delete
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1051
9999 mem: storing 7 in location 1051
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 18 -> 17
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 17 -> 18
 104 run: column <- add column, 1
9999 mem: location 1222 is 5
9999 mem: storing 6 in location 1222
 104 run: jump 
9998 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 6
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 104 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 104 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 18 -> 19
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 105 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1243
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 8 -> 9
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 16
9999 mem: storing 1052 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 7
9999 mem: location 1248 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1052
9999 mem: storing 32 in location 1052
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1248 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1053
9999 mem: storing 7 in location 1053
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 19 -> 18
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 18 -> 19
 104 run: column <- add column, 1
9999 mem: location 1222 is 6
9999 mem: storing 7 in location 1222
 104 run: jump 
9998 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 7
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 104 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 104 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 19 -> 20
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 105 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1243
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 9 -> 10
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 17
9999 mem: storing 1054 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 7
9999 mem: location 1248 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1054
9999 mem: storing 32 in location 1054
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1248 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1055
9999 mem: storing 7 in location 1055
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 20 -> 19
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 19 -> 20
 104 run: column <- add column, 1
9999 mem: location 1222 is 7
9999 mem: storing 8 in location 1222
 104 run: jump 
9998 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 8
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 104 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 104 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 20 -> 21
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 105 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1243
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 10 -> 11
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 18
9999 mem: storing 1056 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 7
9999 mem: location 1248 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1056
9999 mem: storing 32 in location 1056
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1248 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1057
9999 mem: storing 7 in location 1057
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 21 -> 20
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 20 -> 21
 104 run: column <- add column, 1
9999 mem: location 1222 is 8
9999 mem: storing 9 in location 1222
 104 run: jump 
9998 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 9
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 104 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 104 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 21 -> 22
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 105 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1243
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 11 -> 12
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 19
9999 mem: storing 1058 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 7
9999 mem: location 1248 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1058
9999 mem: storing 32 in location 1058
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1248 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1059
9999 mem: storing 7 in location 1059
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 105 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 22 -> 21
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 21 -> 22
 104 run: column <- add column, 1
9999 mem: location 1222 is 9
9999 mem: storing 10 in location 1222
 104 run: jump 
9998 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 10
9999 mem: location 1223 is 9
9999 mem: storing 1 in location 1225
 104 run: jump-if done?, 
9999 mem: location 1225 is 1
9998 run: jumping to instruction 11
 104 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
 103 run: row <- add row, 1
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 103 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1163 is 1012
9999 mem: location 1167 is 2
9999 mem: location 1165 is 0
9999 mem: location 1166 is 9
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1253
9999 mem: storing 12 in location 1254
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 22 -> 23
 104 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1257
 104 run: x:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1258
 104 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1259
 104 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1260
9999 mem: storing 1 in location 1261
 104 run: jump-if style-found?, 
9999 mem: location 1261 is 1
9998 run: jumping to instruction 9
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1262
9999 mem: storing 0 in location 1263
 104 run: jump-if color-found?, 
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 104 run: color <- copy 245/grey
9999 mem: storing 245 in location 1262
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 104 run: jump-if bg-color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1264
 104 run: screen <- move-cursor screen, row, x
9999 mem: location 1256 is 1012
9999 mem: location 1257 is 2
9999 mem: location 1258 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 23 -> 24
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1222
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 105 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 105 run: *row <- copy new-row
9999 mem: location 1222 is 2
9999 mem: location 1224 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 105 run: *column <- copy new-column
9999 mem: location 1223 is 0
9999 mem: location 1225 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 24 -> 23
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 23 -> 24
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 0
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 104 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 104 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 24 -> 25
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 105 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1243
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 12 -> 13
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 20
9999 mem: storing 1060 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 7
9999 mem: location 1248 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1060
9999 mem: storing 9480 in location 1060
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 7
9999 mem: location 1248 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1061
9999 mem: storing 245 in location 1061
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1258 is 0
9999 mem: storing 1 in location 1258
 104 run: jump 
9998 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 1
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 104 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 104 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 25 -> 26
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 105 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1243
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 13 -> 14
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 21
9999 mem: storing 1062 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 7
9999 mem: location 1248 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1062
9999 mem: storing 9480 in location 1062
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 7
9999 mem: location 1248 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1063
9999 mem: storing 245 in location 1063
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1258 is 1
9999 mem: storing 2 in location 1258
 104 run: jump 
9998 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 2
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 104 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 104 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 26 -> 27
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 105 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1243
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 14 -> 15
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 22
9999 mem: storing 1064 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1064
9999 mem: location 1064 is 0
9999 mem: location 1065 is 7
9999 mem: location 1248 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1064
9999 mem: storing 9480 in location 1064
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 7
9999 mem: location 1248 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1065
9999 mem: storing 245 in location 1065
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1258 is 2
9999 mem: storing 3 in location 1258
 104 run: jump 
9998 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 3
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 104 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 104 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 27 -> 28
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 105 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1243
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 15 -> 16
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 23
9999 mem: storing 1066 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1066
9999 mem: location 1066 is 0
9999 mem: location 1067 is 7
9999 mem: location 1248 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1066
9999 mem: storing 9480 in location 1066
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 7
9999 mem: location 1248 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1067
9999 mem: storing 245 in location 1067
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1258 is 3
9999 mem: storing 4 in location 1258
 104 run: jump 
9998 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 4
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 104 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 104 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 28 -> 29
9990 schedule: print/draw-horizontal/editor-render/scenario-editor-can-undo-and-redo-delete
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 105 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1243
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 16 -> 17
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 24
9999 mem: storing 1068 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1068
9999 mem: location 1068 is 0
9999 mem: location 1069 is 7
9999 mem: location 1248 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1068
9999 mem: storing 9480 in location 1068
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 7
9999 mem: location 1248 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1069
9999 mem: storing 245 in location 1069
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1258 is 4
9999 mem: storing 5 in location 1258
 104 run: jump 
9998 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 5
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 104 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 104 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 29 -> 30
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 105 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1243
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 17 -> 18
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 25
9999 mem: storing 1070 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1070
9999 mem: location 1070 is 0
9999 mem: location 1071 is 7
9999 mem: location 1248 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1070
9999 mem: storing 9480 in location 1070
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 7
9999 mem: location 1248 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1071
9999 mem: storing 245 in location 1071
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1258 is 5
9999 mem: storing 6 in location 1258
 104 run: jump 
9998 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 6
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 104 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 104 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 30 -> 31
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 105 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1243
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 18 -> 19
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 26
9999 mem: storing 1072 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1072
9999 mem: location 1072 is 0
9999 mem: location 1073 is 7
9999 mem: location 1248 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1072
9999 mem: storing 9480 in location 1072
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 7
9999 mem: location 1248 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1073
9999 mem: storing 245 in location 1073
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1258 is 6
9999 mem: storing 7 in location 1258
 104 run: jump 
9998 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 7
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 104 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 104 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 31 -> 32
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 105 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1243
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 19 -> 20
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 27
9999 mem: storing 1074 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1074
9999 mem: location 1074 is 0
9999 mem: location 1075 is 7
9999 mem: location 1248 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1074
9999 mem: storing 9480 in location 1074
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 7
9999 mem: location 1248 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1075
9999 mem: storing 245 in location 1075
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1258 is 7
9999 mem: storing 8 in location 1258
 104 run: jump 
9998 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 8
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 104 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 104 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 32 -> 33
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 105 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1243
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 20 -> 21
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 28
9999 mem: storing 1076 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 7
9999 mem: location 1248 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1076
9999 mem: storing 9480 in location 1076
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1076
9999 mem: location 1076 is 9480
9999 mem: location 1077 is 7
9999 mem: location 1248 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1077
9999 mem: storing 245 in location 1077
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1258 is 8
9999 mem: storing 9 in location 1258
 104 run: jump 
9998 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 9
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 104 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 104 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 33 -> 34
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 105 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1243
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 21 -> 22
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 29
9999 mem: storing 1078 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 7
9999 mem: location 1248 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1078
9999 mem: storing 9480 in location 1078
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1078
9999 mem: location 1078 is 9480
9999 mem: location 1079 is 7
9999 mem: location 1248 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1079
9999 mem: storing 245 in location 1079
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 105 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1258 is 9
9999 mem: storing 10 in location 1258
 104 run: jump 
9998 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 10
9999 mem: location 1259 is 9
9999 mem: storing 0 in location 1266
 104 run: jump-unless continue?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 27
 104 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
 103 run: row <- add row, 1
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 103 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1163 is 1012
9999 mem: location 1167 is 3
9999 mem: location 1165 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 9
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 34 -> 35
 104 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1222
 104 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 104 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1224
 104 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1225
 104 run: jump-if screen, 
9999 mem: location 1221 is 1012
9998 run: jumping to instruction 10
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1221 is 1012
9999 mem: location 1222 is 3
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1267
9999 mem: storing 6 in location 1268
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 35 -> 36
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1271
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 105 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 105 run: *row <- copy new-row
9999 mem: location 1271 is 3
9999 mem: location 1273 is 1015
9999 mem: storing 3 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 105 run: *column <- copy new-column
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 36 -> 35
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 35 -> 36
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1221 is 1012
9999 mem: location 1223 is 0
9999 mem: location 1225 is 9
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 36 -> 37
 105 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1271
 105 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1272
 105 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1273
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 0
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 105 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 37 -> 38
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 22 -> 23
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 30
9999 mem: storing 1080 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 7
9999 mem: location 1248 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1080
9999 mem: storing 32 in location 1080
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1248 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1081
9999 mem: storing 7 in location 1081
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 38 -> 37
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 37 -> 38
 105 run: column <- add column, 1
9999 mem: location 1271 is 0
9999 mem: storing 1 in location 1271
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 1
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 105 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 38 -> 39
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 23 -> 24
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 31
9999 mem: storing 1082 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 7
9999 mem: location 1248 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1082
9999 mem: storing 32 in location 1082
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1248 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1083
9999 mem: storing 7 in location 1083
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 39 -> 38
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 38 -> 39
 105 run: column <- add column, 1
9999 mem: location 1271 is 1
9999 mem: storing 2 in location 1271
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 2
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 105 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 39 -> 40
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/scenario-editor-can-undo-and-redo-delete
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 24 -> 25
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 32
9999 mem: storing 1084 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1084
9999 mem: location 1084 is 0
9999 mem: location 1085 is 7
9999 mem: location 1248 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1084
9999 mem: storing 32 in location 1084
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1248 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1085
9999 mem: storing 7 in location 1085
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 40 -> 39
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 39 -> 40
 105 run: column <- add column, 1
9999 mem: location 1271 is 2
9999 mem: storing 3 in location 1271
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 3
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 105 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 40 -> 41
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 33 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 25 -> 26
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 33
9999 mem: storing 1086 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1086
9999 mem: location 1086 is 0
9999 mem: location 1087 is 7
9999 mem: location 1248 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1086
9999 mem: storing 32 in location 1086
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1248 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1087
9999 mem: storing 7 in location 1087
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 41 -> 40
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 40 -> 41
 105 run: column <- add column, 1
9999 mem: location 1271 is 3
9999 mem: storing 4 in location 1271
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 4
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 105 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 41 -> 42
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 34 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 26 -> 27
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 34
9999 mem: storing 1088 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1088
9999 mem: location 1088 is 0
9999 mem: location 1089 is 7
9999 mem: location 1248 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1088
9999 mem: storing 32 in location 1088
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1248 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1089
9999 mem: storing 7 in location 1089
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 42 -> 41
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 41 -> 42
 105 run: column <- add column, 1
9999 mem: location 1271 is 4
9999 mem: storing 5 in location 1271
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 5
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 105 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 42 -> 43
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 35 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 27 -> 28
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 35
9999 mem: storing 1090 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1090
9999 mem: location 1090 is 0
9999 mem: location 1091 is 7
9999 mem: location 1248 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1090
9999 mem: storing 32 in location 1090
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1248 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1091
9999 mem: storing 7 in location 1091
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 43 -> 42
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 42 -> 43
 105 run: column <- add column, 1
9999 mem: location 1271 is 5
9999 mem: storing 6 in location 1271
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 6
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 105 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 43 -> 44
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 36 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 28 -> 29
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 36
9999 mem: storing 1092 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1092
9999 mem: location 1092 is 0
9999 mem: location 1093 is 7
9999 mem: location 1248 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1092
9999 mem: storing 32 in location 1092
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1248 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1093
9999 mem: storing 7 in location 1093
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 44 -> 43
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 43 -> 44
 105 run: column <- add column, 1
9999 mem: location 1271 is 6
9999 mem: storing 7 in location 1271
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 7
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 105 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 44 -> 45
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 37 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 29 -> 30
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 37
9999 mem: storing 1094 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1094
9999 mem: location 1094 is 0
9999 mem: location 1095 is 7
9999 mem: location 1248 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1094
9999 mem: storing 32 in location 1094
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1248 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1095
9999 mem: storing 7 in location 1095
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 45 -> 44
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 44 -> 45
 105 run: column <- add column, 1
9999 mem: location 1271 is 7
9999 mem: storing 8 in location 1271
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 8
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 105 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 45 -> 46
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 38 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 30 -> 31
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 38
9999 mem: storing 1096 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 7
9999 mem: location 1248 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1096
9999 mem: storing 32 in location 1096
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1248 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1097
9999 mem: storing 7 in location 1097
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 46 -> 45
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 45 -> 46
 105 run: column <- add column, 1
9999 mem: location 1271 is 8
9999 mem: storing 9 in location 1271
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 9
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 105 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 46 -> 47
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 39 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 31 -> 32
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 39
9999 mem: storing 1098 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 7
9999 mem: location 1248 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1098
9999 mem: storing 32 in location 1098
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1248 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1099
9999 mem: storing 7 in location 1099
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 47 -> 46
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 46 -> 47
 105 run: column <- add column, 1
9999 mem: location 1271 is 9
9999 mem: storing 10 in location 1271
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 10
9999 mem: location 1272 is 9
9999 mem: storing 1 in location 1274
 105 run: jump-if done?, 
9999 mem: location 1274 is 1
9998 run: jumping to instruction 11
 105 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
 104 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1221 is 1012
9999 mem: location 1222 is 3
9999 mem: location 1224 is 0
9999 mem: location 1225 is 9
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1275
9999 mem: storing 7 in location 1276
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 47 -> 48
 105 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1279
 105 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1280
 105 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1281
 105 run: row <- add row, 1
9999 mem: location 1279 is 3
9999 mem: storing 4 in location 1279
 105 run: screen <- move-cursor screen, row, left
9999 mem: location 1278 is 1012
9999 mem: location 1279 is 4
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 48 -> 49
 106 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1271
 106 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 106 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 106 run: *row <- copy new-row
9999 mem: location 1271 is 4
9999 mem: location 1273 is 1015
9999 mem: storing 4 in location 1015
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 106 run: *column <- copy new-column
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 49 -> 48
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 48 -> 49
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1278 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 49 -> 50
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 106 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1282
 105 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1279 is 4
9999 mem: location 1282 is 5
9999 mem: storing 0 in location 1283
 105 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1283 is 0
9998 run: jump-if fell through
 105 run: screen <- move-cursor screen, row, left
9999 mem: location 1278 is 1012
9999 mem: location 1279 is 4
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 50 -> 51
 106 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1271
 106 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 106 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 106 run: *row <- copy new-row
9999 mem: location 1271 is 4
9999 mem: location 1273 is 1015
9999 mem: storing 4 in location 1015
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 106 run: *column <- copy new-column
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 51 -> 50
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 50 -> 51
 105 run: clear-line-delimited screen, left, right
9999 mem: location 1278 is 1012
9999 mem: location 1280 is 0
9999 mem: location 1281 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 51 -> 52
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1271
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1272
 106 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1273
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 0
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 106 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 52 -> 53
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/scenario-editor-can-undo-and-redo-delete
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 40 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 32 -> 33
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 40
9999 mem: storing 1100 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1101 is 7
9999 mem: location 1248 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1100
9999 mem: storing 32 in location 1100
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1248 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1101
9999 mem: storing 7 in location 1101
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 53 -> 52
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 52 -> 53
 106 run: column <- add column, 1
9999 mem: location 1271 is 0
9999 mem: storing 1 in location 1271
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 1
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 106 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 53 -> 54
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 41 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 33 -> 34
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 41
9999 mem: storing 1102 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1102
9999 mem: location 1102 is 0
9999 mem: location 1103 is 7
9999 mem: location 1248 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1102
9999 mem: storing 32 in location 1102
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1248 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1103
9999 mem: storing 7 in location 1103
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 54 -> 53
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 53 -> 54
 106 run: column <- add column, 1
9999 mem: location 1271 is 1
9999 mem: storing 2 in location 1271
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 2
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 106 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 54 -> 55
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 42 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 34 -> 35
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 42
9999 mem: storing 1104 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1104
9999 mem: location 1104 is 0
9999 mem: location 1105 is 7
9999 mem: location 1248 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1104
9999 mem: storing 32 in location 1104
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1248 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1105
9999 mem: storing 7 in location 1105
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 55 -> 54
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 54 -> 55
 106 run: column <- add column, 1
9999 mem: location 1271 is 2
9999 mem: storing 3 in location 1271
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 3
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 106 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 55 -> 56
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 43 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 35 -> 36
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 43
9999 mem: storing 1106 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1106
9999 mem: location 1106 is 0
9999 mem: location 1107 is 7
9999 mem: location 1248 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1106
9999 mem: storing 32 in location 1106
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1248 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1107
9999 mem: storing 7 in location 1107
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 56 -> 55
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 55 -> 56
 106 run: column <- add column, 1
9999 mem: location 1271 is 3
9999 mem: storing 4 in location 1271
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 4
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 106 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 56 -> 57
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 44 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 36 -> 37
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 44
9999 mem: storing 1108 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 7
9999 mem: location 1248 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1108
9999 mem: storing 32 in location 1108
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1248 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1109
9999 mem: storing 7 in location 1109
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 57 -> 56
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 56 -> 57
 106 run: column <- add column, 1
9999 mem: location 1271 is 4
9999 mem: storing 5 in location 1271
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 5
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 106 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 57 -> 58
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 45 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 37 -> 38
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 45
9999 mem: storing 1110 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1110
9999 mem: location 1110 is 0
9999 mem: location 1111 is 7
9999 mem: location 1248 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1110
9999 mem: storing 32 in location 1110
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1248 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1111
9999 mem: storing 7 in location 1111
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 58 -> 57
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 57 -> 58
 106 run: column <- add column, 1
9999 mem: location 1271 is 5
9999 mem: storing 6 in location 1271
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 6
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 106 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 58 -> 59
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 46 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 38 -> 39
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 46
9999 mem: storing 1112 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 7
9999 mem: location 1248 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1112
9999 mem: storing 32 in location 1112
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1248 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1113
9999 mem: storing 7 in location 1113
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 59 -> 58
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 58 -> 59
 106 run: column <- add column, 1
9999 mem: location 1271 is 6
9999 mem: storing 7 in location 1271
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 7
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 106 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 59 -> 60
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 47 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 39 -> 40
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 47
9999 mem: storing 1114 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 7
9999 mem: location 1248 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1114
9999 mem: storing 32 in location 1114
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1248 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1115
9999 mem: storing 7 in location 1115
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 60 -> 59
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 59 -> 60
 106 run: column <- add column, 1
9999 mem: location 1271 is 7
9999 mem: storing 8 in location 1271
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 8
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 106 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 60 -> 61
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 48 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 40 -> 41
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 48
9999 mem: storing 1116 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1116
9999 mem: location 1116 is 0
9999 mem: location 1117 is 7
9999 mem: location 1248 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1116
9999 mem: storing 32 in location 1116
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1248 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1117
9999 mem: storing 7 in location 1117
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 61 -> 60
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 60 -> 61
 106 run: column <- add column, 1
9999 mem: location 1271 is 8
9999 mem: storing 9 in location 1271
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 9
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 106 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 61 -> 62
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/scenario-editor-can-undo-and-redo-delete
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 49 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 41 -> 42
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 49
9999 mem: storing 1118 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1118
9999 mem: location 1118 is 0
9999 mem: location 1119 is 7
9999 mem: location 1248 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1118
9999 mem: storing 32 in location 1118
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1248 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1119
9999 mem: storing 7 in location 1119
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 62 -> 61
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 61 -> 62
 106 run: column <- add column, 1
9999 mem: location 1271 is 9
9999 mem: storing 10 in location 1271
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 10
9999 mem: location 1272 is 9
9999 mem: storing 1 in location 1274
 106 run: jump-if done?, 
9999 mem: location 1274 is 1
9998 run: jumping to instruction 11
 106 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1279 is 4
9999 mem: storing 5 in location 1279
 105 run: jump 
9998 run: jumping to instruction 9
 105 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1279 is 5
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1283
 105 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1283 is 1
9998 run: jumping to instruction 15
 105 run: reply screen:address:shared:screen
9999 mem: location 1278 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: reply screen/same-as-ingredient:0
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply screen:address:shared:screen, editor:address:shared:editor-data
9999 mem: location 1163 is 1012
9999 mem: location 1164 is 1147
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 2
 102 run: assume-console [
    type [abcdef]
    left-click 1, 2
    press delete
    press backspace
    press delete
    press delete
  ]
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"abcdef": "literal-string"}
9992 load: after rewriting: type [abcdef]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"1": "literal"}
9993 parse:   ingredient: {"2": "literal"}
9992 load: after rewriting: left-click 1, 2
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"delete": <>}
9992 load: after rewriting: press delete
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"backspace": <>}
9992 load: after rewriting: press backspace
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"delete": <>}
9992 load: after rewriting: press delete
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"delete": <>}
9992 load: after rewriting: press delete
9999 mem: storing 'type' event starting at 1286
9999 mem: storing 'text' tag at 1286
9999 mem: storing character 97 at 1287
9999 mem: storing 'text' tag at 1290
9999 mem: storing character 98 at 1291
9999 mem: storing 'text' tag at 1294
9999 mem: storing character 99 at 1295
9999 mem: storing 'text' tag at 1298
9999 mem: storing character 100 at 1299
9999 mem: storing 'text' tag at 1302
9999 mem: storing character 101 at 1303
9999 mem: storing 'text' tag at 1306
9999 mem: storing character 102 at 1307
9999 mem: storing 'left-click' event starting at 1310
9999 mem: storing 'press' event starting at 1314
9999 mem: storing 'press' event starting at 1318
9999 mem: storing 'press' event starting at 1322
9999 mem: storing 'press' event starting at 1326
9999 mem: storing console in 1330
9999 mem: storing console data in 1332
 102 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1330
9999 mem: location 2 is 1147
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1333
9999 mem: storing 14 in location 1334
 103 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 62 -> 63
 103 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1337
9999 mem: incrementing refcount of 1330: 0 -> 1
 103 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 6 -> 7
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1340
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 63 -> 64
 104 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 104 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 104 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 104 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 104 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 104 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 104 run: *column <- copy new-column
9999 mem: location 1223 is 0
9999 mem: location 1225 is 1016
9999 mem: storing 0 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 64 -> 63
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 63 -> 64
 103 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1330
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1256
9999 mem: incrementing refcount of 1330: 1 -> 2
 104 run: jump-unless console, 
9999 mem: location 1256 is 1330
9998 run: jump-unless fell through
 104 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 0
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1331
9999 mem: storing 1331 in location 1257
 104 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 0
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1332 is 1284
9999 mem: storing 1284 in location 1258
9999 mem: incrementing refcount of 1284: 0 -> 1
 104 run: max:number <- length *buf
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9999 mem: storing 11 in location 1259
 104 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 0
9999 mem: location 1259 is 11
9999 mem: storing 0 in location 1260
 104 run: jump-unless done?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 12
 104 run: result <- index *buf, *current-event-index
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9998 run: base address is 1285
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 0
9998 run: address to copy is 1286
9998 run: its type is event
9999 mem: location 1286 is 0
9999 mem: location 1287 is 97
9999 mem: location 1288 is 0
9999 mem: location 1289 is 0
9999 mem: storing 0 in location 1262
9999 mem: storing 97 in location 1263
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 104 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 0
9999 mem: location 1257 is 1331
9999 mem: storing 1 in location 1331
 104 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1262 is 0
9999 mem: location 1263 is 97
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1256 is 1330
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 97, 0, 0]
9998 run: result 1 is 1330
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1341
9999 mem: storing 97 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1330: 2 -> 1
9999 mem: storing 1330 in location 1337
9999 mem: incrementing refcount of 1330: 1 -> 2
9999 mem: storing 1 in location 1345
9999 mem: storing 0 in location 1346
 103 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 103 run: jump-if quit?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1341 is 0
9999 mem: location 1342 is 97
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1347
 103 run: jump-unless t, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 18
 103 run: jump-if t, 
9999 mem: location 1347 is 0
9998 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 mem: location 1341 is 0
9999 mem: location 1342 is 97
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1349
9999 mem: storing 85 in location 1350
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 64 -> 65
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 7 -> 8
 104 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1354
9999 mem: storing 97 in location 1355
9999 mem: storing 0 in location 1356
9999 mem: storing 0 in location 1357
 104 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1358
 104 run: jump-if editor, 1:offset
9999 mem: location 1353 is 1147
9998 run: jumping to instruction 7
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 65 -> 66
 105 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 105 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 105 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1359
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 66 -> 67
 105 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 105 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 105 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1360
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1361
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1362
 104 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1363
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1364
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1365
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1366
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1367
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1354 is 0
9999 mem: location 1355 is 97
9999 mem: location 1356 is 0
9999 mem: location 1357 is 0
9999 mem: storing 1355 in location 1368
 104 run: jump-unless c, 
9999 mem: location 1368 is 1355
9998 run: jump-unless fell through
 104 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 104 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 97
9999 mem: storing 0 in location 1369
 104 run: jump-unless redo?, 
9999 mem: location 1369 is 0
9998 run: jumping to instruction 61
 104 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 97
9999 mem: storing 0 in location 1380
 104 run: jump-unless undo?, 
9999 mem: location 1380 is 0
9998 run: jumping to instruction 108
 104 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 97
9999 mem: storing 0 in location 1385
 104 run: jump-unless page-up?, 
9999 mem: location 1385 is 0
9998 run: jumping to instruction 149
 104 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 97
9999 mem: storing 0 in location 1401
 104 run: jump-unless page-down?, 
9999 mem: location 1401 is 0
9998 run: jumping to instruction 190
 104 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 97
9999 mem: storing 0 in location 1402
 104 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1402 is 0
9998 run: jumping to instruction 210
 104 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 97
9999 mem: storing 0 in location 1407
 104 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1407 is 0
9998 run: jumping to instruction 230
 104 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 97
9999 mem: storing 0 in location 1408
 104 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1408 is 0
9998 run: jumping to instruction 268
 104 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 97
9999 mem: storing 0 in location 1409
 104 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1409 is 0
9998 run: jumping to instruction 306
 104 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 97
9999 mem: storing 0 in location 1410
 104 run: jump-unless delete-previous-character?, 
9999 mem: location 1410 is 0
9998 run: jumping to instruction 346
 104 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 97
9999 mem: storing 0 in location 1414
 104 run: jump-unless tab?, 
9999 mem: location 1414 is 0
9998 run: jumping to instruction 383
 104 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 97
9999 mem: storing 0 in location 1418
 104 run: jump-unless newline?, 
9999 mem: location 1418 is 0
9998 run: jumping to instruction 402
 104 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 97
9999 mem: storing 1 in location 1421
 104 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1358
 104 run: jump-if regular-character?, 1:offset
9999 mem: location 1421 is 1
9998 run: jumping to instruction 407
 104 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1403
9999 mem: incrementing refcount of 1169: 8 -> 9
 104 run: cursor-before:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1363 is 1151
9999 mem: location 1151 is 1169
9999 mem: storing 1169 in location 1415
9999 mem: incrementing refcount of 1169: 9 -> 10
 104 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1353 is 1147
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 97
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1436
9999 mem: storing 31 in location 1437
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1439
9999 mem: incrementing refcount of 1147: 8 -> 9
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1440
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1441
9999 mem: incrementing refcount of 1012: 67 -> 68
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1442
 105 run: insert_2 c, *before-cursor
9999 mem: location 1440 is 97
9999 mem: location 1442 is 1151
9999 mem: location 1151 is 1169
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1163
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1164
9999 mem: incrementing refcount of 1169: 10 -> 11
 106 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1469
9999 mem: storing 1469 in location 1165
9999 mem: incrementing refcount of 1469: 0 -> 1
 106 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1165 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 0
9999 mem: location 1471 is 0
9999 mem: location 1472 is 0
9999 mem: location 1165 is 1469
9999 mem: skipping refcount at 1469
9998 run: address to copy is 1470
9999 mem: storing 1470 in location 1166
 106 run: *val <- copy x
9999 mem: location 1163 is 97
9999 mem: location 1166 is 1470
9999 mem: storing 97 in location 1470
 106 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1164 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1164 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 0
9999 mem: storing 0 in location 1167
 106 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1164 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1164 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9999 mem: storing 1171 in location 1168
 106 run: *y <- copy new-node
9999 mem: location 1165 is 1469
9999 mem: location 1168 is 1171
9999 mem: storing 1469 in location 1171
9999 mem: incrementing refcount of 1469: 1 -> 2
 106 run: y <- get-address *new-node, prev:offset
9999 mem: location 1165 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 0
9999 mem: location 1472 is 0
9999 mem: location 1165 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1472
9999 mem: storing 1472 in location 1168
 106 run: *y <- copy in
9999 mem: location 1164 is 1169
9999 mem: location 1168 is 1472
9999 mem: storing 1169 in location 1472
9999 mem: incrementing refcount of 1169: 11 -> 12
 106 run: y <- get-address *new-node, next:offset
9999 mem: location 1165 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 0
9999 mem: location 1472 is 1169
9999 mem: location 1165 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9999 mem: storing 1471 in location 1168
 106 run: *y <- copy next-node
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1471
9999 mem: storing 0 in location 1471
 106 run: jump-if next-node, 1:offset
9999 mem: location 1167 is 0
9998 run: jump-if fell through
 106 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1164 is 1169
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
 105 run: *before-cursor <- next_2 *before-cursor
9999 mem: location 1442 is 1151
9999 mem: location 1151 is 1169
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1216
9999 mem: incrementing refcount of 1169: 12 -> 13
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1169
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 1469
9999 mem: location 1172 is 0
9999 mem: location 1216 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 1469
9999 mem: storing 1469 in location 1217
9999 mem: incrementing refcount of 1469: 2 -> 3
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1469
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1469
9999 mem: location 1442 is 1151
9999 mem: decrementing refcount of 1169: 13 -> 12
9999 mem: storing 1469 in location 1151
9999 mem: incrementing refcount of 1469: 3 -> 4
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1443
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1444
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1445
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1446
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1443 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1447
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1444 is 1156
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1448
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1441 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 68 -> 69
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 106 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1449
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1441 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 69 -> 70
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 106 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1450
 105 run: wrap-column:number <- subtract right, 1
9999 mem: location 1446 is 9
9999 mem: storing 8 in location 1451
 105 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1444 is 1156
9999 mem: location 1156 is 0
9999 mem: location 1451 is 8
9999 mem: storing 0 in location 1452
 105 run: jump-unless at-wrap?, 
9999 mem: location 1452 is 0
9998 run: jumping to instruction 41
 105 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1444 is 1156
9999 mem: location 1156 is 0
9999 mem: location 1444 is 1156
9999 mem: storing 1 in location 1156
 105 run: next:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1442 is 1151
9999 mem: location 1151 is 1469
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1216
9999 mem: incrementing refcount of 1469: 4 -> 5
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1469
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 0
9999 mem: location 1472 is 1169
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 0
9999 mem: storing 0 in location 1217
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1459
 105 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1459 is 0
9999 mem: storing 1 in location 1460
 105 run: jump-unless at-end?, 
9999 mem: location 1460 is 1
9998 run: jump-unless fell through
 105 run: bottom:number <- subtract screen-height, 1
9999 mem: location 1450 is 5
9999 mem: storing 4 in location 1461
 105 run: at-bottom?:boolean <- equal save-row, bottom
9999 mem: location 1447 is 1
9999 mem: location 1461 is 4
9999 mem: storing 0 in location 1462
 105 run: at-right?:boolean <- equal save-column, right
9999 mem: location 1448 is 0
9999 mem: location 1446 is 9
9999 mem: storing 0 in location 1463
 105 run: overflow?:boolean <- and at-bottom?, at-right?
9999 mem: location 1462 is 0
9999 mem: location 1463 is 0
9999 mem: storing 0 in location 1464
 105 run: jump-if overflow?, 
9999 mem: location 1464 is 0
9998 run: jump-if fell through
 105 run: move-cursor screen, save-row, save-column
9999 mem: location 1441 is 1012
9999 mem: location 1447 is 1
9999 mem: location 1448 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 70 -> 71
 106 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 106 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 106 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 106 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 106 run: *column <- copy new-column
9999 mem: location 1223 is 0
9999 mem: location 1225 is 1016
9999 mem: storing 0 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: print screen, c
9999 mem: location 1441 is 1012
9999 mem: location 1440 is 97
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 71 -> 72
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 97
  90 print-character: 97 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 97
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 42 -> 43
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 97
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 10
9999 mem: storing 1040 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1040
9999 mem: location 1040 is 32
9999 mem: location 1041 is 7
9999 mem: location 1248 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 97
9999 mem: location 1249 is 1040
9999 mem: storing 97 in location 1040
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1248 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1041
9999 mem: storing 7 in location 1041
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1458
 105 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean
9999 mem: location 1439 is 1147
9999 mem: location 1441 is 1012
9999 mem: location 1458 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1147: 9 -> 8
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 8 -> 9
9999 mem: decrementing refcount of 1012: 72 -> 71
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 71 -> 72
9999 mem: storing 0 in location 1358
 104 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1405
9999 mem: incrementing refcount of 1169: 12 -> 13
 104 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1372
 104 run: jump-unless *undo, 
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 0
9998 run: jumping to instruction 429
 104 run: insert-from:address:shared:duplex-list:character <- next_2 cursor-before
9999 mem: location 1415 is 1169
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1216
9999 mem: incrementing refcount of 1169: 13 -> 14
 105 run: jump-if in, 1:offset
9999 mem: location 1216 is 1169
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1216 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 1469
9999 mem: location 1172 is 0
9999 mem: location 1216 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 1469
9999 mem: storing 1469 in location 1217
9999 mem: incrementing refcount of 1469: 5 -> 6
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1469
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1469
9999 mem: storing 1469 in location 1379
9999 mem: incrementing refcount of 1469: 6 -> 7
 104 run: insert-to:address:shared:duplex-list:character <- next_2 insert-from
9999 mem: location 1379 is 1469
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1216
9999 mem: incrementing refcount of 1469: 7 -> 8
 105 run: jump-if in, 1:offset
9999 mem: location 1216 is 1469
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 0
9999 mem: location 1472 is 1169
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 0
9999 mem: storing 0 in location 1217
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: storing 0 in location 1417
 104 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1000 in location 1371
9999 mem: incrementing refcount of 1000: 0 -> 1
 104 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 1/coalesce
9999 mem: location 1366 is 1
9999 mem: location 1367 is 0
9999 mem: location 1403 is 1169
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 1
9999 mem: location 1405 is 1169
9999 mem: location 1379 is 1469
9999 mem: location 1417 is 0
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 0 in location 1001
9999 mem: storing 1 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 1169 in location 1004
9999 mem: storing 1 in location 1005
9999 mem: storing 1 in location 1006
9999 mem: storing 1169 in location 1007
9999 mem: storing 1469 in location 1008
9999 mem: storing 0 in location 1009
9999 mem: storing 1 in location 1010
 104 run: editor <- add-operation editor, op
9999 mem: location 1353 is 1147
9999 mem: location 1371 is 1000
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1473
9999 mem: storing 5 in location 1474
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1476
9999 mem: incrementing refcount of 1147: 9 -> 10
 105 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1477
9999 mem: incrementing refcount of 1000: 1 -> 2
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1476 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1476 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1478
 105 run: *undo <- push_4 op, *undo
9999 mem: location 1477 is 1000
9999 mem: location 1478 is 1158
9999 mem: location 1158 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1221
9999 mem: incrementing refcount of 1000: 2 -> 3
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1222
 106 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1480
9999 mem: storing 1480 in location 1223
9999 mem: incrementing refcount of 1480: 0 -> 1
 106 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1223 is 1480
9999 mem: skipping refcount at 1480
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1481 is 0
9999 mem: location 1482 is 0
9999 mem: location 1223 is 1480
9999 mem: skipping refcount at 1480
9998 run: address to copy is 1481
9999 mem: storing 1481 in location 1224
 106 run: *val <- copy x
9999 mem: location 1221 is 1000
9999 mem: location 1224 is 1481
9999 mem: storing 1000 in location 1481
9999 mem: incrementing refcount of 1000: 3 -> 4
 106 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1223 is 1480
9999 mem: skipping refcount at 1480
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1481 is 1000
9999 mem: location 1482 is 0
9999 mem: location 1223 is 1480
9999 mem: skipping refcount at 1480
9999 type: type deduced to be address$
9998 run: address to copy is 1482
9999 mem: storing 1482 in location 1225
 106 run: *next <- copy in
9999 mem: location 1222 is 0
9999 mem: location 1225 is 1482
9999 mem: storing 0 in location 1482
 106 run: reply result
9999 mem: location 1223 is 1480
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1480
9999 mem: location 1478 is 1158
9999 mem: storing 1480 in location 1158
9999 mem: incrementing refcount of 1480: 1 -> 2
 105 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1476 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1476 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1479
 105 run: *redo <- copy 0
9999 mem: location 1479 is 1159
9999 mem: storing 0 in location 1159
 105 run: reply editor/same-as-ingredient:0
9999 mem: location 1476 is 1147
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1147: 10 -> 9
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 9 -> 10
 104 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1352 is 1012
9999 mem: location 1353 is 1147
9999 mem: location 1358 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 72 -> 71
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 71 -> 72
9999 mem: decrementing refcount of 1147: 10 -> 9
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 9 -> 10
9999 mem: storing 0 in location 1348
 103 run: jump-unless go-render?, 
9999 mem: location 1348 is 0
9998 run: jumping to instruction 25
 103 run: jump 
9998 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1340
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 1
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 72 -> 73
 104 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 104 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1223
 104 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 104 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 104 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 104 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 104 run: *column <- copy new-column
9999 mem: location 1223 is 1
9999 mem: location 1225 is 1016
9999 mem: storing 1 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 73 -> 72
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 72 -> 73
 103 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1330
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1256
9999 mem: incrementing refcount of 1330: 2 -> 3
 104 run: jump-unless console, 
9999 mem: location 1256 is 1330
9998 run: jump-unless fell through
 104 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 1
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1331
9999 mem: storing 1331 in location 1257
 104 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 1
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1332 is 1284
9999 mem: storing 1284 in location 1258
9999 mem: incrementing refcount of 1284: 1 -> 2
 104 run: max:number <- length *buf
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9999 mem: storing 11 in location 1259
 104 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 1
9999 mem: location 1259 is 11
9999 mem: storing 0 in location 1260
 104 run: jump-unless done?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 12
 104 run: result <- index *buf, *current-event-index
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9998 run: base address is 1285
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 1
9998 run: address to copy is 1290
9998 run: its type is event
9999 mem: location 1290 is 0
9999 mem: location 1291 is 98
9999 mem: location 1292 is 0
9999 mem: location 1293 is 0
9999 mem: storing 0 in location 1262
9999 mem: storing 98 in location 1263
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 104 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 1
9999 mem: location 1257 is 1331
9999 mem: storing 2 in location 1331
 104 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1262 is 0
9999 mem: location 1263 is 98
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1256 is 1330
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 98, 0, 0]
9998 run: result 1 is 1330
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1341
9999 mem: storing 98 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1330: 3 -> 2
9999 mem: storing 1330 in location 1337
9999 mem: incrementing refcount of 1330: 2 -> 3
9999 mem: storing 1 in location 1345
9999 mem: storing 0 in location 1346
 103 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 103 run: jump-if quit?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1341 is 0
9999 mem: location 1342 is 98
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1347
 103 run: jump-unless t, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 18
 103 run: jump-if t, 
9999 mem: location 1347 is 0
9998 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 mem: location 1341 is 0
9999 mem: location 1342 is 98
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 73 -> 74
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 10 -> 11
 104 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1354
9999 mem: storing 98 in location 1355
9999 mem: storing 0 in location 1356
9999 mem: storing 0 in location 1357
 104 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1358
 104 run: jump-if editor, 1:offset
9999 mem: location 1353 is 1147
9998 run: jumping to instruction 7
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 74 -> 75
 105 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 105 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 105 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1359
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 75 -> 76
 105 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 105 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 105 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1360
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1361
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1362
 104 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1363
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1364
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1365
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1366
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1367
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1354 is 0
9999 mem: location 1355 is 98
9999 mem: location 1356 is 0
9999 mem: location 1357 is 0
9999 mem: storing 1355 in location 1368
 104 run: jump-unless c, 
9999 mem: location 1368 is 1355
9998 run: jump-unless fell through
 104 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 104 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 98
9999 mem: storing 0 in location 1369
 104 run: jump-unless redo?, 
9999 mem: location 1369 is 0
9998 run: jumping to instruction 61
 104 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 98
9999 mem: storing 0 in location 1380
 104 run: jump-unless undo?, 
9999 mem: location 1380 is 0
9998 run: jumping to instruction 108
 104 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 98
9999 mem: storing 0 in location 1385
 104 run: jump-unless page-up?, 
9999 mem: location 1385 is 0
9998 run: jumping to instruction 149
 104 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 98
9999 mem: storing 0 in location 1401
 104 run: jump-unless page-down?, 
9999 mem: location 1401 is 0
9998 run: jumping to instruction 190
 104 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 98
9999 mem: storing 0 in location 1402
 104 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1402 is 0
9998 run: jumping to instruction 210
 104 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 98
9999 mem: storing 0 in location 1407
 104 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1407 is 0
9998 run: jumping to instruction 230
 104 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 98
9999 mem: storing 0 in location 1408
 104 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1408 is 0
9998 run: jumping to instruction 268
 104 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 98
9999 mem: storing 0 in location 1409
 104 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1409 is 0
9998 run: jumping to instruction 306
 104 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 98
9999 mem: storing 0 in location 1410
 104 run: jump-unless delete-previous-character?, 
9999 mem: location 1410 is 0
9998 run: jumping to instruction 346
 104 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 98
9999 mem: storing 0 in location 1414
 104 run: jump-unless tab?, 
9999 mem: location 1414 is 0
9998 run: jumping to instruction 383
 104 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 98
9999 mem: storing 0 in location 1418
 104 run: jump-unless newline?, 
9999 mem: location 1418 is 0
9998 run: jumping to instruction 402
 104 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 98
9999 mem: storing 1 in location 1421
 104 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1358
 104 run: jump-if regular-character?, 1:offset
9999 mem: location 1421 is 1
9998 run: jumping to instruction 407
 104 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1403
9999 mem: incrementing refcount of 1169: 14 -> 15
 104 run: cursor-before:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1363 is 1151
9999 mem: location 1151 is 1469
9999 mem: storing 1469 in location 1415
9999 mem: incrementing refcount of 1469: 8 -> 9
 104 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1353 is 1147
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 98
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1439
9999 mem: incrementing refcount of 1147: 11 -> 12
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1440
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1441
9999 mem: incrementing refcount of 1012: 76 -> 77
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1442
 105 run: insert_2 c, *before-cursor
9999 mem: location 1440 is 98
9999 mem: location 1442 is 1151
9999 mem: location 1151 is 1469
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9990 schedule: insert_2/insert-at-cursor/handle-keyboard-event/editor-event-loop/scenario-editor-can-undo-and-redo-delete
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1163
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1164
9999 mem: incrementing refcount of 1469: 9 -> 10
 106 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1483
9999 mem: storing 1483 in location 1165
9999 mem: incrementing refcount of 1483: 0 -> 1
 106 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1165 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 0
9999 mem: location 1485 is 0
9999 mem: location 1486 is 0
9999 mem: location 1165 is 1483
9999 mem: skipping refcount at 1483
9998 run: address to copy is 1484
9999 mem: storing 1484 in location 1166
 106 run: *val <- copy x
9999 mem: location 1163 is 98
9999 mem: location 1166 is 1484
9999 mem: storing 98 in location 1484
 106 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1164 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 0
9999 mem: location 1472 is 1169
9999 mem: location 1164 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 0
9999 mem: storing 0 in location 1167
 106 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1164 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 0
9999 mem: location 1472 is 1169
9999 mem: location 1164 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9999 mem: storing 1471 in location 1168
 106 run: *y <- copy new-node
9999 mem: location 1165 is 1483
9999 mem: location 1168 is 1471
9999 mem: storing 1483 in location 1471
9999 mem: incrementing refcount of 1483: 1 -> 2
 106 run: y <- get-address *new-node, prev:offset
9999 mem: location 1165 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 0
9999 mem: location 1486 is 0
9999 mem: location 1165 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1486
9999 mem: storing 1486 in location 1168
 106 run: *y <- copy in
9999 mem: location 1164 is 1469
9999 mem: location 1168 is 1486
9999 mem: storing 1469 in location 1486
9999 mem: incrementing refcount of 1469: 10 -> 11
 106 run: y <- get-address *new-node, next:offset
9999 mem: location 1165 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 0
9999 mem: location 1486 is 1469
9999 mem: location 1165 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9999 mem: storing 1485 in location 1168
 106 run: *y <- copy next-node
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1485
9999 mem: storing 0 in location 1485
 106 run: jump-if next-node, 1:offset
9999 mem: location 1167 is 0
9998 run: jump-if fell through
 106 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1164 is 1469
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
 105 run: *before-cursor <- next_2 *before-cursor
9999 mem: location 1442 is 1151
9999 mem: location 1151 is 1469
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1216
9999 mem: incrementing refcount of 1469: 11 -> 12
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1469
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1483
9999 mem: location 1472 is 1169
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1483
9999 mem: storing 1483 in location 1217
9999 mem: incrementing refcount of 1483: 2 -> 3
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1483
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1483
9999 mem: location 1442 is 1151
9999 mem: decrementing refcount of 1469: 12 -> 11
9999 mem: storing 1483 in location 1151
9999 mem: incrementing refcount of 1483: 3 -> 4
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1443
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1444
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1445
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1446
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1443 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1447
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1444 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1448
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1441 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 77 -> 78
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 106 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1449
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1441 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 78 -> 79
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 106 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1450
 105 run: wrap-column:number <- subtract right, 1
9999 mem: location 1446 is 9
9999 mem: storing 8 in location 1451
 105 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1444 is 1156
9999 mem: location 1156 is 1
9999 mem: location 1451 is 8
9999 mem: storing 0 in location 1452
 105 run: jump-unless at-wrap?, 
9999 mem: location 1452 is 0
9998 run: jumping to instruction 41
 105 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1444 is 1156
9999 mem: location 1156 is 1
9999 mem: location 1444 is 1156
9999 mem: storing 2 in location 1156
 105 run: next:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1442 is 1151
9999 mem: location 1151 is 1483
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1216
9999 mem: incrementing refcount of 1483: 4 -> 5
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1483
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 0
9999 mem: location 1486 is 1469
9999 mem: location 1216 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1485 is 0
9999 mem: storing 0 in location 1217
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1459
 105 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1459 is 0
9999 mem: storing 1 in location 1460
 105 run: jump-unless at-end?, 
9999 mem: location 1460 is 1
9998 run: jump-unless fell through
 105 run: bottom:number <- subtract screen-height, 1
9999 mem: location 1450 is 5
9999 mem: storing 4 in location 1461
 105 run: at-bottom?:boolean <- equal save-row, bottom
9999 mem: location 1447 is 1
9999 mem: location 1461 is 4
9999 mem: storing 0 in location 1462
 105 run: at-right?:boolean <- equal save-column, right
9999 mem: location 1448 is 1
9999 mem: location 1446 is 9
9999 mem: storing 0 in location 1463
 105 run: overflow?:boolean <- and at-bottom?, at-right?
9999 mem: location 1462 is 0
9999 mem: location 1463 is 0
9999 mem: storing 0 in location 1464
 105 run: jump-if overflow?, 
9999 mem: location 1464 is 0
9998 run: jump-if fell through
 105 run: move-cursor screen, save-row, save-column
9999 mem: location 1441 is 1012
9999 mem: location 1447 is 1
9999 mem: location 1448 is 1
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 79 -> 80
 106 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 106 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1223
 106 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 106 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 106 run: *column <- copy new-column
9999 mem: location 1223 is 1
9999 mem: location 1225 is 1016
9999 mem: storing 1 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: print screen, c
9999 mem: location 1441 is 1012
9999 mem: location 1440 is 98
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 80 -> 81
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 98
  90 print-character: 98 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 98
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 43 -> 44
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 98
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 11
9999 mem: storing 1042 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 98
9999 mem: location 1249 is 1042
9999 mem: storing 98 in location 1042
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1043
9999 mem: storing 7 in location 1043
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1458
 105 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean
9999 mem: location 1439 is 1147
9999 mem: location 1441 is 1012
9999 mem: location 1458 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1147: 12 -> 11
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 11 -> 12
9999 mem: decrementing refcount of 1012: 81 -> 80
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 80 -> 81
9999 mem: storing 0 in location 1358
 104 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1405
9999 mem: incrementing refcount of 1169: 15 -> 16
 104 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1372
 104 run: jump-unless *undo, 
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1480
9998 run: jump-unless fell through
 104 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1480
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1480 in location 1216
9999 mem: incrementing refcount of 1480: 2 -> 3
 105 run: result <- get *in, value:offset
9999 mem: location 1216 is 1480
9999 mem: skipping refcount at 1480
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1481 is 1000
9999 mem: location 1482 is 0
9999 mem: location 1216 is 1480
9999 mem: skipping refcount at 1480
9998 run: address to copy is 1481
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1481 is 1000
9999 mem: storing 1000 in location 1217
9999 mem: incrementing refcount of 1000: 4 -> 5
 105 run: reply result:_elem
9999 mem: location 1217 is 1000
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1371
9999 mem: incrementing refcount of 1000: 5 -> 6
 104 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 0
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1011 is 0
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1002 in location 1378
 104 run: jump-unless typing, 
9999 mem: location 1378 is 1002
9998 run: jump-unless fell through
 104 run: previous-coalesce-tag:number <- get *typing, tag:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 1
9999 mem: storing 1 in location 1395
 104 run: jump-unless previous-coalesce-tag, 
9999 mem: location 1395 is 1
9998 run: jump-unless fell through
 104 run: insert-until:address:address:shared:duplex-list:character <- get-address *typing, insert-until:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1416
 104 run: *insert-until <- next_2 *before-cursor
9999 mem: location 1363 is 1151
9999 mem: location 1151 is 1483
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1216
9999 mem: incrementing refcount of 1483: 5 -> 6
 105 run: jump-if in, 1:offset
9999 mem: location 1216 is 1483
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1216 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 0
9999 mem: location 1486 is 1469
9999 mem: location 1216 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1485 is 0
9999 mem: storing 0 in location 1217
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: location 1416 is 1009
9999 mem: storing 0 in location 1009
 104 run: after-row:address:number <- get-address *typing, after-row:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1005
9999 mem: storing 1005 in location 1397
 104 run: *after-row <- copy *cursor-row
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1397 is 1005
9999 mem: storing 1 in location 1005
 104 run: after-column:address:number <- get-address *typing, after-column:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1398
 104 run: *after-column <- copy *cursor-column
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 2
9999 mem: location 1398 is 1006
9999 mem: storing 2 in location 1006
 104 run: after-top:address:address:shared:duplex-list:character <- get-address *typing, after-top-of-screen:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 2
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1399
 104 run: *after-top <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: location 1399 is 1007
9999 mem: decrementing refcount of 1169: 16 -> 15
9999 mem: storing 1169 in location 1007
9999 mem: incrementing refcount of 1169: 15 -> 16
 104 run: jump +done-adding-insert-operation:label
9998 run: jumping to instruction 436
 104 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1352 is 1012
9999 mem: location 1353 is 1147
9999 mem: location 1358 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 81 -> 80
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 80 -> 81
9999 mem: decrementing refcount of 1147: 12 -> 11
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 11 -> 12
9999 mem: storing 0 in location 1348
 103 run: jump-unless go-render?, 
9999 mem: location 1348 is 0
9998 run: jumping to instruction 25
 103 run: jump 
9998 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1340
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 2
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 81 -> 82
 104 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 104 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1223
 104 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 104 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 104 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 104 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 104 run: *column <- copy new-column
9999 mem: location 1223 is 2
9999 mem: location 1225 is 1016
9999 mem: storing 2 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 82 -> 81
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 81 -> 82
 103 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1330
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1256
9999 mem: incrementing refcount of 1330: 3 -> 4
 104 run: jump-unless console, 
9999 mem: location 1256 is 1330
9998 run: jump-unless fell through
 104 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 2
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1331
9999 mem: storing 1331 in location 1257
 104 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 2
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1332 is 1284
9999 mem: storing 1284 in location 1258
9999 mem: incrementing refcount of 1284: 2 -> 3
 104 run: max:number <- length *buf
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9999 mem: storing 11 in location 1259
 104 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 2
9999 mem: location 1259 is 11
9999 mem: storing 0 in location 1260
 104 run: jump-unless done?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 12
 104 run: result <- index *buf, *current-event-index
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9998 run: base address is 1285
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 2
9998 run: address to copy is 1294
9998 run: its type is event
9999 mem: location 1294 is 0
9999 mem: location 1295 is 99
9999 mem: location 1296 is 0
9999 mem: location 1297 is 0
9999 mem: storing 0 in location 1262
9999 mem: storing 99 in location 1263
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 104 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 2
9999 mem: location 1257 is 1331
9999 mem: storing 3 in location 1331
 104 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1262 is 0
9999 mem: location 1263 is 99
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1256 is 1330
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 99, 0, 0]
9998 run: result 1 is 1330
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1341
9999 mem: storing 99 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1330: 4 -> 3
9999 mem: storing 1330 in location 1337
9999 mem: incrementing refcount of 1330: 3 -> 4
9999 mem: storing 1 in location 1345
9999 mem: storing 0 in location 1346
 103 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 103 run: jump-if quit?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1341 is 0
9999 mem: location 1342 is 99
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1347
 103 run: jump-unless t, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 18
 103 run: jump-if t, 
9999 mem: location 1347 is 0
9998 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 mem: location 1341 is 0
9999 mem: location 1342 is 99
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 82 -> 83
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 12 -> 13
 104 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1354
9999 mem: storing 99 in location 1355
9999 mem: storing 0 in location 1356
9999 mem: storing 0 in location 1357
 104 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1358
 104 run: jump-if editor, 1:offset
9999 mem: location 1353 is 1147
9998 run: jumping to instruction 7
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 83 -> 84
 105 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 105 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 105 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1359
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 84 -> 85
 105 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 105 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 105 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1360
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1361
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1362
 104 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1363
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1364
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1365
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1366
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1367
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1354 is 0
9999 mem: location 1355 is 99
9999 mem: location 1356 is 0
9999 mem: location 1357 is 0
9999 mem: storing 1355 in location 1368
 104 run: jump-unless c, 
9999 mem: location 1368 is 1355
9998 run: jump-unless fell through
 104 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 104 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 99
9999 mem: storing 0 in location 1369
 104 run: jump-unless redo?, 
9999 mem: location 1369 is 0
9998 run: jumping to instruction 61
 104 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 99
9999 mem: storing 0 in location 1380
 104 run: jump-unless undo?, 
9999 mem: location 1380 is 0
9998 run: jumping to instruction 108
 104 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 99
9999 mem: storing 0 in location 1385
 104 run: jump-unless page-up?, 
9999 mem: location 1385 is 0
9998 run: jumping to instruction 149
 104 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 99
9999 mem: storing 0 in location 1401
 104 run: jump-unless page-down?, 
9999 mem: location 1401 is 0
9998 run: jumping to instruction 190
 104 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 99
9999 mem: storing 0 in location 1402
 104 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1402 is 0
9998 run: jumping to instruction 210
 104 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 99
9999 mem: storing 0 in location 1407
 104 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1407 is 0
9998 run: jumping to instruction 230
 104 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 99
9999 mem: storing 0 in location 1408
 104 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1408 is 0
9998 run: jumping to instruction 268
 104 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 99
9999 mem: storing 0 in location 1409
 104 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1409 is 0
9998 run: jumping to instruction 306
 104 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 99
9999 mem: storing 0 in location 1410
 104 run: jump-unless delete-previous-character?, 
9999 mem: location 1410 is 0
9998 run: jumping to instruction 346
 104 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 99
9999 mem: storing 0 in location 1414
 104 run: jump-unless tab?, 
9999 mem: location 1414 is 0
9998 run: jumping to instruction 383
 104 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 99
9999 mem: storing 0 in location 1418
 104 run: jump-unless newline?, 
9999 mem: location 1418 is 0
9998 run: jumping to instruction 402
 104 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 99
9999 mem: storing 1 in location 1421
 104 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1358
 104 run: jump-if regular-character?, 1:offset
9999 mem: location 1421 is 1
9998 run: jumping to instruction 407
 104 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1403
9999 mem: incrementing refcount of 1169: 16 -> 17
 104 run: cursor-before:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1363 is 1151
9999 mem: location 1151 is 1483
9999 mem: storing 1483 in location 1415
9999 mem: incrementing refcount of 1483: 6 -> 7
 104 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1353 is 1147
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 99
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1439
9999 mem: incrementing refcount of 1147: 13 -> 14
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1440
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1441
9999 mem: incrementing refcount of 1012: 85 -> 86
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1442
 105 run: insert_2 c, *before-cursor
9999 mem: location 1440 is 99
9999 mem: location 1442 is 1151
9999 mem: location 1151 is 1483
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1163
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1164
9999 mem: incrementing refcount of 1483: 7 -> 8
 106 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1487
9999 mem: storing 1487 in location 1165
9999 mem: incrementing refcount of 1487: 0 -> 1
 106 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1165 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 0
9999 mem: location 1489 is 0
9999 mem: location 1490 is 0
9999 mem: location 1165 is 1487
9999 mem: skipping refcount at 1487
9998 run: address to copy is 1488
9999 mem: storing 1488 in location 1166
 106 run: *val <- copy x
9999 mem: location 1163 is 99
9999 mem: location 1166 is 1488
9999 mem: storing 99 in location 1488
 106 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1164 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 0
9999 mem: location 1486 is 1469
9999 mem: location 1164 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1485 is 0
9999 mem: storing 0 in location 1167
 106 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1164 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 0
9999 mem: location 1486 is 1469
9999 mem: location 1164 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9999 mem: storing 1485 in location 1168
 106 run: *y <- copy new-node
9999 mem: location 1165 is 1487
9999 mem: location 1168 is 1485
9999 mem: storing 1487 in location 1485
9999 mem: incrementing refcount of 1487: 1 -> 2
 106 run: y <- get-address *new-node, prev:offset
9999 mem: location 1165 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 0
9999 mem: location 1490 is 0
9999 mem: location 1165 is 1487
9999 mem: skipping refcount at 1487
9999 type: type deduced to be character$
9998 run: address to copy is 1490
9999 mem: storing 1490 in location 1168
 106 run: *y <- copy in
9999 mem: location 1164 is 1483
9999 mem: location 1168 is 1490
9999 mem: storing 1483 in location 1490
9999 mem: incrementing refcount of 1483: 8 -> 9
 106 run: y <- get-address *new-node, next:offset
9999 mem: location 1165 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 0
9999 mem: location 1490 is 1483
9999 mem: location 1165 is 1487
9999 mem: skipping refcount at 1487
9999 type: type deduced to be character$
9998 run: address to copy is 1489
9999 mem: storing 1489 in location 1168
 106 run: *y <- copy next-node
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1489
9999 mem: storing 0 in location 1489
 106 run: jump-if next-node, 1:offset
9999 mem: location 1167 is 0
9998 run: jump-if fell through
 106 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1164 is 1483
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
 105 run: *before-cursor <- next_2 *before-cursor
9999 mem: location 1442 is 1151
9999 mem: location 1151 is 1483
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1216
9999 mem: incrementing refcount of 1483: 9 -> 10
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1483
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1487
9999 mem: location 1486 is 1469
9999 mem: location 1216 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1485 is 1487
9999 mem: storing 1487 in location 1217
9999 mem: incrementing refcount of 1487: 2 -> 3
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1487
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1487
9999 mem: location 1442 is 1151
9999 mem: decrementing refcount of 1483: 10 -> 9
9999 mem: storing 1487 in location 1151
9999 mem: incrementing refcount of 1487: 3 -> 4
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1443
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1444
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1445
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1446
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1443 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1447
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1444 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1448
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1441 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 86 -> 87
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 106 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1449
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1441 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 87 -> 88
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 106 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1450
 105 run: wrap-column:number <- subtract right, 1
9999 mem: location 1446 is 9
9999 mem: storing 8 in location 1451
 105 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1444 is 1156
9999 mem: location 1156 is 2
9999 mem: location 1451 is 8
9999 mem: storing 0 in location 1452
 105 run: jump-unless at-wrap?, 
9999 mem: location 1452 is 0
9998 run: jumping to instruction 41
 105 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1444 is 1156
9999 mem: location 1156 is 2
9999 mem: location 1444 is 1156
9999 mem: storing 3 in location 1156
 105 run: next:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1442 is 1151
9999 mem: location 1151 is 1487
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1487 in location 1216
9999 mem: incrementing refcount of 1487: 4 -> 5
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1487
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 0
9999 mem: location 1490 is 1483
9999 mem: location 1216 is 1487
9999 mem: skipping refcount at 1487
9999 type: type deduced to be character$
9998 run: address to copy is 1489
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1489 is 0
9999 mem: storing 0 in location 1217
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1459
 105 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1459 is 0
9999 mem: storing 1 in location 1460
 105 run: jump-unless at-end?, 
9999 mem: location 1460 is 1
9998 run: jump-unless fell through
 105 run: bottom:number <- subtract screen-height, 1
9999 mem: location 1450 is 5
9999 mem: storing 4 in location 1461
 105 run: at-bottom?:boolean <- equal save-row, bottom
9999 mem: location 1447 is 1
9999 mem: location 1461 is 4
9999 mem: storing 0 in location 1462
 105 run: at-right?:boolean <- equal save-column, right
9999 mem: location 1448 is 2
9999 mem: location 1446 is 9
9999 mem: storing 0 in location 1463
 105 run: overflow?:boolean <- and at-bottom?, at-right?
9999 mem: location 1462 is 0
9999 mem: location 1463 is 0
9999 mem: storing 0 in location 1464
 105 run: jump-if overflow?, 
9999 mem: location 1464 is 0
9998 run: jump-if fell through
 105 run: move-cursor screen, save-row, save-column
9999 mem: location 1441 is 1012
9999 mem: location 1447 is 1
9999 mem: location 1448 is 2
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 88 -> 89
 106 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 106 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1223
 106 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 106 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 106 run: *column <- copy new-column
9999 mem: location 1223 is 2
9999 mem: location 1225 is 1016
9999 mem: storing 2 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: print screen, c
9999 mem: location 1441 is 1012
9999 mem: location 1440 is 99
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 89 -> 90
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 99
  90 print-character: 99 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 99
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 44 -> 45
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 99
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 12
9999 mem: storing 1044 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 99
9999 mem: location 1249 is 1044
9999 mem: storing 99 in location 1044
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 99
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1045
9999 mem: storing 7 in location 1045
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1458
 105 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean
9999 mem: location 1439 is 1147
9999 mem: location 1441 is 1012
9999 mem: location 1458 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1147: 14 -> 13
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 13 -> 14
9999 mem: decrementing refcount of 1012: 90 -> 89
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 89 -> 90
9999 mem: storing 0 in location 1358
 104 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1405
9999 mem: incrementing refcount of 1169: 17 -> 18
 104 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1372
 104 run: jump-unless *undo, 
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1480
9998 run: jump-unless fell through
 104 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1480
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1480 in location 1216
9999 mem: incrementing refcount of 1480: 3 -> 4
 105 run: result <- get *in, value:offset
9999 mem: location 1216 is 1480
9999 mem: skipping refcount at 1480
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1481 is 1000
9999 mem: location 1482 is 0
9999 mem: location 1216 is 1480
9999 mem: skipping refcount at 1480
9998 run: address to copy is 1481
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1481 is 1000
9999 mem: storing 1000 in location 1217
9999 mem: incrementing refcount of 1000: 6 -> 7
 105 run: reply result:_elem
9999 mem: location 1217 is 1000
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1371
9999 mem: incrementing refcount of 1000: 7 -> 8
 104 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 0
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 2
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1011 is 0
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1002 in location 1378
 104 run: jump-unless typing, 
9999 mem: location 1378 is 1002
9998 run: jump-unless fell through
 104 run: previous-coalesce-tag:number <- get *typing, tag:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 2
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 1
9999 mem: storing 1 in location 1395
 104 run: jump-unless previous-coalesce-tag, 
9999 mem: location 1395 is 1
9998 run: jump-unless fell through
 104 run: insert-until:address:address:shared:duplex-list:character <- get-address *typing, insert-until:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 2
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1416
 104 run: *insert-until <- next_2 *before-cursor
9999 mem: location 1363 is 1151
9999 mem: location 1151 is 1487
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1487 in location 1216
9999 mem: incrementing refcount of 1487: 5 -> 6
 105 run: jump-if in, 1:offset
9999 mem: location 1216 is 1487
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1216 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 0
9999 mem: location 1490 is 1483
9999 mem: location 1216 is 1487
9999 mem: skipping refcount at 1487
9999 type: type deduced to be character$
9998 run: address to copy is 1489
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1489 is 0
9999 mem: storing 0 in location 1217
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: location 1416 is 1009
9999 mem: storing 0 in location 1009
 104 run: after-row:address:number <- get-address *typing, after-row:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 2
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1005
9999 mem: storing 1005 in location 1397
 104 run: *after-row <- copy *cursor-row
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1397 is 1005
9999 mem: storing 1 in location 1005
 104 run: after-column:address:number <- get-address *typing, after-column:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 2
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1398
 104 run: *after-column <- copy *cursor-column
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 3
9999 mem: location 1398 is 1006
9999 mem: storing 3 in location 1006
 104 run: after-top:address:address:shared:duplex-list:character <- get-address *typing, after-top-of-screen:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 3
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1399
 104 run: *after-top <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: location 1399 is 1007
9999 mem: decrementing refcount of 1169: 18 -> 17
9999 mem: storing 1169 in location 1007
9999 mem: incrementing refcount of 1169: 17 -> 18
 104 run: jump +done-adding-insert-operation:label
9998 run: jumping to instruction 436
 104 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1352 is 1012
9999 mem: location 1353 is 1147
9999 mem: location 1358 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 90 -> 89
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 89 -> 90
9999 mem: decrementing refcount of 1147: 14 -> 13
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 13 -> 14
9999 mem: storing 0 in location 1348
 103 run: jump-unless go-render?, 
9999 mem: location 1348 is 0
9998 run: jumping to instruction 25
 103 run: jump 
9998 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 3
9999 mem: storing 3 in location 1340
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 3
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 90 -> 91
 104 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 104 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1223
 104 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 104 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 104 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 104 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 104 run: *column <- copy new-column
9999 mem: location 1223 is 3
9999 mem: location 1225 is 1016
9999 mem: storing 3 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 91 -> 90
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 90 -> 91
 103 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1330
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1256
9999 mem: incrementing refcount of 1330: 4 -> 5
 104 run: jump-unless console, 
9999 mem: location 1256 is 1330
9998 run: jump-unless fell through
 104 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 3
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1331
9999 mem: storing 1331 in location 1257
 104 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 3
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1332 is 1284
9999 mem: storing 1284 in location 1258
9999 mem: incrementing refcount of 1284: 3 -> 4
 104 run: max:number <- length *buf
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9999 mem: storing 11 in location 1259
 104 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 3
9999 mem: location 1259 is 11
9999 mem: storing 0 in location 1260
 104 run: jump-unless done?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 12
 104 run: result <- index *buf, *current-event-index
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9998 run: base address is 1285
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 3
9998 run: address to copy is 1298
9998 run: its type is event
9999 mem: location 1298 is 0
9999 mem: location 1299 is 100
9999 mem: location 1300 is 0
9999 mem: location 1301 is 0
9999 mem: storing 0 in location 1262
9999 mem: storing 100 in location 1263
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 104 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 3
9999 mem: location 1257 is 1331
9999 mem: storing 4 in location 1331
 104 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1262 is 0
9999 mem: location 1263 is 100
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1256 is 1330
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 100, 0, 0]
9998 run: result 1 is 1330
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1341
9999 mem: storing 100 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1330: 5 -> 4
9999 mem: storing 1330 in location 1337
9999 mem: incrementing refcount of 1330: 4 -> 5
9999 mem: storing 1 in location 1345
9999 mem: storing 0 in location 1346
 103 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 103 run: jump-if quit?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1341 is 0
9999 mem: location 1342 is 100
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1347
 103 run: jump-unless t, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 18
 103 run: jump-if t, 
9999 mem: location 1347 is 0
9998 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 mem: location 1341 is 0
9999 mem: location 1342 is 100
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 91 -> 92
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 14 -> 15
 104 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1354
9999 mem: storing 100 in location 1355
9999 mem: storing 0 in location 1356
9999 mem: storing 0 in location 1357
 104 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1358
 104 run: jump-if editor, 1:offset
9999 mem: location 1353 is 1147
9998 run: jumping to instruction 7
9990 schedule: handle-keyboard-event/editor-event-loop/scenario-editor-can-undo-and-redo-delete
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 92 -> 93
 105 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 105 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 105 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1359
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 93 -> 94
 105 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 105 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 105 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1360
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1361
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1362
 104 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1363
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1364
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1365
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1366
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 3 in location 1367
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1354 is 0
9999 mem: location 1355 is 100
9999 mem: location 1356 is 0
9999 mem: location 1357 is 0
9999 mem: storing 1355 in location 1368
 104 run: jump-unless c, 
9999 mem: location 1368 is 1355
9998 run: jump-unless fell through
 104 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 104 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 100
9999 mem: storing 0 in location 1369
 104 run: jump-unless redo?, 
9999 mem: location 1369 is 0
9998 run: jumping to instruction 61
 104 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 100
9999 mem: storing 0 in location 1380
 104 run: jump-unless undo?, 
9999 mem: location 1380 is 0
9998 run: jumping to instruction 108
 104 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 100
9999 mem: storing 0 in location 1385
 104 run: jump-unless page-up?, 
9999 mem: location 1385 is 0
9998 run: jumping to instruction 149
 104 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 100
9999 mem: storing 0 in location 1401
 104 run: jump-unless page-down?, 
9999 mem: location 1401 is 0
9998 run: jumping to instruction 190
 104 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 100
9999 mem: storing 0 in location 1402
 104 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1402 is 0
9998 run: jumping to instruction 210
 104 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 100
9999 mem: storing 0 in location 1407
 104 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1407 is 0
9998 run: jumping to instruction 230
 104 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 100
9999 mem: storing 0 in location 1408
 104 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1408 is 0
9998 run: jumping to instruction 268
 104 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 100
9999 mem: storing 0 in location 1409
 104 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1409 is 0
9998 run: jumping to instruction 306
 104 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 100
9999 mem: storing 0 in location 1410
 104 run: jump-unless delete-previous-character?, 
9999 mem: location 1410 is 0
9998 run: jumping to instruction 346
 104 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 100
9999 mem: storing 0 in location 1414
 104 run: jump-unless tab?, 
9999 mem: location 1414 is 0
9998 run: jumping to instruction 383
 104 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 100
9999 mem: storing 0 in location 1418
 104 run: jump-unless newline?, 
9999 mem: location 1418 is 0
9998 run: jumping to instruction 402
 104 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 100
9999 mem: storing 1 in location 1421
 104 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1358
 104 run: jump-if regular-character?, 1:offset
9999 mem: location 1421 is 1
9998 run: jumping to instruction 407
 104 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1403
9999 mem: incrementing refcount of 1169: 18 -> 19
 104 run: cursor-before:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1363 is 1151
9999 mem: location 1151 is 1487
9999 mem: storing 1487 in location 1415
9999 mem: incrementing refcount of 1487: 6 -> 7
 104 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1353 is 1147
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 100
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1439
9999 mem: incrementing refcount of 1147: 15 -> 16
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1440
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1441
9999 mem: incrementing refcount of 1012: 94 -> 95
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1442
 105 run: insert_2 c, *before-cursor
9999 mem: location 1440 is 100
9999 mem: location 1442 is 1151
9999 mem: location 1151 is 1487
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1163
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1487 in location 1164
9999 mem: incrementing refcount of 1487: 7 -> 8
 106 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1491
9999 mem: storing 1491 in location 1165
9999 mem: incrementing refcount of 1491: 0 -> 1
 106 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1165 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 0
9999 mem: location 1493 is 0
9999 mem: location 1494 is 0
9999 mem: location 1165 is 1491
9999 mem: skipping refcount at 1491
9998 run: address to copy is 1492
9999 mem: storing 1492 in location 1166
 106 run: *val <- copy x
9999 mem: location 1163 is 100
9999 mem: location 1166 is 1492
9999 mem: storing 100 in location 1492
 106 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1164 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 0
9999 mem: location 1490 is 1483
9999 mem: location 1164 is 1487
9999 mem: skipping refcount at 1487
9999 type: type deduced to be character$
9998 run: address to copy is 1489
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1489 is 0
9999 mem: storing 0 in location 1167
 106 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1164 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 0
9999 mem: location 1490 is 1483
9999 mem: location 1164 is 1487
9999 mem: skipping refcount at 1487
9999 type: type deduced to be character$
9998 run: address to copy is 1489
9999 mem: storing 1489 in location 1168
 106 run: *y <- copy new-node
9999 mem: location 1165 is 1491
9999 mem: location 1168 is 1489
9999 mem: storing 1491 in location 1489
9999 mem: incrementing refcount of 1491: 1 -> 2
 106 run: y <- get-address *new-node, prev:offset
9999 mem: location 1165 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 0
9999 mem: location 1494 is 0
9999 mem: location 1165 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1494
9999 mem: storing 1494 in location 1168
 106 run: *y <- copy in
9999 mem: location 1164 is 1487
9999 mem: location 1168 is 1494
9999 mem: storing 1487 in location 1494
9999 mem: incrementing refcount of 1487: 8 -> 9
 106 run: y <- get-address *new-node, next:offset
9999 mem: location 1165 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 0
9999 mem: location 1494 is 1487
9999 mem: location 1165 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9999 mem: storing 1493 in location 1168
 106 run: *y <- copy next-node
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1493
9999 mem: storing 0 in location 1493
 106 run: jump-if next-node, 1:offset
9999 mem: location 1167 is 0
9998 run: jump-if fell through
 106 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1164 is 1487
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
 105 run: *before-cursor <- next_2 *before-cursor
9999 mem: location 1442 is 1151
9999 mem: location 1151 is 1487
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1487 in location 1216
9999 mem: incrementing refcount of 1487: 9 -> 10
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1487
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 1491
9999 mem: location 1490 is 1483
9999 mem: location 1216 is 1487
9999 mem: skipping refcount at 1487
9999 type: type deduced to be character$
9998 run: address to copy is 1489
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1489 is 1491
9999 mem: storing 1491 in location 1217
9999 mem: incrementing refcount of 1491: 2 -> 3
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1491
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1491
9999 mem: location 1442 is 1151
9999 mem: decrementing refcount of 1487: 10 -> 9
9999 mem: storing 1491 in location 1151
9999 mem: incrementing refcount of 1491: 3 -> 4
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1491
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1443
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1491
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1444
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1491
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1445
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1491
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1446
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1443 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1447
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1444 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 3 in location 1448
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1441 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 95 -> 96
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 106 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1449
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1441 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 96 -> 97
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 106 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1450
 105 run: wrap-column:number <- subtract right, 1
9999 mem: location 1446 is 9
9999 mem: storing 8 in location 1451
 105 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1444 is 1156
9999 mem: location 1156 is 3
9999 mem: location 1451 is 8
9999 mem: storing 0 in location 1452
 105 run: jump-unless at-wrap?, 
9999 mem: location 1452 is 0
9998 run: jumping to instruction 41
 105 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1444 is 1156
9999 mem: location 1156 is 3
9999 mem: location 1444 is 1156
9999 mem: storing 4 in location 1156
 105 run: next:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1442 is 1151
9999 mem: location 1151 is 1491
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1216
9999 mem: incrementing refcount of 1491: 4 -> 5
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1491
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 0
9999 mem: location 1494 is 1487
9999 mem: location 1216 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1493 is 0
9999 mem: storing 0 in location 1217
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1459
 105 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1459 is 0
9999 mem: storing 1 in location 1460
 105 run: jump-unless at-end?, 
9999 mem: location 1460 is 1
9998 run: jump-unless fell through
 105 run: bottom:number <- subtract screen-height, 1
9999 mem: location 1450 is 5
9999 mem: storing 4 in location 1461
 105 run: at-bottom?:boolean <- equal save-row, bottom
9999 mem: location 1447 is 1
9999 mem: location 1461 is 4
9999 mem: storing 0 in location 1462
 105 run: at-right?:boolean <- equal save-column, right
9999 mem: location 1448 is 3
9999 mem: location 1446 is 9
9999 mem: storing 0 in location 1463
 105 run: overflow?:boolean <- and at-bottom?, at-right?
9999 mem: location 1462 is 0
9999 mem: location 1463 is 0
9999 mem: storing 0 in location 1464
 105 run: jump-if overflow?, 
9999 mem: location 1464 is 0
9998 run: jump-if fell through
 105 run: move-cursor screen, save-row, save-column
9999 mem: location 1441 is 1012
9999 mem: location 1447 is 1
9999 mem: location 1448 is 3
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 97 -> 98
 106 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 106 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1223
 106 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 106 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 106 run: *column <- copy new-column
9999 mem: location 1223 is 3
9999 mem: location 1225 is 1016
9999 mem: storing 3 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: print screen, c
9999 mem: location 1441 is 1012
9999 mem: location 1440 is 100
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 98 -> 99
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 100
  90 print-character: 100 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 100
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 45 -> 46
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 100
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 13
9999 mem: storing 1046 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1248 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 100
9999 mem: location 1249 is 1046
9999 mem: storing 100 in location 1046
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1046
9999 mem: location 1046 is 100
9999 mem: location 1047 is 7
9999 mem: location 1248 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1047
9999 mem: storing 7 in location 1047
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1458
 105 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean
9999 mem: location 1439 is 1147
9999 mem: location 1441 is 1012
9999 mem: location 1458 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1147: 16 -> 15
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 15 -> 16
9999 mem: decrementing refcount of 1012: 99 -> 98
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 98 -> 99
9999 mem: storing 0 in location 1358
 104 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1491
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1405
9999 mem: incrementing refcount of 1169: 19 -> 20
 104 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1491
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1372
 104 run: jump-unless *undo, 
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1480
9998 run: jump-unless fell through
 104 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1480
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1480 in location 1216
9999 mem: incrementing refcount of 1480: 4 -> 5
 105 run: result <- get *in, value:offset
9999 mem: location 1216 is 1480
9999 mem: skipping refcount at 1480
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1481 is 1000
9999 mem: location 1482 is 0
9999 mem: location 1216 is 1480
9999 mem: skipping refcount at 1480
9998 run: address to copy is 1481
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1481 is 1000
9999 mem: storing 1000 in location 1217
9999 mem: incrementing refcount of 1000: 8 -> 9
 105 run: reply result:_elem
9999 mem: location 1217 is 1000
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1371
9999 mem: incrementing refcount of 1000: 9 -> 10
 104 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 0
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 3
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1011 is 0
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1002 in location 1378
 104 run: jump-unless typing, 
9999 mem: location 1378 is 1002
9998 run: jump-unless fell through
 104 run: previous-coalesce-tag:number <- get *typing, tag:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 3
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 1
9999 mem: storing 1 in location 1395
 104 run: jump-unless previous-coalesce-tag, 
9999 mem: location 1395 is 1
9998 run: jump-unless fell through
 104 run: insert-until:address:address:shared:duplex-list:character <- get-address *typing, insert-until:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 3
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1416
 104 run: *insert-until <- next_2 *before-cursor
9999 mem: location 1363 is 1151
9999 mem: location 1151 is 1491
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1216
9999 mem: incrementing refcount of 1491: 5 -> 6
 105 run: jump-if in, 1:offset
9999 mem: location 1216 is 1491
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1216 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 0
9999 mem: location 1494 is 1487
9999 mem: location 1216 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1493 is 0
9999 mem: storing 0 in location 1217
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: location 1416 is 1009
9999 mem: storing 0 in location 1009
 104 run: after-row:address:number <- get-address *typing, after-row:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 3
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1005
9999 mem: storing 1005 in location 1397
 104 run: *after-row <- copy *cursor-row
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1397 is 1005
9999 mem: storing 1 in location 1005
 104 run: after-column:address:number <- get-address *typing, after-column:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 3
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1398
 104 run: *after-column <- copy *cursor-column
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 4
9999 mem: location 1398 is 1006
9999 mem: storing 4 in location 1006
 104 run: after-top:address:address:shared:duplex-list:character <- get-address *typing, after-top-of-screen:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1399
 104 run: *after-top <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1491
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: location 1399 is 1007
9999 mem: decrementing refcount of 1169: 20 -> 19
9999 mem: storing 1169 in location 1007
9999 mem: incrementing refcount of 1169: 19 -> 20
 104 run: jump +done-adding-insert-operation:label
9998 run: jumping to instruction 436
 104 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1352 is 1012
9999 mem: location 1353 is 1147
9999 mem: location 1358 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 99 -> 98
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 98 -> 99
9999 mem: decrementing refcount of 1147: 16 -> 15
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 15 -> 16
9999 mem: storing 0 in location 1348
 103 run: jump-unless go-render?, 
9999 mem: location 1348 is 0
9998 run: jumping to instruction 25
 103 run: jump 
9998 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1491
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1491
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 4
9999 mem: storing 4 in location 1340
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 4
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 99 -> 100
 104 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 104 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1223
 104 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 104 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 104 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 104 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 104 run: *column <- copy new-column
9999 mem: location 1223 is 4
9999 mem: location 1225 is 1016
9999 mem: storing 4 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 100 -> 99
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 99 -> 100
 103 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1330
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1256
9999 mem: incrementing refcount of 1330: 5 -> 6
 104 run: jump-unless console, 
9999 mem: location 1256 is 1330
9998 run: jump-unless fell through
 104 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 4
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1331
9999 mem: storing 1331 in location 1257
 104 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 4
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1332 is 1284
9999 mem: storing 1284 in location 1258
9999 mem: incrementing refcount of 1284: 4 -> 5
 104 run: max:number <- length *buf
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9999 mem: storing 11 in location 1259
 104 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 4
9999 mem: location 1259 is 11
9999 mem: storing 0 in location 1260
 104 run: jump-unless done?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 12
 104 run: result <- index *buf, *current-event-index
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9998 run: base address is 1285
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 4
9998 run: address to copy is 1302
9998 run: its type is event
9999 mem: location 1302 is 0
9999 mem: location 1303 is 101
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: storing 0 in location 1262
9999 mem: storing 101 in location 1263
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 104 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 4
9999 mem: location 1257 is 1331
9999 mem: storing 5 in location 1331
 104 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1262 is 0
9999 mem: location 1263 is 101
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1256 is 1330
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 101, 0, 0]
9998 run: result 1 is 1330
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1341
9999 mem: storing 101 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1330: 6 -> 5
9999 mem: storing 1330 in location 1337
9999 mem: incrementing refcount of 1330: 5 -> 6
9999 mem: storing 1 in location 1345
9999 mem: storing 0 in location 1346
 103 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 103 run: jump-if quit?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1341 is 0
9999 mem: location 1342 is 101
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1347
 103 run: jump-unless t, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 18
 103 run: jump-if t, 
9999 mem: location 1347 is 0
9998 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 mem: location 1341 is 0
9999 mem: location 1342 is 101
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 100 -> 101
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 16 -> 17
 104 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1354
9999 mem: storing 101 in location 1355
9999 mem: storing 0 in location 1356
9999 mem: storing 0 in location 1357
 104 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1358
 104 run: jump-if editor, 1:offset
9999 mem: location 1353 is 1147
9998 run: jumping to instruction 7
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 101 -> 102
 105 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 105 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 105 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1359
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 102 -> 103
 105 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 105 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 105 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1360
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1491
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1361
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1491
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1362
 104 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1491
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1363
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1491
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1364
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1491
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1365
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1366
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 4
9999 mem: storing 4 in location 1367
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1354 is 0
9999 mem: location 1355 is 101
9999 mem: location 1356 is 0
9999 mem: location 1357 is 0
9999 mem: storing 1355 in location 1368
 104 run: jump-unless c, 
9999 mem: location 1368 is 1355
9998 run: jump-unless fell through
 104 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 104 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 101
9999 mem: storing 0 in location 1369
 104 run: jump-unless redo?, 
9999 mem: location 1369 is 0
9998 run: jumping to instruction 61
 104 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 101
9999 mem: storing 0 in location 1380
 104 run: jump-unless undo?, 
9999 mem: location 1380 is 0
9998 run: jumping to instruction 108
 104 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 101
9999 mem: storing 0 in location 1385
 104 run: jump-unless page-up?, 
9999 mem: location 1385 is 0
9998 run: jumping to instruction 149
 104 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 101
9999 mem: storing 0 in location 1401
 104 run: jump-unless page-down?, 
9999 mem: location 1401 is 0
9998 run: jumping to instruction 190
 104 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 101
9999 mem: storing 0 in location 1402
 104 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1402 is 0
9998 run: jumping to instruction 210
 104 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 101
9999 mem: storing 0 in location 1407
 104 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1407 is 0
9998 run: jumping to instruction 230
 104 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 101
9999 mem: storing 0 in location 1408
 104 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1408 is 0
9998 run: jumping to instruction 268
 104 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 101
9999 mem: storing 0 in location 1409
 104 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1409 is 0
9998 run: jumping to instruction 306
 104 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 101
9999 mem: storing 0 in location 1410
 104 run: jump-unless delete-previous-character?, 
9999 mem: location 1410 is 0
9998 run: jumping to instruction 346
 104 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 101
9999 mem: storing 0 in location 1414
 104 run: jump-unless tab?, 
9999 mem: location 1414 is 0
9998 run: jumping to instruction 383
 104 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 101
9999 mem: storing 0 in location 1418
 104 run: jump-unless newline?, 
9999 mem: location 1418 is 0
9998 run: jumping to instruction 402
 104 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 101
9999 mem: storing 1 in location 1421
 104 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1358
 104 run: jump-if regular-character?, 1:offset
9999 mem: location 1421 is 1
9998 run: jumping to instruction 407
 104 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1491
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1403
9999 mem: incrementing refcount of 1169: 20 -> 21
 104 run: cursor-before:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1363 is 1151
9999 mem: location 1151 is 1491
9999 mem: storing 1491 in location 1415
9999 mem: incrementing refcount of 1491: 6 -> 7
 104 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1353 is 1147
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 101
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1439
9999 mem: incrementing refcount of 1147: 17 -> 18
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1440
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1441
9999 mem: incrementing refcount of 1012: 103 -> 104
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1491
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1442
 105 run: insert_2 c, *before-cursor
9999 mem: location 1440 is 101
9999 mem: location 1442 is 1151
9999 mem: location 1151 is 1491
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1163
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1164
9999 mem: incrementing refcount of 1491: 7 -> 8
 106 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1495
9999 mem: storing 1495 in location 1165
9999 mem: incrementing refcount of 1495: 0 -> 1
 106 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1165 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 0
9999 mem: location 1497 is 0
9999 mem: location 1498 is 0
9999 mem: location 1165 is 1495
9999 mem: skipping refcount at 1495
9998 run: address to copy is 1496
9999 mem: storing 1496 in location 1166
 106 run: *val <- copy x
9999 mem: location 1163 is 101
9999 mem: location 1166 is 1496
9999 mem: storing 101 in location 1496
 106 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1164 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 0
9999 mem: location 1494 is 1487
9999 mem: location 1164 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1493 is 0
9999 mem: storing 0 in location 1167
 106 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1164 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 0
9999 mem: location 1494 is 1487
9999 mem: location 1164 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9999 mem: storing 1493 in location 1168
 106 run: *y <- copy new-node
9999 mem: location 1165 is 1495
9999 mem: location 1168 is 1493
9999 mem: storing 1495 in location 1493
9999 mem: incrementing refcount of 1495: 1 -> 2
 106 run: y <- get-address *new-node, prev:offset
9999 mem: location 1165 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 0
9999 mem: location 1498 is 0
9999 mem: location 1165 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1498
9999 mem: storing 1498 in location 1168
 106 run: *y <- copy in
9999 mem: location 1164 is 1491
9999 mem: location 1168 is 1498
9999 mem: storing 1491 in location 1498
9999 mem: incrementing refcount of 1491: 8 -> 9
 106 run: y <- get-address *new-node, next:offset
9999 mem: location 1165 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 0
9999 mem: location 1498 is 1491
9999 mem: location 1165 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9999 mem: storing 1497 in location 1168
 106 run: *y <- copy next-node
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1497
9999 mem: storing 0 in location 1497
 106 run: jump-if next-node, 1:offset
9999 mem: location 1167 is 0
9998 run: jump-if fell through
 106 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1164 is 1491
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
 105 run: *before-cursor <- next_2 *before-cursor
9999 mem: location 1442 is 1151
9999 mem: location 1151 is 1491
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1216
9999 mem: incrementing refcount of 1491: 9 -> 10
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1491
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1487
9999 mem: location 1216 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1493 is 1495
9999 mem: storing 1495 in location 1217
9999 mem: incrementing refcount of 1495: 2 -> 3
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1495
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1495
9999 mem: location 1442 is 1151
9999 mem: decrementing refcount of 1491: 10 -> 9
9999 mem: storing 1495 in location 1151
9999 mem: incrementing refcount of 1495: 3 -> 4
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1443
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1444
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1445
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1446
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1443 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1447
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1444 is 1156
9999 mem: location 1156 is 4
9999 mem: storing 4 in location 1448
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1441 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 104 -> 105
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 106 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1449
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1441 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 105 -> 106
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 106 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1450
 105 run: wrap-column:number <- subtract right, 1
9999 mem: location 1446 is 9
9999 mem: storing 8 in location 1451
 105 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1444 is 1156
9999 mem: location 1156 is 4
9999 mem: location 1451 is 8
9999 mem: storing 0 in location 1452
 105 run: jump-unless at-wrap?, 
9999 mem: location 1452 is 0
9998 run: jumping to instruction 41
 105 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1444 is 1156
9999 mem: location 1156 is 4
9999 mem: location 1444 is 1156
9999 mem: storing 5 in location 1156
 105 run: next:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1442 is 1151
9999 mem: location 1151 is 1495
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1216
9999 mem: incrementing refcount of 1495: 4 -> 5
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1495
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 0
9999 mem: location 1498 is 1491
9999 mem: location 1216 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1497 is 0
9999 mem: storing 0 in location 1217
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1459
 105 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1459 is 0
9999 mem: storing 1 in location 1460
 105 run: jump-unless at-end?, 
9999 mem: location 1460 is 1
9998 run: jump-unless fell through
 105 run: bottom:number <- subtract screen-height, 1
9999 mem: location 1450 is 5
9999 mem: storing 4 in location 1461
 105 run: at-bottom?:boolean <- equal save-row, bottom
9999 mem: location 1447 is 1
9999 mem: location 1461 is 4
9999 mem: storing 0 in location 1462
 105 run: at-right?:boolean <- equal save-column, right
9999 mem: location 1448 is 4
9999 mem: location 1446 is 9
9999 mem: storing 0 in location 1463
 105 run: overflow?:boolean <- and at-bottom?, at-right?
9999 mem: location 1462 is 0
9999 mem: location 1463 is 0
9999 mem: storing 0 in location 1464
 105 run: jump-if overflow?, 
9999 mem: location 1464 is 0
9998 run: jump-if fell through
 105 run: move-cursor screen, save-row, save-column
9999 mem: location 1441 is 1012
9999 mem: location 1447 is 1
9999 mem: location 1448 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 106 -> 107
 106 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 106 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1223
 106 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 106 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 106 run: *column <- copy new-column
9999 mem: location 1223 is 4
9999 mem: location 1225 is 1016
9999 mem: storing 4 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: print screen, c
9999 mem: location 1441 is 1012
9999 mem: location 1440 is 101
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 107 -> 108
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 101
  90 print-character: 101 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 46 -> 47
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 14
9999 mem: storing 1048 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1248 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 101
9999 mem: location 1249 is 1048
9999 mem: storing 101 in location 1048
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1048
9999 mem: location 1048 is 101
9999 mem: location 1049 is 7
9999 mem: location 1248 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1049
9999 mem: storing 7 in location 1049
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
9990 schedule: print/insert-at-cursor/handle-keyboard-event/editor-event-loop/scenario-editor-can-undo-and-redo-delete
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1458
 105 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean
9999 mem: location 1439 is 1147
9999 mem: location 1441 is 1012
9999 mem: location 1458 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1147: 18 -> 17
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 17 -> 18
9999 mem: decrementing refcount of 1012: 108 -> 107
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 107 -> 108
9999 mem: storing 0 in location 1358
 104 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 5
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1405
9999 mem: incrementing refcount of 1169: 21 -> 22
 104 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 5
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1372
 104 run: jump-unless *undo, 
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1480
9998 run: jump-unless fell through
 104 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1480
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1480 in location 1216
9999 mem: incrementing refcount of 1480: 5 -> 6
 105 run: result <- get *in, value:offset
9999 mem: location 1216 is 1480
9999 mem: skipping refcount at 1480
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1481 is 1000
9999 mem: location 1482 is 0
9999 mem: location 1216 is 1480
9999 mem: skipping refcount at 1480
9998 run: address to copy is 1481
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1481 is 1000
9999 mem: storing 1000 in location 1217
9999 mem: incrementing refcount of 1000: 10 -> 11
 105 run: reply result:_elem
9999 mem: location 1217 is 1000
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1371
9999 mem: incrementing refcount of 1000: 11 -> 12
 104 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 0
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1011 is 0
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1002 in location 1378
 104 run: jump-unless typing, 
9999 mem: location 1378 is 1002
9998 run: jump-unless fell through
 104 run: previous-coalesce-tag:number <- get *typing, tag:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 1
9999 mem: storing 1 in location 1395
 104 run: jump-unless previous-coalesce-tag, 
9999 mem: location 1395 is 1
9998 run: jump-unless fell through
 104 run: insert-until:address:address:shared:duplex-list:character <- get-address *typing, insert-until:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1416
 104 run: *insert-until <- next_2 *before-cursor
9999 mem: location 1363 is 1151
9999 mem: location 1151 is 1495
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1216
9999 mem: incrementing refcount of 1495: 5 -> 6
 105 run: jump-if in, 1:offset
9999 mem: location 1216 is 1495
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1216 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 0
9999 mem: location 1498 is 1491
9999 mem: location 1216 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1497 is 0
9999 mem: storing 0 in location 1217
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: location 1416 is 1009
9999 mem: storing 0 in location 1009
 104 run: after-row:address:number <- get-address *typing, after-row:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1005
9999 mem: storing 1005 in location 1397
 104 run: *after-row <- copy *cursor-row
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1397 is 1005
9999 mem: storing 1 in location 1005
 104 run: after-column:address:number <- get-address *typing, after-column:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1398
 104 run: *after-column <- copy *cursor-column
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 5
9999 mem: location 1398 is 1006
9999 mem: storing 5 in location 1006
 104 run: after-top:address:address:shared:duplex-list:character <- get-address *typing, after-top-of-screen:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 5
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1399
 104 run: *after-top <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 5
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: location 1399 is 1007
9999 mem: decrementing refcount of 1169: 22 -> 21
9999 mem: storing 1169 in location 1007
9999 mem: incrementing refcount of 1169: 21 -> 22
 104 run: jump +done-adding-insert-operation:label
9998 run: jumping to instruction 436
 104 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1352 is 1012
9999 mem: location 1353 is 1147
9999 mem: location 1358 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 108 -> 107
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 107 -> 108
9999 mem: decrementing refcount of 1147: 18 -> 17
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 17 -> 18
9999 mem: storing 0 in location 1348
 103 run: jump-unless go-render?, 
9999 mem: location 1348 is 0
9998 run: jumping to instruction 25
 103 run: jump 
9998 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 5
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 5
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 5
9999 mem: storing 5 in location 1340
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 5
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 108 -> 109
 104 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 104 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1223
 104 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 104 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 104 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 104 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 104 run: *column <- copy new-column
9999 mem: location 1223 is 5
9999 mem: location 1225 is 1016
9999 mem: storing 5 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 109 -> 108
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 108 -> 109
 103 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1330
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1256
9999 mem: incrementing refcount of 1330: 6 -> 7
 104 run: jump-unless console, 
9999 mem: location 1256 is 1330
9998 run: jump-unless fell through
 104 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 5
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1331
9999 mem: storing 1331 in location 1257
 104 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 5
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1332 is 1284
9999 mem: storing 1284 in location 1258
9999 mem: incrementing refcount of 1284: 5 -> 6
 104 run: max:number <- length *buf
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9999 mem: storing 11 in location 1259
 104 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 5
9999 mem: location 1259 is 11
9999 mem: storing 0 in location 1260
 104 run: jump-unless done?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 12
 104 run: result <- index *buf, *current-event-index
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9998 run: base address is 1285
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 5
9998 run: address to copy is 1306
9998 run: its type is event
9999 mem: location 1306 is 0
9999 mem: location 1307 is 102
9999 mem: location 1308 is 0
9999 mem: location 1309 is 0
9999 mem: storing 0 in location 1262
9999 mem: storing 102 in location 1263
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 104 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 5
9999 mem: location 1257 is 1331
9999 mem: storing 6 in location 1331
 104 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1262 is 0
9999 mem: location 1263 is 102
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1256 is 1330
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 102, 0, 0]
9998 run: result 1 is 1330
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1341
9999 mem: storing 102 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1330: 7 -> 6
9999 mem: storing 1330 in location 1337
9999 mem: incrementing refcount of 1330: 6 -> 7
9999 mem: storing 1 in location 1345
9999 mem: storing 0 in location 1346
 103 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 103 run: jump-if quit?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1341 is 0
9999 mem: location 1342 is 102
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1347
 103 run: jump-unless t, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 18
 103 run: jump-if t, 
9999 mem: location 1347 is 0
9998 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 mem: location 1341 is 0
9999 mem: location 1342 is 102
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 109 -> 110
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 18 -> 19
 104 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1354
9999 mem: storing 102 in location 1355
9999 mem: storing 0 in location 1356
9999 mem: storing 0 in location 1357
 104 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1358
 104 run: jump-if editor, 1:offset
9999 mem: location 1353 is 1147
9998 run: jumping to instruction 7
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 110 -> 111
 105 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 105 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 105 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1359
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 111 -> 112
 105 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 105 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 105 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1360
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 5
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1361
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 5
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1362
 104 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 5
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1363
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 5
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1364
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 5
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1365
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1366
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 5
9999 mem: storing 5 in location 1367
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1354 is 0
9999 mem: location 1355 is 102
9999 mem: location 1356 is 0
9999 mem: location 1357 is 0
9999 mem: storing 1355 in location 1368
 104 run: jump-unless c, 
9999 mem: location 1368 is 1355
9998 run: jump-unless fell through
 104 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 104 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 102
9999 mem: storing 0 in location 1369
 104 run: jump-unless redo?, 
9999 mem: location 1369 is 0
9998 run: jumping to instruction 61
 104 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 102
9999 mem: storing 0 in location 1380
 104 run: jump-unless undo?, 
9999 mem: location 1380 is 0
9998 run: jumping to instruction 108
 104 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 102
9999 mem: storing 0 in location 1385
 104 run: jump-unless page-up?, 
9999 mem: location 1385 is 0
9998 run: jumping to instruction 149
 104 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 102
9999 mem: storing 0 in location 1401
 104 run: jump-unless page-down?, 
9999 mem: location 1401 is 0
9998 run: jumping to instruction 190
 104 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 102
9999 mem: storing 0 in location 1402
 104 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1402 is 0
9998 run: jumping to instruction 210
 104 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 102
9999 mem: storing 0 in location 1407
 104 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1407 is 0
9998 run: jumping to instruction 230
 104 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 102
9999 mem: storing 0 in location 1408
 104 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1408 is 0
9998 run: jumping to instruction 268
 104 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 102
9999 mem: storing 0 in location 1409
 104 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1409 is 0
9998 run: jumping to instruction 306
 104 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 102
9999 mem: storing 0 in location 1410
 104 run: jump-unless delete-previous-character?, 
9999 mem: location 1410 is 0
9998 run: jumping to instruction 346
 104 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 102
9999 mem: storing 0 in location 1414
 104 run: jump-unless tab?, 
9999 mem: location 1414 is 0
9998 run: jumping to instruction 383
 104 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 102
9999 mem: storing 0 in location 1418
 104 run: jump-unless newline?, 
9999 mem: location 1418 is 0
9998 run: jumping to instruction 402
 104 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 102
9999 mem: storing 1 in location 1421
 104 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1358
 104 run: jump-if regular-character?, 1:offset
9999 mem: location 1421 is 1
9998 run: jumping to instruction 407
 104 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 5
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1403
9999 mem: incrementing refcount of 1169: 22 -> 23
 104 run: cursor-before:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1363 is 1151
9999 mem: location 1151 is 1495
9999 mem: storing 1495 in location 1415
9999 mem: incrementing refcount of 1495: 6 -> 7
 104 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1353 is 1147
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 102
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1439
9999 mem: incrementing refcount of 1147: 19 -> 20
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1440
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1441
9999 mem: incrementing refcount of 1012: 112 -> 113
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 5
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1442
 105 run: insert_2 c, *before-cursor
9999 mem: location 1440 is 102
9999 mem: location 1442 is 1151
9999 mem: location 1151 is 1495
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1163
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1164
9999 mem: incrementing refcount of 1495: 7 -> 8
 106 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1499
9999 mem: storing 1499 in location 1165
9999 mem: incrementing refcount of 1499: 0 -> 1
 106 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1165 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 0
9999 mem: location 1501 is 0
9999 mem: location 1502 is 0
9999 mem: location 1165 is 1499
9999 mem: skipping refcount at 1499
9998 run: address to copy is 1500
9999 mem: storing 1500 in location 1166
 106 run: *val <- copy x
9999 mem: location 1163 is 102
9999 mem: location 1166 is 1500
9999 mem: storing 102 in location 1500
 106 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1164 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 0
9999 mem: location 1498 is 1491
9999 mem: location 1164 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1497 is 0
9999 mem: storing 0 in location 1167
 106 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1164 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 0
9999 mem: location 1498 is 1491
9999 mem: location 1164 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9999 mem: storing 1497 in location 1168
 106 run: *y <- copy new-node
9999 mem: location 1165 is 1499
9999 mem: location 1168 is 1497
9999 mem: storing 1499 in location 1497
9999 mem: incrementing refcount of 1499: 1 -> 2
 106 run: y <- get-address *new-node, prev:offset
9999 mem: location 1165 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 0
9999 mem: location 1165 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1502
9999 mem: storing 1502 in location 1168
 106 run: *y <- copy in
9999 mem: location 1164 is 1495
9999 mem: location 1168 is 1502
9999 mem: storing 1495 in location 1502
9999 mem: incrementing refcount of 1495: 8 -> 9
 106 run: y <- get-address *new-node, next:offset
9999 mem: location 1165 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1165 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1501
9999 mem: storing 1501 in location 1168
 106 run: *y <- copy next-node
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1501
9999 mem: storing 0 in location 1501
 106 run: jump-if next-node, 1:offset
9999 mem: location 1167 is 0
9998 run: jump-if fell through
 106 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1164 is 1495
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
 105 run: *before-cursor <- next_2 *before-cursor
9999 mem: location 1442 is 1151
9999 mem: location 1151 is 1495
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1216
9999 mem: incrementing refcount of 1495: 9 -> 10
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1495
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1216 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1497 is 1499
9999 mem: storing 1499 in location 1217
9999 mem: incrementing refcount of 1499: 2 -> 3
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1499
9999 mem: location 1442 is 1151
9999 mem: decrementing refcount of 1495: 10 -> 9
9999 mem: storing 1499 in location 1151
9999 mem: incrementing refcount of 1499: 3 -> 4
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1499
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 5
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1443
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1499
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 5
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1444
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1499
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 5
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1445
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1499
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 5
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1439 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1446
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1443 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1447
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1444 is 1156
9999 mem: location 1156 is 5
9999 mem: storing 5 in location 1448
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1441 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 113 -> 114
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 106 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1449
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1441 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 114 -> 115
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 106 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1450
 105 run: wrap-column:number <- subtract right, 1
9999 mem: location 1446 is 9
9999 mem: storing 8 in location 1451
 105 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1444 is 1156
9999 mem: location 1156 is 5
9999 mem: location 1451 is 8
9999 mem: storing 0 in location 1452
 105 run: jump-unless at-wrap?, 
9999 mem: location 1452 is 0
9998 run: jumping to instruction 41
 105 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1444 is 1156
9999 mem: location 1156 is 5
9999 mem: location 1444 is 1156
9999 mem: storing 6 in location 1156
 105 run: next:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1442 is 1151
9999 mem: location 1151 is 1499
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1499 in location 1216
9999 mem: incrementing refcount of 1499: 4 -> 5
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1499
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1216 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1501
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1501 is 0
9999 mem: storing 0 in location 1217
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1459
 105 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1459 is 0
9999 mem: storing 1 in location 1460
 105 run: jump-unless at-end?, 
9999 mem: location 1460 is 1
9998 run: jump-unless fell through
 105 run: bottom:number <- subtract screen-height, 1
9999 mem: location 1450 is 5
9999 mem: storing 4 in location 1461
 105 run: at-bottom?:boolean <- equal save-row, bottom
9999 mem: location 1447 is 1
9999 mem: location 1461 is 4
9999 mem: storing 0 in location 1462
 105 run: at-right?:boolean <- equal save-column, right
9999 mem: location 1448 is 5
9999 mem: location 1446 is 9
9999 mem: storing 0 in location 1463
 105 run: overflow?:boolean <- and at-bottom?, at-right?
9999 mem: location 1462 is 0
9999 mem: location 1463 is 0
9999 mem: storing 0 in location 1464
 105 run: jump-if overflow?, 
9999 mem: location 1464 is 0
9998 run: jump-if fell through
 105 run: move-cursor screen, save-row, save-column
9999 mem: location 1441 is 1012
9999 mem: location 1447 is 1
9999 mem: location 1448 is 5
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 115 -> 116
 106 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 106 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1223
 106 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 106 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 106 run: *column <- copy new-column
9999 mem: location 1223 is 5
9999 mem: location 1225 is 1016
9999 mem: storing 5 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: print screen, c
9999 mem: location 1441 is 1012
9999 mem: location 1440 is 102
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 116 -> 117
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 102
  90 print-character: 102 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 47 -> 48
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 15
9999 mem: storing 1050 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1248 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 102
9999 mem: location 1249 is 1050
9999 mem: storing 102 in location 1050
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1050
9999 mem: location 1050 is 102
9999 mem: location 1051 is 7
9999 mem: location 1248 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1051
9999 mem: storing 7 in location 1051
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1458
 105 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean
9999 mem: location 1439 is 1147
9999 mem: location 1441 is 1012
9999 mem: location 1458 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1147: 20 -> 19
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 19 -> 20
9999 mem: decrementing refcount of 1012: 117 -> 116
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 116 -> 117
9999 mem: storing 0 in location 1358
 104 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1499
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 6
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1405
9999 mem: incrementing refcount of 1169: 23 -> 24
 104 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1499
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 6
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1372
 104 run: jump-unless *undo, 
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1480
9998 run: jump-unless fell through
 104 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1480
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1480 in location 1216
9999 mem: incrementing refcount of 1480: 6 -> 7
 105 run: result <- get *in, value:offset
9999 mem: location 1216 is 1480
9999 mem: skipping refcount at 1480
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1481 is 1000
9999 mem: location 1482 is 0
9999 mem: location 1216 is 1480
9999 mem: skipping refcount at 1480
9998 run: address to copy is 1481
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1481 is 1000
9999 mem: storing 1000 in location 1217
9999 mem: incrementing refcount of 1000: 12 -> 13
 105 run: reply result:_elem
9999 mem: location 1217 is 1000
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1371
9999 mem: incrementing refcount of 1000: 13 -> 14
 104 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 0
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 5
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1011 is 0
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1002 in location 1378
 104 run: jump-unless typing, 
9999 mem: location 1378 is 1002
9998 run: jump-unless fell through
 104 run: previous-coalesce-tag:number <- get *typing, tag:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 5
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 1
9999 mem: storing 1 in location 1395
 104 run: jump-unless previous-coalesce-tag, 
9999 mem: location 1395 is 1
9998 run: jump-unless fell through
 104 run: insert-until:address:address:shared:duplex-list:character <- get-address *typing, insert-until:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 5
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1416
 104 run: *insert-until <- next_2 *before-cursor
9999 mem: location 1363 is 1151
9999 mem: location 1151 is 1499
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1499 in location 1216
9999 mem: incrementing refcount of 1499: 5 -> 6
 105 run: jump-if in, 1:offset
9999 mem: location 1216 is 1499
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1216 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1216 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1501
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1501 is 0
9999 mem: storing 0 in location 1217
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: location 1416 is 1009
9999 mem: storing 0 in location 1009
 104 run: after-row:address:number <- get-address *typing, after-row:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 5
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1005
9999 mem: storing 1005 in location 1397
 104 run: *after-row <- copy *cursor-row
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1397 is 1005
9999 mem: storing 1 in location 1005
 104 run: after-column:address:number <- get-address *typing, after-column:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 5
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1398
 104 run: *after-column <- copy *cursor-column
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 6
9999 mem: location 1398 is 1006
9999 mem: storing 6 in location 1006
 104 run: after-top:address:address:shared:duplex-list:character <- get-address *typing, after-top-of-screen:offset
9999 mem: location 1378 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 6
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1469
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1378 is 1002
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1399
 104 run: *after-top <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1499
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 6
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: location 1399 is 1007
9999 mem: decrementing refcount of 1169: 24 -> 23
9999 mem: storing 1169 in location 1007
9999 mem: incrementing refcount of 1169: 23 -> 24
 104 run: jump +done-adding-insert-operation:label
9998 run: jumping to instruction 436
 104 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1352 is 1012
9999 mem: location 1353 is 1147
9999 mem: location 1358 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 117 -> 116
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 116 -> 117
9999 mem: decrementing refcount of 1147: 20 -> 19
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 19 -> 20
9999 mem: storing 0 in location 1348
 103 run: jump-unless go-render?, 
9999 mem: location 1348 is 0
9998 run: jumping to instruction 25
 103 run: jump 
9998 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1499
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 6
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1499
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 6
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 6
9999 mem: storing 6 in location 1340
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 6
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 117 -> 118
 104 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 104 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1223
 104 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 104 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 104 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 104 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 104 run: *column <- copy new-column
9999 mem: location 1223 is 6
9999 mem: location 1225 is 1016
9999 mem: storing 6 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 118 -> 117
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 117 -> 118
 103 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1330
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1256
9999 mem: incrementing refcount of 1330: 7 -> 8
 104 run: jump-unless console, 
9999 mem: location 1256 is 1330
9998 run: jump-unless fell through
 104 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 6
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1331
9999 mem: storing 1331 in location 1257
 104 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 6
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1332 is 1284
9999 mem: storing 1284 in location 1258
9999 mem: incrementing refcount of 1284: 6 -> 7
 104 run: max:number <- length *buf
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9999 mem: storing 11 in location 1259
 104 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 6
9999 mem: location 1259 is 11
9999 mem: storing 0 in location 1260
 104 run: jump-unless done?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 12
 104 run: result <- index *buf, *current-event-index
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9998 run: base address is 1285
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 6
9998 run: address to copy is 1310
9998 run: its type is event
9999 mem: location 1310 is 2
9999 mem: location 1311 is 65513
9999 mem: location 1312 is 1
9999 mem: location 1313 is 2
9999 mem: storing 2 in location 1262
9999 mem: storing 65513 in location 1263
9999 mem: storing 1 in location 1264
9999 mem: storing 2 in location 1265
 104 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 6
9999 mem: location 1257 is 1331
9999 mem: storing 7 in location 1331
 104 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1262 is 2
9999 mem: location 1263 is 65513
9999 mem: location 1264 is 1
9999 mem: location 1265 is 2
9999 mem: location 1256 is 1330
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [2, 65513, 1, 2]
9998 run: result 1 is 1330
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1341
9999 mem: storing 65513 in location 1342
9999 mem: storing 1 in location 1343
9999 mem: storing 2 in location 1344
9999 mem: decrementing refcount of 1330: 8 -> 7
9999 mem: storing 1330 in location 1337
9999 mem: incrementing refcount of 1330: 7 -> 8
9999 mem: storing 1 in location 1345
9999 mem: storing 0 in location 1346
 103 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 103 run: jump-if quit?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1341 is 2
9999 mem: location 1342 is 65513
9999 mem: location 1343 is 1
9999 mem: location 1344 is 2
9999 mem: storing 1342 in location 1347
 103 run: jump-unless t, 
9999 mem: location 1347 is 1342
9998 run: jump-unless fell through
 103 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 mem: location 1347 is 1342
9999 mem: location 1342 is 65513
9999 mem: location 1343 is 1
9999 mem: location 1344 is 2
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1503
9999 mem: storing 27 in location 1504
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1506
9999 mem: incrementing refcount of 1012: 118 -> 119
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1507
9999 mem: incrementing refcount of 1147: 20 -> 21
 104 run: t:touch-event <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1508
9999 mem: storing 1 in location 1509
9999 mem: storing 2 in location 1510
 104 run: jump-if editor, 1:offset
9999 mem: location 1507 is 1147
9998 run: jumping to instruction 6
 104 run: click-row:number <- get t, row:offset
9999 mem: location 1508 is 65513
9999 mem: location 1509 is 1
9999 mem: location 1510 is 2
9998 run: address to copy is 1509
9998 run: its type is number
9999 mem: location 1509 is 1
9999 mem: storing 1 in location 1511
 104 run: jump-if click-row, 1:offset
9999 mem: location 1511 is 1
9998 run: jumping to instruction 9
 104 run: click-column:number <- get t, column:offset
9999 mem: location 1508 is 65513
9999 mem: location 1509 is 1
9999 mem: location 1510 is 2
9998 run: address to copy is 1510
9998 run: its type is number
9999 mem: location 1510 is 2
9999 mem: storing 2 in location 1512
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1507 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1499
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 6
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1507 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1513
 104 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1512 is 2
9999 mem: location 1513 is 0
9999 mem: storing 0 in location 1514
 104 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1514 is 0
9998 run: jumping to instruction 14
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1507 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1499
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 6
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1507 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1515
 104 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1512 is 2
9999 mem: location 1515 is 9
9999 mem: storing 0 in location 1516
 104 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1516 is 0
9998 run: jumping to instruction 18
 104 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1507 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1499
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 6
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1507 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1517
 104 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1507 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1499
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 6
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1507 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 6
9999 mem: storing 6 in location 1518
 104 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1507 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1499
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 6
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1507 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1519
9999 mem: incrementing refcount of 1169: 24 -> 25
 104 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1506 is 1012
9999 mem: location 1507 is 1147
9999 mem: location 1511 is 1
9999 mem: location 1512 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1532
9999 mem: storing 26 in location 1533
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1535
9999 mem: incrementing refcount of 1012: 119 -> 120
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1536
9999 mem: incrementing refcount of 1147: 21 -> 22
 105 run: target-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1537
 105 run: target-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1538
 105 run: jump-if editor, 1:offset
9999 mem: location 1536 is 1147
9998 run: jumping to instruction 7
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1536 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1499
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 6
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1536 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1539
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1536 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1499
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 6
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1536 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1540
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1535 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 120 -> 121
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 106 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1541
 105 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1536 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1499
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 6
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1536 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1542
9999 mem: incrementing refcount of 1169: 25 -> 26
 105 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1542 is 1169
9999 mem: storing 1169 in location 1543
9999 mem: incrementing refcount of 1169: 26 -> 27
 105 run: curr <- next_2 curr
9999 mem: location 1542 is 1169
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1216
9999 mem: incrementing refcount of 1169: 27 -> 28
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1169
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 1469
9999 mem: location 1172 is 0
9999 mem: location 1216 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 1469
9999 mem: storing 1469 in location 1217
9999 mem: incrementing refcount of 1469: 11 -> 12
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1469
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1469
9999 mem: decrementing refcount of 1169: 28 -> 27
9999 mem: storing 1469 in location 1542
9999 mem: incrementing refcount of 1469: 12 -> 13
 105 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1544
 105 run: column:number <- copy left
9999 mem: location 1539 is 0
9999 mem: storing 0 in location 1545
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1536 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1499
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 6
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1536 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1546
 105 run: *cursor-row <- copy target-row
9999 mem: location 1537 is 1
9999 mem: location 1546 is 1155
9999 mem: storing 1 in location 1155
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1536 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1499
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 6
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1536 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1547
 105 run: *cursor-column <- copy target-column
9999 mem: location 1538 is 2
9999 mem: location 1547 is 1156
9999 mem: storing 2 in location 1156
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1536 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1499
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1536 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1548
 105 run: jump-unless curr, 
9999 mem: location 1542 is 1469
9998 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1544 is 1
9999 mem: location 1541 is 5
9999 mem: storing 0 in location 1549
 105 run: jump-if off-screen?, 
9999 mem: location 1549 is 0
9998 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1544 is 1
9999 mem: location 1546 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1550
 105 run: jump-unless at-cursor-row?, 
9999 mem: location 1550 is 1
9998 run: jump-unless fell through
 105 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1545 is 0
9999 mem: location 1547 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 0 in location 1551
 105 run: jump-unless at-cursor?, 
9999 mem: location 1551 is 0
9998 run: jumping to instruction 31
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1542 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1483
9999 mem: location 1472 is 1169
9999 mem: location 1542 is 1469
9999 mem: skipping refcount at 1469
9998 run: address to copy is 1470
9998 run: its type is character
9999 mem: location 1470 is 97
9999 mem: storing 97 in location 1552
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1552 is 97
9999 mem: storing 0 in location 1553
 105 run: jump-unless newline?, 
9999 mem: location 1553 is 0
9998 run: jumping to instruction 49
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1545 is 0
9999 mem: location 1540 is 9
9999 mem: storing 0 in location 1555
 105 run: jump-unless at-right?, 
9999 mem: location 1555 is 0
9998 run: jumping to instruction 56
 105 run: curr <- next_2 curr
9999 mem: location 1542 is 1469
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1216
9999 mem: incrementing refcount of 1469: 13 -> 14
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1469
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1483
9999 mem: location 1472 is 1169
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1483
9999 mem: storing 1483 in location 1217
9999 mem: incrementing refcount of 1483: 9 -> 10
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1483
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1483
9999 mem: decrementing refcount of 1469: 14 -> 13
9999 mem: storing 1483 in location 1542
9999 mem: incrementing refcount of 1483: 10 -> 11
 105 run: prev <- next_2 prev
9999 mem: location 1543 is 1169
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1216
9999 mem: incrementing refcount of 1169: 27 -> 28
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1169
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 1469
9999 mem: location 1172 is 0
9999 mem: location 1216 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 1469
9999 mem: storing 1469 in location 1217
9999 mem: incrementing refcount of 1469: 13 -> 14
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1469
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1469
9999 mem: decrementing refcount of 1169: 28 -> 27
9999 mem: storing 1469 in location 1543
9999 mem: incrementing refcount of 1469: 14 -> 15
 105 run: column <- add column, 1
9999 mem: location 1545 is 0
9999 mem: storing 1 in location 1545
 105 run: jump 
9998 run: jumping to instruction 21
 105 run: jump-unless curr, 
9999 mem: location 1542 is 1483
9998 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1544 is 1
9999 mem: location 1541 is 5
9999 mem: storing 0 in location 1549
 105 run: jump-if off-screen?, 
9999 mem: location 1549 is 0
9998 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1544 is 1
9999 mem: location 1546 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1550
 105 run: jump-unless at-cursor-row?, 
9999 mem: location 1550 is 1
9998 run: jump-unless fell through
 105 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1545 is 1
9999 mem: location 1547 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 0 in location 1551
 105 run: jump-unless at-cursor?, 
9999 mem: location 1551 is 0
9998 run: jumping to instruction 31
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1542 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1487
9999 mem: location 1486 is 1469
9999 mem: location 1542 is 1483
9999 mem: skipping refcount at 1483
9998 run: address to copy is 1484
9998 run: its type is character
9999 mem: location 1484 is 98
9999 mem: storing 98 in location 1552
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1552 is 98
9999 mem: storing 0 in location 1553
 105 run: jump-unless newline?, 
9999 mem: location 1553 is 0
9998 run: jumping to instruction 49
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1545 is 1
9999 mem: location 1540 is 9
9999 mem: storing 0 in location 1555
 105 run: jump-unless at-right?, 
9999 mem: location 1555 is 0
9998 run: jumping to instruction 56
 105 run: curr <- next_2 curr
9999 mem: location 1542 is 1483
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1216
9999 mem: incrementing refcount of 1483: 11 -> 12
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1483
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1487
9999 mem: location 1486 is 1469
9999 mem: location 1216 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1485 is 1487
9999 mem: storing 1487 in location 1217
9999 mem: incrementing refcount of 1487: 9 -> 10
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1487
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1487
9999 mem: decrementing refcount of 1483: 12 -> 11
9999 mem: storing 1487 in location 1542
9999 mem: incrementing refcount of 1487: 10 -> 11
 105 run: prev <- next_2 prev
9999 mem: location 1543 is 1469
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1216
9999 mem: incrementing refcount of 1469: 15 -> 16
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1469
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1483
9999 mem: location 1472 is 1169
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1483
9999 mem: storing 1483 in location 1217
9999 mem: incrementing refcount of 1483: 11 -> 12
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1483
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1483
9999 mem: decrementing refcount of 1469: 16 -> 15
9999 mem: storing 1483 in location 1543
9999 mem: incrementing refcount of 1483: 12 -> 13
 105 run: column <- add column, 1
9999 mem: location 1545 is 1
9999 mem: storing 2 in location 1545
 105 run: jump 
9998 run: jumping to instruction 21
 105 run: jump-unless curr, 
9999 mem: location 1542 is 1487
9998 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1544 is 1
9999 mem: location 1541 is 5
9999 mem: storing 0 in location 1549
 105 run: jump-if off-screen?, 
9999 mem: location 1549 is 0
9998 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1544 is 1
9999 mem: location 1546 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1550
 105 run: jump-unless at-cursor-row?, 
9999 mem: location 1550 is 1
9998 run: jump-unless fell through
 105 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1545 is 2
9999 mem: location 1547 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 1 in location 1551
 105 run: jump-unless at-cursor?, 
9999 mem: location 1551 is 1
9998 run: jump-unless fell through
 105 run: *before-cursor <- copy prev
9999 mem: location 1543 is 1483
9999 mem: location 1548 is 1151
9999 mem: decrementing refcount of 1499: 6 -> 5
9999 mem: storing 1483 in location 1151
9999 mem: incrementing refcount of 1483: 13 -> 14
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1542 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 1491
9999 mem: location 1490 is 1483
9999 mem: location 1542 is 1487
9999 mem: skipping refcount at 1487
9998 run: address to copy is 1488
9998 run: its type is character
9999 mem: location 1488 is 99
9999 mem: storing 99 in location 1552
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1552 is 99
9999 mem: storing 0 in location 1553
 105 run: jump-unless newline?, 
9999 mem: location 1553 is 0
9998 run: jumping to instruction 49
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/scenario-editor-can-undo-and-redo-delete
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1545 is 2
9999 mem: location 1540 is 9
9999 mem: storing 0 in location 1555
 105 run: jump-unless at-right?, 
9999 mem: location 1555 is 0
9998 run: jumping to instruction 56
 105 run: curr <- next_2 curr
9999 mem: location 1542 is 1487
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1487 in location 1216
9999 mem: incrementing refcount of 1487: 11 -> 12
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1487
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 1491
9999 mem: location 1490 is 1483
9999 mem: location 1216 is 1487
9999 mem: skipping refcount at 1487
9999 type: type deduced to be character$
9998 run: address to copy is 1489
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1489 is 1491
9999 mem: storing 1491 in location 1217
9999 mem: incrementing refcount of 1491: 9 -> 10
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1491
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1491
9999 mem: decrementing refcount of 1487: 12 -> 11
9999 mem: storing 1491 in location 1542
9999 mem: incrementing refcount of 1491: 10 -> 11
 105 run: prev <- next_2 prev
9999 mem: location 1543 is 1483
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1216
9999 mem: incrementing refcount of 1483: 14 -> 15
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1483
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1487
9999 mem: location 1486 is 1469
9999 mem: location 1216 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1485 is 1487
9999 mem: storing 1487 in location 1217
9999 mem: incrementing refcount of 1487: 11 -> 12
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1487
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1487
9999 mem: decrementing refcount of 1483: 15 -> 14
9999 mem: storing 1487 in location 1543
9999 mem: incrementing refcount of 1487: 12 -> 13
 105 run: column <- add column, 1
9999 mem: location 1545 is 2
9999 mem: storing 3 in location 1545
 105 run: jump 
9998 run: jumping to instruction 21
 105 run: jump-unless curr, 
9999 mem: location 1542 is 1491
9998 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1544 is 1
9999 mem: location 1541 is 5
9999 mem: storing 0 in location 1549
 105 run: jump-if off-screen?, 
9999 mem: location 1549 is 0
9998 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1544 is 1
9999 mem: location 1546 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1550
 105 run: jump-unless at-cursor-row?, 
9999 mem: location 1550 is 1
9998 run: jump-unless fell through
 105 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1545 is 3
9999 mem: location 1547 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 0 in location 1551
 105 run: jump-unless at-cursor?, 
9999 mem: location 1551 is 0
9998 run: jumping to instruction 31
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1542 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1487
9999 mem: location 1542 is 1491
9999 mem: skipping refcount at 1491
9998 run: address to copy is 1492
9998 run: its type is character
9999 mem: location 1492 is 100
9999 mem: storing 100 in location 1552
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1552 is 100
9999 mem: storing 0 in location 1553
 105 run: jump-unless newline?, 
9999 mem: location 1553 is 0
9998 run: jumping to instruction 49
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1545 is 3
9999 mem: location 1540 is 9
9999 mem: storing 0 in location 1555
 105 run: jump-unless at-right?, 
9999 mem: location 1555 is 0
9998 run: jumping to instruction 56
 105 run: curr <- next_2 curr
9999 mem: location 1542 is 1491
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1216
9999 mem: incrementing refcount of 1491: 11 -> 12
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1491
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1487
9999 mem: location 1216 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1493 is 1495
9999 mem: storing 1495 in location 1217
9999 mem: incrementing refcount of 1495: 9 -> 10
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1495
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1495
9999 mem: decrementing refcount of 1491: 12 -> 11
9999 mem: storing 1495 in location 1542
9999 mem: incrementing refcount of 1495: 10 -> 11
 105 run: prev <- next_2 prev
9999 mem: location 1543 is 1487
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1487 in location 1216
9999 mem: incrementing refcount of 1487: 13 -> 14
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1487
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 1491
9999 mem: location 1490 is 1483
9999 mem: location 1216 is 1487
9999 mem: skipping refcount at 1487
9999 type: type deduced to be character$
9998 run: address to copy is 1489
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1489 is 1491
9999 mem: storing 1491 in location 1217
9999 mem: incrementing refcount of 1491: 11 -> 12
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1491
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1491
9999 mem: decrementing refcount of 1487: 14 -> 13
9999 mem: storing 1491 in location 1543
9999 mem: incrementing refcount of 1491: 12 -> 13
 105 run: column <- add column, 1
9999 mem: location 1545 is 3
9999 mem: storing 4 in location 1545
 105 run: jump 
9998 run: jumping to instruction 21
 105 run: jump-unless curr, 
9999 mem: location 1542 is 1495
9998 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1544 is 1
9999 mem: location 1541 is 5
9999 mem: storing 0 in location 1549
 105 run: jump-if off-screen?, 
9999 mem: location 1549 is 0
9998 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1544 is 1
9999 mem: location 1546 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1550
 105 run: jump-unless at-cursor-row?, 
9999 mem: location 1550 is 1
9998 run: jump-unless fell through
 105 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1545 is 4
9999 mem: location 1547 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 0 in location 1551
 105 run: jump-unless at-cursor?, 
9999 mem: location 1551 is 0
9998 run: jumping to instruction 31
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1542 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1542 is 1495
9999 mem: skipping refcount at 1495
9998 run: address to copy is 1496
9998 run: its type is character
9999 mem: location 1496 is 101
9999 mem: storing 101 in location 1552
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1552 is 101
9999 mem: storing 0 in location 1553
 105 run: jump-unless newline?, 
9999 mem: location 1553 is 0
9998 run: jumping to instruction 49
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1545 is 4
9999 mem: location 1540 is 9
9999 mem: storing 0 in location 1555
 105 run: jump-unless at-right?, 
9999 mem: location 1555 is 0
9998 run: jumping to instruction 56
 105 run: curr <- next_2 curr
9999 mem: location 1542 is 1495
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1216
9999 mem: incrementing refcount of 1495: 11 -> 12
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1495
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1216 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1497 is 1499
9999 mem: storing 1499 in location 1217
9999 mem: incrementing refcount of 1499: 5 -> 6
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1499
9999 mem: decrementing refcount of 1495: 12 -> 11
9999 mem: storing 1499 in location 1542
9999 mem: incrementing refcount of 1499: 6 -> 7
 105 run: prev <- next_2 prev
9999 mem: location 1543 is 1491
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1216
9999 mem: incrementing refcount of 1491: 13 -> 14
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1491
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1487
9999 mem: location 1216 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1493 is 1495
9999 mem: storing 1495 in location 1217
9999 mem: incrementing refcount of 1495: 11 -> 12
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1495
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1495
9999 mem: decrementing refcount of 1491: 14 -> 13
9999 mem: storing 1495 in location 1543
9999 mem: incrementing refcount of 1495: 12 -> 13
 105 run: column <- add column, 1
9999 mem: location 1545 is 4
9999 mem: storing 5 in location 1545
 105 run: jump 
9998 run: jumping to instruction 21
 105 run: jump-unless curr, 
9999 mem: location 1542 is 1499
9998 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1544 is 1
9999 mem: location 1541 is 5
9999 mem: storing 0 in location 1549
 105 run: jump-if off-screen?, 
9999 mem: location 1549 is 0
9998 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1544 is 1
9999 mem: location 1546 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1550
 105 run: jump-unless at-cursor-row?, 
9999 mem: location 1550 is 1
9998 run: jump-unless fell through
 105 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1545 is 5
9999 mem: location 1547 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 0 in location 1551
 105 run: jump-unless at-cursor?, 
9999 mem: location 1551 is 0
9998 run: jumping to instruction 31
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1542 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1542 is 1499
9999 mem: skipping refcount at 1499
9998 run: address to copy is 1500
9998 run: its type is character
9999 mem: location 1500 is 102
9999 mem: storing 102 in location 1552
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1552 is 102
9999 mem: storing 0 in location 1553
 105 run: jump-unless newline?, 
9999 mem: location 1553 is 0
9998 run: jumping to instruction 49
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1545 is 5
9999 mem: location 1540 is 9
9999 mem: storing 0 in location 1555
 105 run: jump-unless at-right?, 
9999 mem: location 1555 is 0
9998 run: jumping to instruction 56
 105 run: curr <- next_2 curr
9999 mem: location 1542 is 1499
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1499 in location 1216
9999 mem: incrementing refcount of 1499: 7 -> 8
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1499
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1216 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1501
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1501 is 0
9999 mem: storing 0 in location 1217
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1499: 8 -> 7
9999 mem: storing 0 in location 1542
 105 run: prev <- next_2 prev
9999 mem: location 1543 is 1495
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1216
9999 mem: incrementing refcount of 1495: 13 -> 14
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1495
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1216 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1497 is 1499
9999 mem: storing 1499 in location 1217
9999 mem: incrementing refcount of 1499: 7 -> 8
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1499
9999 mem: decrementing refcount of 1495: 14 -> 13
9999 mem: storing 1499 in location 1543
9999 mem: incrementing refcount of 1499: 8 -> 9
 105 run: column <- add column, 1
9999 mem: location 1545 is 5
9999 mem: storing 6 in location 1545
 105 run: jump 
9998 run: jumping to instruction 21
 105 run: jump-unless curr, 
9999 mem: location 1542 is 0
9998 run: jumping to instruction 61
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1544 is 1
9999 mem: location 1546 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1550
 105 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1545 is 6
9999 mem: location 1547 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 0 in location 1556
 105 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1550 is 1
9999 mem: location 1556 is 0
9999 mem: storing 0 in location 1557
 105 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1544 is 1
9999 mem: location 1546 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 0 in location 1558
 105 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1557 is 0
9999 mem: location 1558 is 0
9999 mem: storing 0 in location 1559
 105 run: jump-unless before-cursor?, 
9999 mem: location 1559 is 0
9998 run: jumping to instruction 72
 105 run: reply editor:address:shared:editor-data
9999 mem: location 1536 is 1147
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1147: 22 -> 21
9999 mem: storing 1147 in location 1507
9999 mem: incrementing refcount of 1147: 21 -> 22
 104 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1520
 104 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1507 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1507 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1521
 104 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1507 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1507 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1522
 104 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1507 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1507 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1523
9999 mem: incrementing refcount of 1169: 27 -> 28
 104 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1520 is 0
9998 run: jumping to instruction 44
 104 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1120 in location 1525
9999 mem: incrementing refcount of 1120: 0 -> 1
 104 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1517 is 1
9999 mem: location 1518 is 6
9999 mem: location 1519 is 1169
9999 mem: location 1521 is 1
9999 mem: location 1522 is 2
9999 mem: location 1523 is 1169
9999 mem: location 1520 is 0
9999 mem: location 1525 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1525 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1 in location 1121
9999 mem: storing 1 in location 1122
9999 mem: storing 6 in location 1123
9999 mem: storing 1169 in location 1124
9999 mem: storing 1 in location 1125
9999 mem: storing 2 in location 1126
9999 mem: storing 1169 in location 1127
9999 mem: storing 0 in location 1128
 104 run: editor <- add-operation editor, op
9999 mem: location 1507 is 1147
9999 mem: location 1525 is 1120
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1476
9999 mem: incrementing refcount of 1147: 22 -> 23
 105 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1477
9999 mem: incrementing refcount of 1120: 1 -> 2
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1476 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1480
9999 mem: location 1159 is 0
9999 mem: location 1476 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1478
 105 run: *undo <- push_4 op, *undo
9999 mem: location 1477 is 1120
9999 mem: location 1478 is 1158
9999 mem: location 1158 is 1480
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1221
9999 mem: incrementing refcount of 1120: 2 -> 3
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1480 in location 1222
9999 mem: incrementing refcount of 1480: 7 -> 8
 106 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1560
9999 mem: storing 1560 in location 1223
9999 mem: incrementing refcount of 1560: 0 -> 1
 106 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1223 is 1560
9999 mem: skipping refcount at 1560
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1561 is 0
9999 mem: location 1562 is 0
9999 mem: location 1223 is 1560
9999 mem: skipping refcount at 1560
9998 run: address to copy is 1561
9999 mem: storing 1561 in location 1224
 106 run: *val <- copy x
9999 mem: location 1221 is 1120
9999 mem: location 1224 is 1561
9999 mem: storing 1120 in location 1561
9999 mem: incrementing refcount of 1120: 3 -> 4
 106 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1223 is 1560
9999 mem: skipping refcount at 1560
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1561 is 1120
9999 mem: location 1562 is 0
9999 mem: location 1223 is 1560
9999 mem: skipping refcount at 1560
9999 type: type deduced to be address$
9998 run: address to copy is 1562
9999 mem: storing 1562 in location 1225
 106 run: *next <- copy in
9999 mem: location 1222 is 1480
9999 mem: location 1225 is 1562
9999 mem: storing 1480 in location 1562
9999 mem: incrementing refcount of 1480: 8 -> 9
 106 run: reply result
9999 mem: location 1223 is 1560
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1560
9999 mem: location 1478 is 1158
9999 mem: decrementing refcount of 1480: 9 -> 8
9999 mem: storing 1560 in location 1158
9999 mem: incrementing refcount of 1560: 1 -> 2
 105 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1476 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 0
9999 mem: location 1476 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1479
 105 run: *redo <- copy 0
9999 mem: location 1479 is 1159
9999 mem: storing 0 in location 1159
 105 run: reply editor/same-as-ingredient:0
9999 mem: location 1476 is 1147
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1147: 23 -> 22
9999 mem: storing 1147 in location 1507
9999 mem: incrementing refcount of 1147: 22 -> 23
 104 run: reply 1/true
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 3
 103 run: jump +next-event:label
9998 run: jumping to instruction 6
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1340
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 2
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 121 -> 122
 104 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 104 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1223
 104 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 104 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 104 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 104 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 104 run: *column <- copy new-column
9999 mem: location 1223 is 2
9999 mem: location 1225 is 1016
9999 mem: storing 2 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 122 -> 121
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 121 -> 122
 103 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1330
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1256
9999 mem: incrementing refcount of 1330: 8 -> 9
 104 run: jump-unless console, 
9999 mem: location 1256 is 1330
9998 run: jump-unless fell through
 104 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 7
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1331
9999 mem: storing 1331 in location 1257
 104 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 7
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1332 is 1284
9999 mem: storing 1284 in location 1258
9999 mem: incrementing refcount of 1284: 7 -> 8
 104 run: max:number <- length *buf
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9999 mem: storing 11 in location 1259
 104 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 7
9999 mem: location 1259 is 11
9999 mem: storing 0 in location 1260
 104 run: jump-unless done?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 12
 104 run: result <- index *buf, *current-event-index
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9998 run: base address is 1285
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 7
9998 run: address to copy is 1314
9998 run: its type is event
9999 mem: location 1314 is 1
9999 mem: location 1315 is 65522
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 1 in location 1262
9999 mem: storing 65522 in location 1263
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 104 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 7
9999 mem: location 1257 is 1331
9999 mem: storing 8 in location 1331
 104 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1262 is 1
9999 mem: location 1263 is 65522
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1256 is 1330
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [1, 65522, 0, 0]
9998 run: result 1 is 1330
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1341
9999 mem: storing 65522 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1330: 9 -> 8
9999 mem: storing 1330 in location 1337
9999 mem: incrementing refcount of 1330: 8 -> 9
9999 mem: storing 1 in location 1345
9999 mem: storing 0 in location 1346
 103 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 103 run: jump-if quit?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1341 is 1
9999 mem: location 1342 is 65522
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1347
 103 run: jump-unless t, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 18
 103 run: jump-if t, 
9999 mem: location 1347 is 0
9998 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 mem: location 1341 is 1
9999 mem: location 1342 is 65522
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 122 -> 123
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 23 -> 24
 104 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1354
9999 mem: storing 65522 in location 1355
9999 mem: storing 0 in location 1356
9999 mem: storing 0 in location 1357
 104 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1358
 104 run: jump-if editor, 1:offset
9999 mem: location 1353 is 1147
9998 run: jumping to instruction 7
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 123 -> 124
 105 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 105 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 105 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1359
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 124 -> 125
 105 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 105 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 105 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1360
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1361
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1362
 104 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1363
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1364
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1365
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1366
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1367
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1354 is 1
9999 mem: location 1355 is 65522
9999 mem: location 1356 is 0
9999 mem: location 1357 is 0
9999 mem: storing 0 in location 1368
 104 run: jump-unless c, 
9999 mem: location 1368 is 0
9998 run: jumping to instruction 438
 104 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1354 is 1
9999 mem: location 1355 is 65522
9999 mem: location 1356 is 0
9999 mem: location 1357 is 0
9999 mem: storing 1355 in location 1422
 104 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1422 is 1355
 104 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1385
 104 run: jump-unless page-up?, 
9999 mem: location 1385 is 0
9998 run: jumping to instruction 482
 104 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1401
 104 run: jump-unless page-down?, 
9999 mem: location 1401 is 0
9998 run: jumping to instruction 523
 104 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1408
 104 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1408 is 0
9998 run: jumping to instruction 561
 104 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1409
 104 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1409 is 0
9998 run: jumping to instruction 599
 104 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1423
 104 run: jump-unless move-to-next-line?, 
9999 mem: location 1423 is 0
9998 run: jumping to instruction 636
 104 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1424
 104 run: jump-unless move-to-previous-line?, 
9999 mem: location 1424 is 0
9998 run: jumping to instruction 673
 104 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1425
 104 run: jump-unless move-to-previous-character?, 
9999 mem: location 1425 is 0
9998 run: jumping to instruction 716
 104 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1427
 104 run: jump-unless move-to-next-character?, 
9999 mem: location 1427 is 0
9998 run: jumping to instruction 757
 104 run: delete-next-character?:boolean <- equal *k, 65522/delete
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 1 in location 1429
 104 run: jump-unless delete-next-character?, 
9999 mem: location 1429 is 1
9998 run: jump-unless fell through
 104 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1403
9999 mem: incrementing refcount of 1169: 28 -> 29
 104 run: editor, screen, go-render?:boolean, deleted-cell:address:shared:duplex-list:character <- delete-at-cursor editor, screen
9999 mem: location 1353 is 1147
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 17
9999 mem: allocating size 19
9999 mem: new alloc: 1563
9999 mem: storing 17 in location 1564
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1566
9999 mem: incrementing refcount of 1147: 24 -> 25
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1567
9999 mem: incrementing refcount of 1012: 125 -> 126
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 0
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1568
 105 run: data:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 0
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1148
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1148 is 1169
9999 mem: storing 1169 in location 1569
9999 mem: incrementing refcount of 1169: 29 -> 30
 105 run: deleted-cell:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1568 is 1151
9999 mem: location 1151 is 1483
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1216
9999 mem: incrementing refcount of 1483: 14 -> 15
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1483
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1487
9999 mem: location 1486 is 1469
9999 mem: location 1216 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1485 is 1487
9999 mem: storing 1487 in location 1217
9999 mem: incrementing refcount of 1487: 13 -> 14
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1487
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1487
9999 mem: storing 1487 in location 1570
9999 mem: incrementing refcount of 1487: 14 -> 15
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1571
 105 run: jump-if deleted-cell, 1:offset
9999 mem: location 1570 is 1487
9998 run: jumping to instruction 9
 105 run: currc:character <- get *deleted-cell, value:offset
9999 mem: location 1570 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 1491
9999 mem: location 1490 is 1483
9999 mem: location 1570 is 1487
9999 mem: skipping refcount at 1487
9998 run: address to copy is 1488
9998 run: its type is character
9999 mem: location 1488 is 99
9999 mem: storing 99 in location 1572
 105 run: data <- remove_2 deleted-cell, data
9999 mem: location 1570 is 1487
9999 mem: location 1569 is 1169
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: x:address:shared:duplex-list:_elem/contained-in:in <- next-ingredient-without-typechecking 
9999 mem: storing 1487 in location 1221
9999 mem: incrementing refcount of 1487: 15 -> 16
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1222
9999 mem: incrementing refcount of 1169: 30 -> 31
 106 run: jump-if x, 1:offset
9999 mem: location 1221 is 1487
9998 run: jumping to instruction 5
 106 run: next-node:address:shared:duplex-list:_elem <- get *x, next:offset
9999 mem: location 1221 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 1491
9999 mem: location 1490 is 1483
9999 mem: location 1221 is 1487
9999 mem: skipping refcount at 1487
9999 type: type deduced to be character$
9998 run: address to copy is 1489
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1489 is 1491
9999 mem: storing 1491 in location 1223
9999 mem: incrementing refcount of 1491: 13 -> 14
 106 run: prev-node:address:shared:duplex-list:_elem <- get *x, prev:offset
9999 mem: location 1221 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 1491
9999 mem: location 1490 is 1483
9999 mem: location 1221 is 1487
9999 mem: skipping refcount at 1487
9999 type: type deduced to be character$
9998 run: address to copy is 1490
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1490 is 1483
9999 mem: storing 1483 in location 1224
9999 mem: incrementing refcount of 1483: 15 -> 16
 106 run: tmp:address:address:shared:duplex-list:_elem <- get-address *x, next:offset
9999 mem: location 1221 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 1491
9999 mem: location 1490 is 1483
9999 mem: location 1221 is 1487
9999 mem: skipping refcount at 1487
9999 type: type deduced to be character$
9998 run: address to copy is 1489
9999 mem: storing 1489 in location 1225
 106 run: *tmp <- copy 0
9999 mem: location 1225 is 1489
9999 mem: decrementing refcount of 1491: 14 -> 13
9999 mem: storing 0 in location 1489
 106 run: tmp <- get-address *x, prev:offset
9999 mem: location 1221 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 0
9999 mem: location 1490 is 1483
9999 mem: location 1221 is 1487
9999 mem: skipping refcount at 1487
9999 type: type deduced to be character$
9998 run: address to copy is 1490
9999 mem: storing 1490 in location 1225
 106 run: *tmp <- copy 0
9999 mem: location 1225 is 1490
9999 mem: decrementing refcount of 1483: 16 -> 15
9999 mem: storing 0 in location 1490
 106 run: jump-unless next-node, 
9999 mem: location 1223 is 1491
9998 run: jump-unless fell through
 106 run: tmp <- get-address *next-node, prev:offset
9999 mem: location 1223 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1487
9999 mem: location 1223 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1494
9999 mem: storing 1494 in location 1225
 106 run: *tmp <- copy prev-node
9999 mem: location 1224 is 1483
9999 mem: location 1225 is 1494
9999 mem: decrementing refcount of 1487: 16 -> 15
9999 mem: storing 1483 in location 1494
9999 mem: incrementing refcount of 1483: 15 -> 16
 106 run: jump-unless prev-node, 
9999 mem: location 1224 is 1483
9998 run: jump-unless fell through
 106 run: tmp <- get-address *prev-node, next:offset
9999 mem: location 1224 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1487
9999 mem: location 1486 is 1469
9999 mem: location 1224 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9999 mem: storing 1485 in location 1225
 106 run: *tmp <- copy next-node
9999 mem: location 1223 is 1491
9999 mem: location 1225 is 1485
9999 mem: decrementing refcount of 1487: 15 -> 14
9999 mem: storing 1491 in location 1485
9999 mem: incrementing refcount of 1491: 13 -> 14
 106 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1222 is 1169
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1169
9999 mem: decrementing refcount of 1169: 31 -> 30
9999 mem: storing 1169 in location 1569
9999 mem: incrementing refcount of 1169: 30 -> 31
 105 run: deleted-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1572 is 99
9999 mem: storing 0 in location 1573
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1571
 105 run: jump-unless deleted-newline?, 1:offset
9999 mem: location 1573 is 0
9998 run: jumping to instruction 15
 105 run: curr:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1568 is 1151
9999 mem: location 1151 is 1483
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1216
9999 mem: incrementing refcount of 1483: 16 -> 17
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1483
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1491
9999 mem: location 1486 is 1469
9999 mem: location 1216 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1485 is 1491
9999 mem: storing 1491 in location 1217
9999 mem: incrementing refcount of 1491: 14 -> 15
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1491
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1491
9999 mem: storing 1491 in location 1574
9999 mem: incrementing refcount of 1491: 15 -> 16
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 0
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1575
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 0
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1576
 105 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1567 is 1012
9999 mem: location 1575 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1576 is 1156
9999 mem: location 1156 is 2
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 126 -> 127
 106 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 106 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1223
 106 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 106 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 106 run: *column <- copy new-column
9999 mem: location 1223 is 2
9999 mem: location 1225 is 1016
9999 mem: storing 2 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 127 -> 126
9999 mem: storing 1012 in location 1567
9999 mem: incrementing refcount of 1012: 126 -> 127
 105 run: curr-column:number <- copy *cursor-column
9999 mem: location 1576 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1577
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1567 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 127 -> 128
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 106 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1578
 105 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1577 is 2
9999 mem: location 1578 is 10
9999 mem: storing 0 in location 1579
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1571
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1579 is 0
9998 run: jumping to instruction 26
 105 run: jump-unless curr, 
9999 mem: location 1574 is 1491
9998 run: jump-unless fell through
 105 run: currc:character <- get *curr, value:offset
9999 mem: location 1574 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1483
9999 mem: location 1574 is 1491
9999 mem: skipping refcount at 1491
9998 run: address to copy is 1492
9998 run: its type is character
9999 mem: location 1492 is 100
9999 mem: storing 100 in location 1572
 105 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1572 is 100
9999 mem: storing 0 in location 1580
 105 run: jump-if at-newline?, 
9999 mem: location 1580 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, currc
9999 mem: location 1567 is 1012
9999 mem: location 1572 is 100
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 128 -> 129
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 100
  90 print-character: 100 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 100
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 48 -> 49
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 100
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 12
9999 mem: storing 1044 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 99
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 100
9999 mem: location 1249 is 1044
9999 mem: storing 100 in location 1044
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 100
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1045
9999 mem: storing 7 in location 1045
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 129 -> 128
9999 mem: storing 1012 in location 1567
9999 mem: incrementing refcount of 1012: 128 -> 129
 105 run: curr-column <- add curr-column, 1
9999 mem: location 1577 is 2
9999 mem: storing 3 in location 1577
 105 run: curr <- next_2 curr
9999 mem: location 1574 is 1491
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1216
9999 mem: incrementing refcount of 1491: 16 -> 17
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1491
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1483
9999 mem: location 1216 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1493 is 1495
9999 mem: storing 1495 in location 1217
9999 mem: incrementing refcount of 1495: 13 -> 14
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1495
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1495
9999 mem: decrementing refcount of 1491: 17 -> 16
9999 mem: storing 1495 in location 1574
9999 mem: incrementing refcount of 1495: 14 -> 15
 105 run: jump 
9998 run: jumping to instruction 22
 105 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1577 is 3
9999 mem: location 1578 is 10
9999 mem: storing 0 in location 1579
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1571
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1579 is 0
9998 run: jumping to instruction 26
 105 run: jump-unless curr, 
9999 mem: location 1574 is 1495
9998 run: jump-unless fell through
 105 run: currc:character <- get *curr, value:offset
9999 mem: location 1574 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1574 is 1495
9999 mem: skipping refcount at 1495
9998 run: address to copy is 1496
9998 run: its type is character
9999 mem: location 1496 is 101
9999 mem: storing 101 in location 1572
 105 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1572 is 101
9999 mem: storing 0 in location 1580
 105 run: jump-if at-newline?, 
9999 mem: location 1580 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, currc
9999 mem: location 1567 is 1012
9999 mem: location 1572 is 101
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 129 -> 130
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 101
  90 print-character: 101 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 49 -> 50
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 13
9999 mem: storing 1046 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1046
9999 mem: location 1046 is 100
9999 mem: location 1047 is 7
9999 mem: location 1248 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 101
9999 mem: location 1249 is 1046
9999 mem: storing 101 in location 1046
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1046
9999 mem: location 1046 is 101
9999 mem: location 1047 is 7
9999 mem: location 1248 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1047
9999 mem: storing 7 in location 1047
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 130 -> 129
9999 mem: storing 1012 in location 1567
9999 mem: incrementing refcount of 1012: 129 -> 130
 105 run: curr-column <- add curr-column, 1
9999 mem: location 1577 is 3
9999 mem: storing 4 in location 1577
 105 run: curr <- next_2 curr
9999 mem: location 1574 is 1495
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1216
9999 mem: incrementing refcount of 1495: 15 -> 16
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1495
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1216 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1497 is 1499
9999 mem: storing 1499 in location 1217
9999 mem: incrementing refcount of 1499: 9 -> 10
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1499
9999 mem: decrementing refcount of 1495: 16 -> 15
9999 mem: storing 1499 in location 1574
9999 mem: incrementing refcount of 1499: 10 -> 11
 105 run: jump 
9998 run: jumping to instruction 22
 105 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1577 is 4
9999 mem: location 1578 is 10
9999 mem: storing 0 in location 1579
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1571
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1579 is 0
9998 run: jumping to instruction 26
 105 run: jump-unless curr, 
9999 mem: location 1574 is 1499
9998 run: jump-unless fell through
 105 run: currc:character <- get *curr, value:offset
9999 mem: location 1574 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1574 is 1499
9999 mem: skipping refcount at 1499
9998 run: address to copy is 1500
9998 run: its type is character
9999 mem: location 1500 is 102
9999 mem: storing 102 in location 1572
 105 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1572 is 102
9999 mem: storing 0 in location 1580
 105 run: jump-if at-newline?, 
9999 mem: location 1580 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, currc
9999 mem: location 1567 is 1012
9999 mem: location 1572 is 102
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 130 -> 131
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 102
  90 print-character: 102 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
9990 schedule: print/delete-at-cursor/handle-keyboard-event/editor-event-loop/scenario-editor-can-undo-and-redo-delete
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 50 -> 51
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 14
9999 mem: storing 1048 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1048
9999 mem: location 1048 is 101
9999 mem: location 1049 is 7
9999 mem: location 1248 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 102
9999 mem: location 1249 is 1048
9999 mem: storing 102 in location 1048
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1048
9999 mem: location 1048 is 102
9999 mem: location 1049 is 7
9999 mem: location 1248 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1049
9999 mem: storing 7 in location 1049
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 131 -> 130
9999 mem: storing 1012 in location 1567
9999 mem: incrementing refcount of 1012: 130 -> 131
 105 run: curr-column <- add curr-column, 1
9999 mem: location 1577 is 4
9999 mem: storing 5 in location 1577
 105 run: curr <- next_2 curr
9999 mem: location 1574 is 1499
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1499 in location 1216
9999 mem: incrementing refcount of 1499: 11 -> 12
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1499
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1216 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1501
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1501 is 0
9999 mem: storing 0 in location 1217
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1499: 12 -> 11
9999 mem: storing 0 in location 1574
 105 run: jump 
9998 run: jumping to instruction 22
 105 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1577 is 5
9999 mem: location 1578 is 10
9999 mem: storing 0 in location 1579
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1571
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1579 is 0
9998 run: jumping to instruction 26
 105 run: jump-unless curr, 
9999 mem: location 1574 is 0
9998 run: jumping to instruction 34
 105 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1581
 105 run: screen <- print screen, space
9999 mem: location 1567 is 1012
9999 mem: location 1581 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 131 -> 132
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 51 -> 52
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 15
9999 mem: storing 1050 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1050
9999 mem: location 1050 is 102
9999 mem: location 1051 is 7
9999 mem: location 1248 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1050
9999 mem: storing 32 in location 1050
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1248 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1051
9999 mem: storing 7 in location 1051
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 132 -> 131
9999 mem: storing 1012 in location 1567
9999 mem: incrementing refcount of 1012: 131 -> 132
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1571
 105 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean, deleted-cell:address:shared:duplex-list:character
9999 mem: location 1566 is 1147
9999 mem: location 1567 is 1012
9999 mem: location 1571 is 0
9999 mem: location 1570 is 1487
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9998 run: result 1 is 1012
9998 run: result 2 is 0
9998 run: result 3 is 1487
9999 mem: decrementing refcount of 1147: 25 -> 24
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 24 -> 25
9999 mem: decrementing refcount of 1012: 132 -> 131
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 131 -> 132
9999 mem: storing 0 in location 1358
9999 mem: storing 1487 in location 1430
9999 mem: incrementing refcount of 1487: 14 -> 15
 104 run: jump-unless deleted-cell, 
9999 mem: location 1430 is 1487
9998 run: jump-unless fell through
 104 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1405
9999 mem: incrementing refcount of 1169: 31 -> 32
 104 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1372
 104 run: jump-unless *undo, 
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1560
9998 run: jump-unless fell through
 104 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1560
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1560 in location 1216
9999 mem: incrementing refcount of 1560: 2 -> 3
 105 run: result <- get *in, value:offset
9999 mem: location 1216 is 1560
9999 mem: skipping refcount at 1560
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1561 is 1120
9999 mem: location 1562 is 1480
9999 mem: location 1216 is 1560
9999 mem: skipping refcount at 1560
9998 run: address to copy is 1561
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1561 is 1120
9999 mem: storing 1120 in location 1217
9999 mem: incrementing refcount of 1120: 4 -> 5
 105 run: reply result:_elem
9999 mem: location 1217 is 1120
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1120
9999 mem: storing 1120 in location 1371
9999 mem: incrementing refcount of 1120: 5 -> 6
 104 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1371 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 6
9999 mem: location 1124 is 1169
9999 mem: location 1125 is 1
9999 mem: location 1126 is 2
9999 mem: location 1127 is 1169
9999 mem: location 1128 is 0
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1371 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 0 in location 1373
 104 run: jump-unless deletion, 
9999 mem: location 1373 is 0
9998 run: jumping to instruction 787
 104 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 mem: new alloc: 1582
9999 mem: decrementing refcount of 1120: 6 -> 5
9999 mem: storing 1582 in location 1371
9999 mem: incrementing refcount of 1582: 0 -> 1
 104 run: deleted-until:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1363 is 1151
9999 mem: location 1151 is 1483
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1216
9999 mem: incrementing refcount of 1483: 17 -> 18
 105 run: jump-if in, 1:offset
9999 mem: location 1216 is 1483
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1216 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1491
9999 mem: location 1486 is 1469
9999 mem: location 1216 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1485 is 1491
9999 mem: storing 1491 in location 1217
9999 mem: incrementing refcount of 1491: 16 -> 17
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1491
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1491
9999 mem: storing 1491 in location 1406
9999 mem: incrementing refcount of 1491: 17 -> 18
 104 run: *op <- merge 2/delete-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, deleted-cell/deleted, *before-cursor/delete-from, deleted-until, 2/coalesce-delete
9999 mem: location 1366 is 1
9999 mem: location 1367 is 2
9999 mem: location 1403 is 1169
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 2
9999 mem: location 1405 is 1169
9999 mem: location 1430 is 1487
9999 mem: location 1363 is 1151
9999 mem: location 1151 is 1483
9999 mem: location 1406 is 1491
9999 mem: location 1371 is 1582
9999 mem: skipping refcount at 1582
9999 mem: location 1371 is 1582
9999 mem: skipping refcount at 1582
9999 mem: storing 2 in location 1583
9999 mem: storing 1 in location 1584
9999 mem: storing 2 in location 1585
9999 mem: storing 1169 in location 1586
9999 mem: storing 1 in location 1587
9999 mem: storing 2 in location 1588
9999 mem: storing 1169 in location 1589
9999 mem: storing 1487 in location 1590
9999 mem: storing 1483 in location 1591
9999 mem: storing 1491 in location 1592
9999 mem: storing 2 in location 1593
 104 run: editor <- add-operation editor, op
9999 mem: location 1353 is 1147
9999 mem: location 1371 is 1582
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1476
9999 mem: incrementing refcount of 1147: 25 -> 26
 105 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1582 in location 1477
9999 mem: incrementing refcount of 1582: 1 -> 2
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1476 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 0
9999 mem: location 1476 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1478
 105 run: *undo <- push_4 op, *undo
9999 mem: location 1477 is 1582
9999 mem: location 1478 is 1158
9999 mem: location 1158 is 1560
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1582 in location 1221
9999 mem: incrementing refcount of 1582: 2 -> 3
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1560 in location 1222
9999 mem: incrementing refcount of 1560: 3 -> 4
 106 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1594
9999 mem: storing 1594 in location 1223
9999 mem: incrementing refcount of 1594: 0 -> 1
 106 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1223 is 1594
9999 mem: skipping refcount at 1594
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1595 is 0
9999 mem: location 1596 is 0
9999 mem: location 1223 is 1594
9999 mem: skipping refcount at 1594
9998 run: address to copy is 1595
9999 mem: storing 1595 in location 1224
 106 run: *val <- copy x
9999 mem: location 1221 is 1582
9999 mem: location 1224 is 1595
9999 mem: storing 1582 in location 1595
9999 mem: incrementing refcount of 1582: 3 -> 4
 106 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1223 is 1594
9999 mem: skipping refcount at 1594
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1595 is 1582
9999 mem: location 1596 is 0
9999 mem: location 1223 is 1594
9999 mem: skipping refcount at 1594
9999 type: type deduced to be address$
9998 run: address to copy is 1596
9999 mem: storing 1596 in location 1225
 106 run: *next <- copy in
9999 mem: location 1222 is 1560
9999 mem: location 1225 is 1596
9999 mem: storing 1560 in location 1596
9999 mem: incrementing refcount of 1560: 4 -> 5
 106 run: reply result
9999 mem: location 1223 is 1594
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1594
9999 mem: location 1478 is 1158
9999 mem: decrementing refcount of 1560: 5 -> 4
9999 mem: storing 1594 in location 1158
9999 mem: incrementing refcount of 1594: 1 -> 2
 105 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1476 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1476 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1479
 105 run: *redo <- copy 0
9999 mem: location 1479 is 1159
9999 mem: storing 0 in location 1159
 105 run: reply editor/same-as-ingredient:0
9999 mem: location 1476 is 1147
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1147: 26 -> 25
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 25 -> 26
 104 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1352 is 1012
9999 mem: location 1353 is 1147
9999 mem: location 1358 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 132 -> 131
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 131 -> 132
9999 mem: decrementing refcount of 1147: 26 -> 25
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 25 -> 26
9999 mem: storing 0 in location 1348
 103 run: jump-unless go-render?, 
9999 mem: location 1348 is 0
9998 run: jumping to instruction 25
 103 run: jump 
9998 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1340
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 2
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 132 -> 133
 104 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 104 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1223
 104 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 104 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 104 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 104 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 104 run: *column <- copy new-column
9999 mem: location 1223 is 2
9999 mem: location 1225 is 1016
9999 mem: storing 2 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 133 -> 132
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 132 -> 133
 103 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1330
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1256
9999 mem: incrementing refcount of 1330: 9 -> 10
 104 run: jump-unless console, 
9999 mem: location 1256 is 1330
9998 run: jump-unless fell through
 104 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 8
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1331
9999 mem: storing 1331 in location 1257
 104 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 8
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1332 is 1284
9999 mem: storing 1284 in location 1258
9999 mem: incrementing refcount of 1284: 8 -> 9
 104 run: max:number <- length *buf
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9999 mem: storing 11 in location 1259
 104 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 8
9999 mem: location 1259 is 11
9999 mem: storing 0 in location 1260
 104 run: jump-unless done?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 12
 104 run: result <- index *buf, *current-event-index
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9998 run: base address is 1285
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 8
9998 run: address to copy is 1318
9998 run: its type is event
9999 mem: location 1318 is 0
9999 mem: location 1319 is 8
9999 mem: location 1320 is 0
9999 mem: location 1321 is 0
9999 mem: storing 0 in location 1262
9999 mem: storing 8 in location 1263
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 104 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 8
9999 mem: location 1257 is 1331
9999 mem: storing 9 in location 1331
 104 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1262 is 0
9999 mem: location 1263 is 8
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1256 is 1330
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 8, 0, 0]
9998 run: result 1 is 1330
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1341
9999 mem: storing 8 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1330: 10 -> 9
9999 mem: storing 1330 in location 1337
9999 mem: incrementing refcount of 1330: 9 -> 10
9999 mem: storing 1 in location 1345
9999 mem: storing 0 in location 1346
 103 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 103 run: jump-if quit?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1341 is 0
9999 mem: location 1342 is 8
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1347
 103 run: jump-unless t, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 18
 103 run: jump-if t, 
9999 mem: location 1347 is 0
9998 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 mem: location 1341 is 0
9999 mem: location 1342 is 8
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 133 -> 134
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 26 -> 27
 104 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1354
9999 mem: storing 8 in location 1355
9999 mem: storing 0 in location 1356
9999 mem: storing 0 in location 1357
 104 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1358
 104 run: jump-if editor, 1:offset
9999 mem: location 1353 is 1147
9998 run: jumping to instruction 7
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 134 -> 135
 105 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 105 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 105 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1359
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 135 -> 136
 105 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 105 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 105 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1360
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1361
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1362
 104 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1363
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1364
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1365
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1366
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1367
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1354 is 0
9999 mem: location 1355 is 8
9999 mem: location 1356 is 0
9999 mem: location 1357 is 0
9999 mem: storing 1355 in location 1368
 104 run: jump-unless c, 
9999 mem: location 1368 is 1355
9998 run: jump-unless fell through
 104 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 104 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 8
9999 mem: storing 0 in location 1369
 104 run: jump-unless redo?, 
9999 mem: location 1369 is 0
9998 run: jumping to instruction 61
 104 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 8
9999 mem: storing 0 in location 1380
 104 run: jump-unless undo?, 
9999 mem: location 1380 is 0
9998 run: jumping to instruction 108
 104 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 8
9999 mem: storing 0 in location 1385
 104 run: jump-unless page-up?, 
9999 mem: location 1385 is 0
9998 run: jumping to instruction 149
 104 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 8
9999 mem: storing 0 in location 1401
 104 run: jump-unless page-down?, 
9999 mem: location 1401 is 0
9998 run: jumping to instruction 190
 104 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 8
9999 mem: storing 0 in location 1402
 104 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1402 is 0
9998 run: jumping to instruction 210
 104 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 8
9999 mem: storing 0 in location 1407
 104 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1407 is 0
9998 run: jumping to instruction 230
 104 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 8
9999 mem: storing 0 in location 1408
 104 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1408 is 0
9998 run: jumping to instruction 268
 104 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 8
9999 mem: storing 0 in location 1409
 104 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1409 is 0
9998 run: jumping to instruction 306
 104 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 8
9999 mem: storing 1 in location 1410
 104 run: jump-unless delete-previous-character?, 
9999 mem: location 1410 is 1
9998 run: jump-unless fell through
 104 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1403
9999 mem: incrementing refcount of 1169: 32 -> 33
 104 run: editor, screen, go-render?:boolean, backspaced-cell:address:shared:duplex-list:character <- delete-before-cursor editor, screen
9999 mem: location 1353 is 1147
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 22
9999 mem: allocating size 24
9999 mem: new alloc: 1597
9999 mem: storing 22 in location 1598
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1600
9999 mem: incrementing refcount of 1147: 27 -> 28
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1601
9999 mem: incrementing refcount of 1012: 136 -> 137
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1600 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1600 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1602
 105 run: data:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1600 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1600 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1148
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1148 is 1169
9999 mem: storing 1169 in location 1603
9999 mem: incrementing refcount of 1169: 33 -> 34
 105 run: prev:address:shared:duplex-list:character <- prev_2 *before-cursor
9999 mem: location 1602 is 1151
9999 mem: location 1151 is 1483
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1216
9999 mem: incrementing refcount of 1483: 18 -> 19
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1483
9998 run: jumping to instruction 4
 106 run: result <- get *in, prev:offset
9999 mem: location 1216 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1491
9999 mem: location 1486 is 1469
9999 mem: location 1216 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1486
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1486 is 1469
9999 mem: storing 1469 in location 1217
9999 mem: incrementing refcount of 1469: 15 -> 16
 106 run: reply result
9999 mem: location 1217 is 1469
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1469
9999 mem: storing 1469 in location 1604
9999 mem: incrementing refcount of 1469: 16 -> 17
 105 run: go-render?, backspaced-cell <- copy 0/no-more-render, 0/nothing-deleted
9999 mem: storing 0 in location 1605
9999 mem: storing 0 in location 1606
 105 run: jump-if prev, 1:offset
9999 mem: location 1604 is 1469
9998 run: jumping to instruction 9
 105 run: trace 10, [app], [delete-before-cursor]
  10 app: delete-before-cursor 
 105 run: original-row:number <- get *editor, cursor-row:offset
9999 mem: location 1600 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1600 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1607
 105 run: editor, scroll?:boolean <- move-cursor-coordinates-left editor
9999 mem: location 1600 is 1147
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 17
9999 mem: allocating size 19
9999 abandon: picking up space from free-list of size 19
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1566
9999 mem: incrementing refcount of 1147: 28 -> 29
 106 run: before-cursor:address:shared:duplex-list:character <- get *editor, before-cursor:offset
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1151 is 1483
9999 mem: storing 1483 in location 1567
9999 mem: incrementing refcount of 1483: 19 -> 20
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1568
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1569
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1570
 106 run: at-left-margin?:boolean <- equal *cursor-column, left
9999 mem: location 1569 is 1156
9999 mem: location 1156 is 2
9999 mem: location 1570 is 0
9999 mem: storing 0 in location 1571
 106 run: jump-if at-left-margin?, 
9999 mem: location 1571 is 0
9998 run: jump-if fell through
 106 run: trace 10, [app], [decrementing cursor column]
  10 app: decrementing cursor column 
 106 run: *cursor-column <- subtract *cursor-column, 1
9999 mem: location 1569 is 1156
9999 mem: location 1156 is 2
9999 mem: location 1569 is 1156
9999 mem: storing 1 in location 1156
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1572
 106 run: reply editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1566 is 1147
9999 mem: location 1572 is 0
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1147
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1147: 29 -> 28
9999 mem: storing 1147 in location 1600
9999 mem: incrementing refcount of 1147: 28 -> 29
9999 mem: storing 0 in location 1608
 105 run: backspaced-cell:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1602 is 1151
9999 mem: location 1151 is 1483
9999 mem: storing 1483 in location 1606
9999 mem: incrementing refcount of 1483: 20 -> 21
 105 run: data <- remove_2 *before-cursor, data
9999 mem: location 1602 is 1151
9999 mem: location 1151 is 1483
9999 mem: location 1603 is 1169
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: x:address:shared:duplex-list:_elem/contained-in:in <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1221
9999 mem: incrementing refcount of 1483: 21 -> 22
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1222
9999 mem: incrementing refcount of 1169: 34 -> 35
 106 run: jump-if x, 1:offset
9999 mem: location 1221 is 1483
9998 run: jumping to instruction 5
 106 run: next-node:address:shared:duplex-list:_elem <- get *x, next:offset
9999 mem: location 1221 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1491
9999 mem: location 1486 is 1469
9999 mem: location 1221 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1485 is 1491
9999 mem: storing 1491 in location 1223
9999 mem: incrementing refcount of 1491: 18 -> 19
 106 run: prev-node:address:shared:duplex-list:_elem <- get *x, prev:offset
9999 mem: location 1221 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1491
9999 mem: location 1486 is 1469
9999 mem: location 1221 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1486
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1486 is 1469
9999 mem: storing 1469 in location 1224
9999 mem: incrementing refcount of 1469: 17 -> 18
 106 run: tmp:address:address:shared:duplex-list:_elem <- get-address *x, next:offset
9999 mem: location 1221 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1491
9999 mem: location 1486 is 1469
9999 mem: location 1221 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9999 mem: storing 1485 in location 1225
 106 run: *tmp <- copy 0
9999 mem: location 1225 is 1485
9999 mem: decrementing refcount of 1491: 19 -> 18
9999 mem: storing 0 in location 1485
 106 run: tmp <- get-address *x, prev:offset
9999 mem: location 1221 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 0
9999 mem: location 1486 is 1469
9999 mem: location 1221 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1486
9999 mem: storing 1486 in location 1225
 106 run: *tmp <- copy 0
9999 mem: location 1225 is 1486
9999 mem: decrementing refcount of 1469: 18 -> 17
9999 mem: storing 0 in location 1486
 106 run: jump-unless next-node, 
9999 mem: location 1223 is 1491
9998 run: jump-unless fell through
 106 run: tmp <- get-address *next-node, prev:offset
9999 mem: location 1223 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1483
9999 mem: location 1223 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1494
9999 mem: storing 1494 in location 1225
 106 run: *tmp <- copy prev-node
9999 mem: location 1224 is 1469
9999 mem: location 1225 is 1494
9999 mem: decrementing refcount of 1483: 22 -> 21
9999 mem: storing 1469 in location 1494
9999 mem: incrementing refcount of 1469: 17 -> 18
 106 run: jump-unless prev-node, 
9999 mem: location 1224 is 1469
9998 run: jump-unless fell through
 106 run: tmp <- get-address *prev-node, next:offset
9999 mem: location 1224 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1483
9999 mem: location 1472 is 1169
9999 mem: location 1224 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9999 mem: storing 1471 in location 1225
 106 run: *tmp <- copy next-node
9999 mem: location 1223 is 1491
9999 mem: location 1225 is 1471
9999 mem: decrementing refcount of 1483: 21 -> 20
9999 mem: storing 1491 in location 1471
9999 mem: incrementing refcount of 1491: 18 -> 19
 106 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1222 is 1169
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1169
9999 mem: decrementing refcount of 1169: 35 -> 34
9999 mem: storing 1169 in location 1603
9999 mem: incrementing refcount of 1169: 34 -> 35
 105 run: *before-cursor <- copy prev
9999 mem: location 1604 is 1469
9999 mem: location 1602 is 1151
9999 mem: decrementing refcount of 1483: 20 -> 19
9999 mem: storing 1469 in location 1151
9999 mem: incrementing refcount of 1469: 18 -> 19
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1605
 105 run: jump-unless scroll?, 1:offset
9999 mem: location 1608 is 0
9998 run: jumping to instruction 18
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1601 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 137 -> 138
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 106 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1609
 105 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1600 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1600 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1610
 105 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1600 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1600 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1611
 105 run: same-row?:boolean <- equal cursor-row, original-row
9999 mem: location 1610 is 1
9999 mem: location 1607 is 1
9999 mem: storing 1 in location 1612
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1605
 105 run: jump-if same-row?, 1:offset
9999 mem: location 1612 is 1
9998 run: jumping to instruction 25
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1600 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1600 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1613
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1600 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1600 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1614
 105 run: curr:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1602 is 1151
9999 mem: location 1151 is 1469
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1216
9999 mem: incrementing refcount of 1469: 19 -> 20
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1469
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1491
9999 mem: location 1472 is 1169
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1491
9999 mem: storing 1491 in location 1217
9999 mem: incrementing refcount of 1491: 19 -> 20
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1491
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1491
9999 mem: storing 1491 in location 1615
9999 mem: incrementing refcount of 1491: 20 -> 21
 105 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1601 is 1012
9999 mem: location 1610 is 1
9999 mem: location 1611 is 1
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 138 -> 139
 106 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 106 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1223
 106 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 106 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 106 run: *column <- copy new-column
9999 mem: location 1223 is 1
9999 mem: location 1225 is 1016
9999 mem: storing 1 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 139 -> 138
9999 mem: storing 1012 in location 1601
9999 mem: incrementing refcount of 1012: 138 -> 139
 105 run: curr-column:number <- copy cursor-column
9999 mem: location 1611 is 1
9999 mem: storing 1 in location 1616
 105 run: at-right?:boolean <- greater-or-equal curr-column, right
9999 mem: location 1616 is 1
9999 mem: location 1614 is 9
9999 mem: storing 0 in location 1617
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1605
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1617 is 0
9998 run: jumping to instruction 35
 105 run: jump-unless curr, 
9999 mem: location 1615 is 1491
9998 run: jump-unless fell through
 105 run: currc:character <- get *curr, value:offset
9999 mem: location 1615 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1469
9999 mem: location 1615 is 1491
9999 mem: skipping refcount at 1491
9998 run: address to copy is 1492
9998 run: its type is character
9999 mem: location 1492 is 100
9999 mem: storing 100 in location 1618
 105 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1618 is 100
9999 mem: storing 0 in location 1619
 105 run: jump-if at-newline?, 
9999 mem: location 1619 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, currc
9999 mem: location 1601 is 1012
9999 mem: location 1618 is 100
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 139 -> 140
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 100
  90 print-character: 100 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 100
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 52 -> 53
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 100
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 11
9999 mem: storing 1042 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 100
9999 mem: location 1249 is 1042
9999 mem: storing 100 in location 1042
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 100
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1043
9999 mem: storing 7 in location 1043
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 140 -> 139
9999 mem: storing 1012 in location 1601
9999 mem: incrementing refcount of 1012: 139 -> 140
 105 run: curr-column <- add curr-column, 1
9999 mem: location 1616 is 1
9999 mem: storing 2 in location 1616
 105 run: curr <- next_2 curr
9999 mem: location 1615 is 1491
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1216
9999 mem: incrementing refcount of 1491: 21 -> 22
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1491
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1469
9999 mem: location 1216 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1493 is 1495
9999 mem: storing 1495 in location 1217
9999 mem: incrementing refcount of 1495: 15 -> 16
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1495
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1495
9999 mem: decrementing refcount of 1491: 22 -> 21
9999 mem: storing 1495 in location 1615
9999 mem: incrementing refcount of 1495: 16 -> 17
 105 run: jump 
9998 run: jumping to instruction 31
 105 run: at-right?:boolean <- greater-or-equal curr-column, right
9999 mem: location 1616 is 2
9999 mem: location 1614 is 9
9999 mem: storing 0 in location 1617
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1605
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1617 is 0
9998 run: jumping to instruction 35
 105 run: jump-unless curr, 
9999 mem: location 1615 is 1495
9998 run: jump-unless fell through
 105 run: currc:character <- get *curr, value:offset
9999 mem: location 1615 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1615 is 1495
9999 mem: skipping refcount at 1495
9998 run: address to copy is 1496
9998 run: its type is character
9999 mem: location 1496 is 101
9999 mem: storing 101 in location 1618
 105 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1618 is 101
9999 mem: storing 0 in location 1619
 105 run: jump-if at-newline?, 
9999 mem: location 1619 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, currc
9999 mem: location 1601 is 1012
9999 mem: location 1618 is 101
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 140 -> 141
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 101
  90 print-character: 101 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 53 -> 54
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 12
9999 mem: storing 1044 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 100
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 101
9999 mem: location 1249 is 1044
9999 mem: storing 101 in location 1044
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 101
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1045
9999 mem: storing 7 in location 1045
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 141 -> 140
9999 mem: storing 1012 in location 1601
9999 mem: incrementing refcount of 1012: 140 -> 141
 105 run: curr-column <- add curr-column, 1
9999 mem: location 1616 is 2
9999 mem: storing 3 in location 1616
 105 run: curr <- next_2 curr
9999 mem: location 1615 is 1495
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1216
9999 mem: incrementing refcount of 1495: 17 -> 18
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1495
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1216 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1497 is 1499
9999 mem: storing 1499 in location 1217
9999 mem: incrementing refcount of 1499: 11 -> 12
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1499
9999 mem: decrementing refcount of 1495: 18 -> 17
9999 mem: storing 1499 in location 1615
9999 mem: incrementing refcount of 1499: 12 -> 13
 105 run: jump 
9998 run: jumping to instruction 31
 105 run: at-right?:boolean <- greater-or-equal curr-column, right
9999 mem: location 1616 is 3
9999 mem: location 1614 is 9
9999 mem: storing 0 in location 1617
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1605
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1617 is 0
9998 run: jumping to instruction 35
 105 run: jump-unless curr, 
9999 mem: location 1615 is 1499
9998 run: jump-unless fell through
 105 run: currc:character <- get *curr, value:offset
9999 mem: location 1615 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1615 is 1499
9999 mem: skipping refcount at 1499
9998 run: address to copy is 1500
9998 run: its type is character
9999 mem: location 1500 is 102
9999 mem: storing 102 in location 1618
 105 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1618 is 102
9999 mem: storing 0 in location 1619
 105 run: jump-if at-newline?, 
9999 mem: location 1619 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, currc
9999 mem: location 1601 is 1012
9999 mem: location 1618 is 102
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 141 -> 142
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
9990 schedule: print/delete-before-cursor/handle-keyboard-event/editor-event-loop/scenario-editor-can-undo-and-redo-delete
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 102
  90 print-character: 102 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 54 -> 55
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 13
9999 mem: storing 1046 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1046
9999 mem: location 1046 is 101
9999 mem: location 1047 is 7
9999 mem: location 1248 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 102
9999 mem: location 1249 is 1046
9999 mem: storing 102 in location 1046
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1046
9999 mem: location 1046 is 102
9999 mem: location 1047 is 7
9999 mem: location 1248 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1047
9999 mem: storing 7 in location 1047
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 142 -> 141
9999 mem: storing 1012 in location 1601
9999 mem: incrementing refcount of 1012: 141 -> 142
 105 run: curr-column <- add curr-column, 1
9999 mem: location 1616 is 3
9999 mem: storing 4 in location 1616
 105 run: curr <- next_2 curr
9999 mem: location 1615 is 1499
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1499 in location 1216
9999 mem: incrementing refcount of 1499: 13 -> 14
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1499
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1216 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1501
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1501 is 0
9999 mem: storing 0 in location 1217
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1499: 14 -> 13
9999 mem: storing 0 in location 1615
 105 run: jump 
9998 run: jumping to instruction 31
 105 run: at-right?:boolean <- greater-or-equal curr-column, right
9999 mem: location 1616 is 4
9999 mem: location 1614 is 9
9999 mem: storing 0 in location 1617
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1605
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1617 is 0
9998 run: jumping to instruction 35
 105 run: jump-unless curr, 
9999 mem: location 1615 is 0
9998 run: jumping to instruction 43
 105 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1620
 105 run: screen <- print screen, space
9999 mem: location 1601 is 1012
9999 mem: location 1620 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 142 -> 143
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 55 -> 56
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 14
9999 mem: storing 1048 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1048
9999 mem: location 1048 is 102
9999 mem: location 1049 is 7
9999 mem: location 1248 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1048
9999 mem: storing 32 in location 1048
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1248 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1049
9999 mem: storing 7 in location 1049
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 143 -> 142
9999 mem: storing 1012 in location 1601
9999 mem: incrementing refcount of 1012: 142 -> 143
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1605
 105 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean, backspaced-cell:address:shared:duplex-list:character
9999 mem: location 1600 is 1147
9999 mem: location 1601 is 1012
9999 mem: location 1605 is 0
9999 mem: location 1606 is 1483
9999 abandon: saving in free-list of size 24
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9998 run: result 1 is 1012
9998 run: result 2 is 0
9998 run: result 3 is 1483
9999 mem: decrementing refcount of 1147: 29 -> 28
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 28 -> 29
9999 mem: decrementing refcount of 1012: 143 -> 142
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 142 -> 143
9999 mem: storing 0 in location 1358
9999 mem: storing 1483 in location 1411
9999 mem: incrementing refcount of 1483: 19 -> 20
 104 run: jump-unless backspaced-cell, 
9999 mem: location 1411 is 1483
9998 run: jump-unless fell through
 104 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1405
9999 mem: incrementing refcount of 1169: 35 -> 36
 104 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1372
 104 run: jump-unless *undo, 
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1594
9998 run: jump-unless fell through
 104 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1594
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1594 in location 1216
9999 mem: incrementing refcount of 1594: 2 -> 3
 105 run: result <- get *in, value:offset
9999 mem: location 1216 is 1594
9999 mem: skipping refcount at 1594
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1595 is 1582
9999 mem: location 1596 is 1560
9999 mem: location 1216 is 1594
9999 mem: skipping refcount at 1594
9998 run: address to copy is 1595
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1595 is 1582
9999 mem: storing 1582 in location 1217
9999 mem: incrementing refcount of 1582: 4 -> 5
 105 run: reply result:_elem
9999 mem: location 1217 is 1582
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1582
9999 mem: storing 1582 in location 1371
9999 mem: incrementing refcount of 1582: 5 -> 6
 104 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1371 is 1582
9999 mem: skipping refcount at 1582
9999 mem: location 1583 is 2
9999 mem: location 1584 is 1
9999 mem: location 1585 is 2
9999 mem: location 1586 is 1169
9999 mem: location 1587 is 1
9999 mem: location 1588 is 2
9999 mem: location 1589 is 1169
9999 mem: location 1590 is 1487
9999 mem: location 1591 is 1483
9999 mem: location 1592 is 1491
9999 mem: location 1593 is 2
9999 mem: location 1371 is 1582
9999 mem: skipping refcount at 1582
9999 mem: storing 1584 in location 1373
 104 run: jump-unless deletion, 
9999 mem: location 1373 is 1584
9998 run: jump-unless fell through
 104 run: previous-coalesce-tag:number <- get *deletion, tag:offset
9999 mem: location 1373 is 1584
9999 mem: location 1584 is 1
9999 mem: location 1585 is 2
9999 mem: location 1586 is 1169
9999 mem: location 1587 is 1
9999 mem: location 1588 is 2
9999 mem: location 1589 is 1169
9999 mem: location 1590 is 1487
9999 mem: location 1591 is 1483
9999 mem: location 1592 is 1491
9999 mem: location 1593 is 2
9999 mem: location 1373 is 1584
9998 run: address to copy is 1593
9998 run: its type is number
9999 mem: location 1593 is 2
9999 mem: storing 2 in location 1395
 104 run: coalesce?:boolean <- equal previous-coalesce-tag, 1/coalesce-backspace
9999 mem: location 1395 is 2
9999 mem: storing 0 in location 1396
 104 run: jump-unless coalesce?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 337
 104 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 mem: new alloc: 1621
9999 mem: decrementing refcount of 1582: 6 -> 5
9999 mem: storing 1621 in location 1371
9999 mem: incrementing refcount of 1621: 0 -> 1
 104 run: deleted-until:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1363 is 1151
9999 mem: location 1151 is 1469
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1216
9999 mem: incrementing refcount of 1469: 20 -> 21
 105 run: jump-if in, 1:offset
9999 mem: location 1216 is 1469
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1491
9999 mem: location 1472 is 1169
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1491
9999 mem: storing 1491 in location 1217
9999 mem: incrementing refcount of 1491: 21 -> 22
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1491
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1491
9999 mem: storing 1491 in location 1406
9999 mem: incrementing refcount of 1491: 22 -> 23
 104 run: *op <- merge 2/delete-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, backspaced-cell/deleted, *before-cursor/delete-from, deleted-until, 1/coalesce-backspace
9999 mem: location 1366 is 1
9999 mem: location 1367 is 2
9999 mem: location 1403 is 1169
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 1
9999 mem: location 1405 is 1169
9999 mem: location 1411 is 1483
9999 mem: location 1363 is 1151
9999 mem: location 1151 is 1469
9999 mem: location 1406 is 1491
9999 mem: location 1371 is 1621
9999 mem: skipping refcount at 1621
9999 mem: location 1371 is 1621
9999 mem: skipping refcount at 1621
9999 mem: storing 2 in location 1622
9999 mem: storing 1 in location 1623
9999 mem: storing 2 in location 1624
9999 mem: storing 1169 in location 1625
9999 mem: storing 1 in location 1626
9999 mem: storing 1 in location 1627
9999 mem: storing 1169 in location 1628
9999 mem: storing 1483 in location 1629
9999 mem: storing 1469 in location 1630
9999 mem: storing 1491 in location 1631
9999 mem: storing 1 in location 1632
 104 run: editor <- add-operation editor, op
9999 mem: location 1353 is 1147
9999 mem: location 1371 is 1621
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1476
9999 mem: incrementing refcount of 1147: 29 -> 30
 105 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1621 in location 1477
9999 mem: incrementing refcount of 1621: 1 -> 2
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1476 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 0
9999 mem: location 1476 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1478
 105 run: *undo <- push_4 op, *undo
9999 mem: location 1477 is 1621
9999 mem: location 1478 is 1158
9999 mem: location 1158 is 1594
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1621 in location 1221
9999 mem: incrementing refcount of 1621: 2 -> 3
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1594 in location 1222
9999 mem: incrementing refcount of 1594: 3 -> 4
 106 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1633
9999 mem: storing 1633 in location 1223
9999 mem: incrementing refcount of 1633: 0 -> 1
 106 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1223 is 1633
9999 mem: skipping refcount at 1633
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1634 is 0
9999 mem: location 1635 is 0
9999 mem: location 1223 is 1633
9999 mem: skipping refcount at 1633
9998 run: address to copy is 1634
9999 mem: storing 1634 in location 1224
 106 run: *val <- copy x
9999 mem: location 1221 is 1621
9999 mem: location 1224 is 1634
9999 mem: storing 1621 in location 1634
9999 mem: incrementing refcount of 1621: 3 -> 4
 106 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1223 is 1633
9999 mem: skipping refcount at 1633
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1634 is 1621
9999 mem: location 1635 is 0
9999 mem: location 1223 is 1633
9999 mem: skipping refcount at 1633
9999 type: type deduced to be address$
9998 run: address to copy is 1635
9999 mem: storing 1635 in location 1225
 106 run: *next <- copy in
9999 mem: location 1222 is 1594
9999 mem: location 1225 is 1635
9999 mem: storing 1594 in location 1635
9999 mem: incrementing refcount of 1594: 4 -> 5
 106 run: reply result
9999 mem: location 1223 is 1633
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1633
9999 mem: location 1478 is 1158
9999 mem: decrementing refcount of 1594: 5 -> 4
9999 mem: storing 1633 in location 1158
9999 mem: incrementing refcount of 1633: 1 -> 2
 105 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1476 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 0
9999 mem: location 1476 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1479
 105 run: *redo <- copy 0
9999 mem: location 1479 is 1159
9999 mem: storing 0 in location 1159
 105 run: reply editor/same-as-ingredient:0
9999 mem: location 1476 is 1147
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1147: 30 -> 29
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 29 -> 30
 104 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1352 is 1012
9999 mem: location 1353 is 1147
9999 mem: location 1358 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 143 -> 142
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 142 -> 143
9999 mem: decrementing refcount of 1147: 30 -> 29
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 29 -> 30
9999 mem: storing 0 in location 1348
 103 run: jump-unless go-render?, 
9999 mem: location 1348 is 0
9998 run: jumping to instruction 25
 103 run: jump 
9998 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1340
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 1
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 143 -> 144
 104 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 104 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1223
 104 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 104 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 104 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 104 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 104 run: *column <- copy new-column
9999 mem: location 1223 is 1
9999 mem: location 1225 is 1016
9999 mem: storing 1 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 144 -> 143
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 143 -> 144
 103 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1330
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1256
9999 mem: incrementing refcount of 1330: 10 -> 11
 104 run: jump-unless console, 
9999 mem: location 1256 is 1330
9998 run: jump-unless fell through
 104 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 9
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1331
9999 mem: storing 1331 in location 1257
 104 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 9
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1332 is 1284
9999 mem: storing 1284 in location 1258
9999 mem: incrementing refcount of 1284: 9 -> 10
 104 run: max:number <- length *buf
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9999 mem: storing 11 in location 1259
 104 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 9
9999 mem: location 1259 is 11
9999 mem: storing 0 in location 1260
 104 run: jump-unless done?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 12
 104 run: result <- index *buf, *current-event-index
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9998 run: base address is 1285
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 9
9998 run: address to copy is 1322
9998 run: its type is event
9999 mem: location 1322 is 1
9999 mem: location 1323 is 65522
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 mem: storing 1 in location 1262
9999 mem: storing 65522 in location 1263
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 104 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 9
9999 mem: location 1257 is 1331
9999 mem: storing 10 in location 1331
 104 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1262 is 1
9999 mem: location 1263 is 65522
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1256 is 1330
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [1, 65522, 0, 0]
9998 run: result 1 is 1330
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1341
9999 mem: storing 65522 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1330: 11 -> 10
9999 mem: storing 1330 in location 1337
9999 mem: incrementing refcount of 1330: 10 -> 11
9999 mem: storing 1 in location 1345
9999 mem: storing 0 in location 1346
 103 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 103 run: jump-if quit?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1341 is 1
9999 mem: location 1342 is 65522
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1347
 103 run: jump-unless t, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 18
 103 run: jump-if t, 
9999 mem: location 1347 is 0
9998 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 mem: location 1341 is 1
9999 mem: location 1342 is 65522
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 144 -> 145
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 30 -> 31
 104 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1354
9999 mem: storing 65522 in location 1355
9999 mem: storing 0 in location 1356
9999 mem: storing 0 in location 1357
 104 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1358
 104 run: jump-if editor, 1:offset
9999 mem: location 1353 is 1147
9998 run: jumping to instruction 7
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 145 -> 146
 105 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 105 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 105 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1359
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 146 -> 147
 105 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 105 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 105 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1360
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1361
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1362
 104 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1363
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1364
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1365
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1366
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1367
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1354 is 1
9999 mem: location 1355 is 65522
9999 mem: location 1356 is 0
9999 mem: location 1357 is 0
9999 mem: storing 0 in location 1368
 104 run: jump-unless c, 
9999 mem: location 1368 is 0
9998 run: jumping to instruction 438
 104 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1354 is 1
9999 mem: location 1355 is 65522
9999 mem: location 1356 is 0
9999 mem: location 1357 is 0
9999 mem: storing 1355 in location 1422
 104 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1422 is 1355
 104 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1385
 104 run: jump-unless page-up?, 
9999 mem: location 1385 is 0
9998 run: jumping to instruction 482
 104 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1401
 104 run: jump-unless page-down?, 
9999 mem: location 1401 is 0
9998 run: jumping to instruction 523
 104 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1408
 104 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1408 is 0
9998 run: jumping to instruction 561
 104 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1409
 104 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1409 is 0
9998 run: jumping to instruction 599
 104 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1423
 104 run: jump-unless move-to-next-line?, 
9999 mem: location 1423 is 0
9998 run: jumping to instruction 636
 104 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1424
 104 run: jump-unless move-to-previous-line?, 
9999 mem: location 1424 is 0
9998 run: jumping to instruction 673
 104 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1425
 104 run: jump-unless move-to-previous-character?, 
9999 mem: location 1425 is 0
9998 run: jumping to instruction 716
 104 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1427
 104 run: jump-unless move-to-next-character?, 
9999 mem: location 1427 is 0
9998 run: jumping to instruction 757
 104 run: delete-next-character?:boolean <- equal *k, 65522/delete
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 1 in location 1429
 104 run: jump-unless delete-next-character?, 
9999 mem: location 1429 is 1
9998 run: jump-unless fell through
 104 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1403
9999 mem: incrementing refcount of 1169: 36 -> 37
 104 run: editor, screen, go-render?:boolean, deleted-cell:address:shared:duplex-list:character <- delete-at-cursor editor, screen
9999 mem: location 1353 is 1147
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 17
9999 mem: allocating size 19
9999 abandon: picking up space from free-list of size 19
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1566
9999 mem: incrementing refcount of 1147: 31 -> 32
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1567
9999 mem: incrementing refcount of 1012: 147 -> 148
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 0
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1568
 105 run: data:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 0
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1148
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1148 is 1169
9999 mem: storing 1169 in location 1569
9999 mem: incrementing refcount of 1169: 37 -> 38
 105 run: deleted-cell:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1568 is 1151
9999 mem: location 1151 is 1469
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1216
9999 mem: incrementing refcount of 1469: 21 -> 22
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1469
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1491
9999 mem: location 1472 is 1169
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1491
9999 mem: storing 1491 in location 1217
9999 mem: incrementing refcount of 1491: 23 -> 24
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1491
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1491
9999 mem: storing 1491 in location 1570
9999 mem: incrementing refcount of 1491: 24 -> 25
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1571
 105 run: jump-if deleted-cell, 1:offset
9999 mem: location 1570 is 1491
9998 run: jumping to instruction 9
 105 run: currc:character <- get *deleted-cell, value:offset
9999 mem: location 1570 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1469
9999 mem: location 1570 is 1491
9999 mem: skipping refcount at 1491
9998 run: address to copy is 1492
9998 run: its type is character
9999 mem: location 1492 is 100
9999 mem: storing 100 in location 1572
 105 run: data <- remove_2 deleted-cell, data
9999 mem: location 1570 is 1491
9999 mem: location 1569 is 1169
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: x:address:shared:duplex-list:_elem/contained-in:in <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1221
9999 mem: incrementing refcount of 1491: 25 -> 26
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1222
9999 mem: incrementing refcount of 1169: 38 -> 39
 106 run: jump-if x, 1:offset
9999 mem: location 1221 is 1491
9998 run: jumping to instruction 5
 106 run: next-node:address:shared:duplex-list:_elem <- get *x, next:offset
9999 mem: location 1221 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1469
9999 mem: location 1221 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1493 is 1495
9999 mem: storing 1495 in location 1223
9999 mem: incrementing refcount of 1495: 17 -> 18
 106 run: prev-node:address:shared:duplex-list:_elem <- get *x, prev:offset
9999 mem: location 1221 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1469
9999 mem: location 1221 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1494
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1494 is 1469
9999 mem: storing 1469 in location 1224
9999 mem: incrementing refcount of 1469: 22 -> 23
 106 run: tmp:address:address:shared:duplex-list:_elem <- get-address *x, next:offset
9999 mem: location 1221 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1469
9999 mem: location 1221 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9999 mem: storing 1493 in location 1225
 106 run: *tmp <- copy 0
9999 mem: location 1225 is 1493
9999 mem: decrementing refcount of 1495: 18 -> 17
9999 mem: storing 0 in location 1493
 106 run: tmp <- get-address *x, prev:offset
9999 mem: location 1221 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 0
9999 mem: location 1494 is 1469
9999 mem: location 1221 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1494
9999 mem: storing 1494 in location 1225
 106 run: *tmp <- copy 0
9999 mem: location 1225 is 1494
9999 mem: decrementing refcount of 1469: 23 -> 22
9999 mem: storing 0 in location 1494
 106 run: jump-unless next-node, 
9999 mem: location 1223 is 1495
9998 run: jump-unless fell through
 106 run: tmp <- get-address *next-node, prev:offset
9999 mem: location 1223 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1223 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1498
9999 mem: storing 1498 in location 1225
 106 run: *tmp <- copy prev-node
9999 mem: location 1224 is 1469
9999 mem: location 1225 is 1498
9999 mem: decrementing refcount of 1491: 26 -> 25
9999 mem: storing 1469 in location 1498
9999 mem: incrementing refcount of 1469: 22 -> 23
 106 run: jump-unless prev-node, 
9999 mem: location 1224 is 1469
9998 run: jump-unless fell through
 106 run: tmp <- get-address *prev-node, next:offset
9999 mem: location 1224 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1491
9999 mem: location 1472 is 1169
9999 mem: location 1224 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9999 mem: storing 1471 in location 1225
 106 run: *tmp <- copy next-node
9999 mem: location 1223 is 1495
9999 mem: location 1225 is 1471
9999 mem: decrementing refcount of 1491: 25 -> 24
9999 mem: storing 1495 in location 1471
9999 mem: incrementing refcount of 1495: 17 -> 18
 106 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1222 is 1169
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1169
9999 mem: decrementing refcount of 1169: 39 -> 38
9999 mem: storing 1169 in location 1569
9999 mem: incrementing refcount of 1169: 38 -> 39
 105 run: deleted-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1572 is 100
9999 mem: storing 0 in location 1573
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1571
 105 run: jump-unless deleted-newline?, 1:offset
9999 mem: location 1573 is 0
9998 run: jumping to instruction 15
 105 run: curr:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1568 is 1151
9999 mem: location 1151 is 1469
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1216
9999 mem: incrementing refcount of 1469: 23 -> 24
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1469
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1495
9999 mem: location 1472 is 1169
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1495
9999 mem: storing 1495 in location 1217
9999 mem: incrementing refcount of 1495: 18 -> 19
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1495
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1495
9999 mem: storing 1495 in location 1574
9999 mem: incrementing refcount of 1495: 19 -> 20
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 0
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1575
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 0
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1576
 105 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1567 is 1012
9999 mem: location 1575 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1576 is 1156
9999 mem: location 1156 is 1
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 148 -> 149
 106 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 106 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1223
 106 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 106 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 106 run: *column <- copy new-column
9999 mem: location 1223 is 1
9999 mem: location 1225 is 1016
9999 mem: storing 1 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 149 -> 148
9999 mem: storing 1012 in location 1567
9999 mem: incrementing refcount of 1012: 148 -> 149
 105 run: curr-column:number <- copy *cursor-column
9999 mem: location 1576 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1577
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1567 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 149 -> 150
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 106 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1578
 105 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1577 is 1
9999 mem: location 1578 is 10
9999 mem: storing 0 in location 1579
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1571
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1579 is 0
9998 run: jumping to instruction 26
 105 run: jump-unless curr, 
9999 mem: location 1574 is 1495
9998 run: jump-unless fell through
 105 run: currc:character <- get *curr, value:offset
9999 mem: location 1574 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1469
9999 mem: location 1574 is 1495
9999 mem: skipping refcount at 1495
9998 run: address to copy is 1496
9998 run: its type is character
9999 mem: location 1496 is 101
9999 mem: storing 101 in location 1572
 105 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1572 is 101
9999 mem: storing 0 in location 1580
 105 run: jump-if at-newline?, 
9999 mem: location 1580 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, currc
9999 mem: location 1567 is 1012
9999 mem: location 1572 is 101
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 150 -> 151
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 101
  90 print-character: 101 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 56 -> 57
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 11
9999 mem: storing 1042 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 100
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 101
9999 mem: location 1249 is 1042
9999 mem: storing 101 in location 1042
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 101
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1043
9999 mem: storing 7 in location 1043
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 151 -> 150
9999 mem: storing 1012 in location 1567
9999 mem: incrementing refcount of 1012: 150 -> 151
 105 run: curr-column <- add curr-column, 1
9999 mem: location 1577 is 1
9999 mem: storing 2 in location 1577
 105 run: curr <- next_2 curr
9999 mem: location 1574 is 1495
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1216
9999 mem: incrementing refcount of 1495: 20 -> 21
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1495
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1469
9999 mem: location 1216 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1497 is 1499
9999 mem: storing 1499 in location 1217
9999 mem: incrementing refcount of 1499: 13 -> 14
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1499
9999 mem: decrementing refcount of 1495: 21 -> 20
9999 mem: storing 1499 in location 1574
9999 mem: incrementing refcount of 1499: 14 -> 15
 105 run: jump 
9998 run: jumping to instruction 22
 105 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1577 is 2
9999 mem: location 1578 is 10
9999 mem: storing 0 in location 1579
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1571
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1579 is 0
9998 run: jumping to instruction 26
 105 run: jump-unless curr, 
9999 mem: location 1574 is 1499
9998 run: jump-unless fell through
 105 run: currc:character <- get *curr, value:offset
9999 mem: location 1574 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1574 is 1499
9999 mem: skipping refcount at 1499
9998 run: address to copy is 1500
9998 run: its type is character
9999 mem: location 1500 is 102
9999 mem: storing 102 in location 1572
 105 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1572 is 102
9999 mem: storing 0 in location 1580
 105 run: jump-if at-newline?, 
9999 mem: location 1580 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, currc
9999 mem: location 1567 is 1012
9999 mem: location 1572 is 102
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 151 -> 152
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 102
  90 print-character: 102 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 57 -> 58
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 12
9999 mem: storing 1044 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 101
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 102
9999 mem: location 1249 is 1044
9999 mem: storing 102 in location 1044
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 102
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1045
9999 mem: storing 7 in location 1045
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 152 -> 151
9999 mem: storing 1012 in location 1567
9999 mem: incrementing refcount of 1012: 151 -> 152
 105 run: curr-column <- add curr-column, 1
9999 mem: location 1577 is 2
9999 mem: storing 3 in location 1577
 105 run: curr <- next_2 curr
9999 mem: location 1574 is 1499
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1499 in location 1216
9999 mem: incrementing refcount of 1499: 15 -> 16
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1499
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1216 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1501
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1501 is 0
9999 mem: storing 0 in location 1217
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1499: 16 -> 15
9999 mem: storing 0 in location 1574
 105 run: jump 
9998 run: jumping to instruction 22
 105 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1577 is 3
9999 mem: location 1578 is 10
9999 mem: storing 0 in location 1579
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1571
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1579 is 0
9998 run: jumping to instruction 26
 105 run: jump-unless curr, 
9999 mem: location 1574 is 0
9998 run: jumping to instruction 34
 105 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1581
 105 run: screen <- print screen, space
9999 mem: location 1567 is 1012
9999 mem: location 1581 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 152 -> 153
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
9990 schedule: print/delete-at-cursor/handle-keyboard-event/editor-event-loop/scenario-editor-can-undo-and-redo-delete
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 58 -> 59
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 13
9999 mem: storing 1046 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1046
9999 mem: location 1046 is 102
9999 mem: location 1047 is 7
9999 mem: location 1248 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1046
9999 mem: storing 32 in location 1046
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1248 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1047
9999 mem: storing 7 in location 1047
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 153 -> 152
9999 mem: storing 1012 in location 1567
9999 mem: incrementing refcount of 1012: 152 -> 153
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1571
 105 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean, deleted-cell:address:shared:duplex-list:character
9999 mem: location 1566 is 1147
9999 mem: location 1567 is 1012
9999 mem: location 1571 is 0
9999 mem: location 1570 is 1491
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9998 run: result 1 is 1012
9998 run: result 2 is 0
9998 run: result 3 is 1491
9999 mem: decrementing refcount of 1147: 32 -> 31
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 31 -> 32
9999 mem: decrementing refcount of 1012: 153 -> 152
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 152 -> 153
9999 mem: storing 0 in location 1358
9999 mem: storing 1491 in location 1430
9999 mem: incrementing refcount of 1491: 24 -> 25
 104 run: jump-unless deleted-cell, 
9999 mem: location 1430 is 1491
9998 run: jump-unless fell through
 104 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1405
9999 mem: incrementing refcount of 1169: 39 -> 40
 104 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1372
 104 run: jump-unless *undo, 
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1633
9998 run: jump-unless fell through
 104 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1633
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1633 in location 1216
9999 mem: incrementing refcount of 1633: 2 -> 3
 105 run: result <- get *in, value:offset
9999 mem: location 1216 is 1633
9999 mem: skipping refcount at 1633
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1634 is 1621
9999 mem: location 1635 is 1594
9999 mem: location 1216 is 1633
9999 mem: skipping refcount at 1633
9998 run: address to copy is 1634
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1634 is 1621
9999 mem: storing 1621 in location 1217
9999 mem: incrementing refcount of 1621: 4 -> 5
 105 run: reply result:_elem
9999 mem: location 1217 is 1621
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1621
9999 mem: storing 1621 in location 1371
9999 mem: incrementing refcount of 1621: 5 -> 6
 104 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1371 is 1621
9999 mem: skipping refcount at 1621
9999 mem: location 1622 is 2
9999 mem: location 1623 is 1
9999 mem: location 1624 is 2
9999 mem: location 1625 is 1169
9999 mem: location 1626 is 1
9999 mem: location 1627 is 1
9999 mem: location 1628 is 1169
9999 mem: location 1629 is 1483
9999 mem: location 1630 is 1469
9999 mem: location 1631 is 1491
9999 mem: location 1632 is 1
9999 mem: location 1371 is 1621
9999 mem: skipping refcount at 1621
9999 mem: storing 1623 in location 1373
 104 run: jump-unless deletion, 
9999 mem: location 1373 is 1623
9998 run: jump-unless fell through
 104 run: previous-coalesce-tag:number <- get *deletion, tag:offset
9999 mem: location 1373 is 1623
9999 mem: location 1623 is 1
9999 mem: location 1624 is 2
9999 mem: location 1625 is 1169
9999 mem: location 1626 is 1
9999 mem: location 1627 is 1
9999 mem: location 1628 is 1169
9999 mem: location 1629 is 1483
9999 mem: location 1630 is 1469
9999 mem: location 1631 is 1491
9999 mem: location 1632 is 1
9999 mem: location 1373 is 1623
9998 run: address to copy is 1632
9998 run: its type is number
9999 mem: location 1632 is 1
9999 mem: storing 1 in location 1395
 104 run: coalesce?:boolean <- equal previous-coalesce-tag, 2/coalesce-delete
9999 mem: location 1395 is 1
9999 mem: storing 0 in location 1396
 104 run: jump-unless coalesce?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 787
 104 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 mem: new alloc: 1636
9999 mem: decrementing refcount of 1621: 6 -> 5
9999 mem: storing 1636 in location 1371
9999 mem: incrementing refcount of 1636: 0 -> 1
 104 run: deleted-until:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1363 is 1151
9999 mem: location 1151 is 1469
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1216
9999 mem: incrementing refcount of 1469: 24 -> 25
 105 run: jump-if in, 1:offset
9999 mem: location 1216 is 1469
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1495
9999 mem: location 1472 is 1169
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1495
9999 mem: storing 1495 in location 1217
9999 mem: incrementing refcount of 1495: 20 -> 21
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1495
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1495
9999 mem: storing 1495 in location 1406
9999 mem: incrementing refcount of 1495: 21 -> 22
 104 run: *op <- merge 2/delete-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, deleted-cell/deleted, *before-cursor/delete-from, deleted-until, 2/coalesce-delete
9999 mem: location 1366 is 1
9999 mem: location 1367 is 1
9999 mem: location 1403 is 1169
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 1
9999 mem: location 1405 is 1169
9999 mem: location 1430 is 1491
9999 mem: location 1363 is 1151
9999 mem: location 1151 is 1469
9999 mem: location 1406 is 1495
9999 mem: location 1371 is 1636
9999 mem: skipping refcount at 1636
9999 mem: location 1371 is 1636
9999 mem: skipping refcount at 1636
9999 mem: storing 2 in location 1637
9999 mem: storing 1 in location 1638
9999 mem: storing 1 in location 1639
9999 mem: storing 1169 in location 1640
9999 mem: storing 1 in location 1641
9999 mem: storing 1 in location 1642
9999 mem: storing 1169 in location 1643
9999 mem: storing 1491 in location 1644
9999 mem: storing 1469 in location 1645
9999 mem: storing 1495 in location 1646
9999 mem: storing 2 in location 1647
 104 run: editor <- add-operation editor, op
9999 mem: location 1353 is 1147
9999 mem: location 1371 is 1636
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1476
9999 mem: incrementing refcount of 1147: 32 -> 33
 105 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1636 in location 1477
9999 mem: incrementing refcount of 1636: 1 -> 2
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1476 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 0
9999 mem: location 1476 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1478
 105 run: *undo <- push_4 op, *undo
9999 mem: location 1477 is 1636
9999 mem: location 1478 is 1158
9999 mem: location 1158 is 1633
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1636 in location 1221
9999 mem: incrementing refcount of 1636: 2 -> 3
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1633 in location 1222
9999 mem: incrementing refcount of 1633: 3 -> 4
 106 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1648
9999 mem: storing 1648 in location 1223
9999 mem: incrementing refcount of 1648: 0 -> 1
 106 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1223 is 1648
9999 mem: skipping refcount at 1648
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1649 is 0
9999 mem: location 1650 is 0
9999 mem: location 1223 is 1648
9999 mem: skipping refcount at 1648
9998 run: address to copy is 1649
9999 mem: storing 1649 in location 1224
 106 run: *val <- copy x
9999 mem: location 1221 is 1636
9999 mem: location 1224 is 1649
9999 mem: storing 1636 in location 1649
9999 mem: incrementing refcount of 1636: 3 -> 4
 106 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1223 is 1648
9999 mem: skipping refcount at 1648
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1649 is 1636
9999 mem: location 1650 is 0
9999 mem: location 1223 is 1648
9999 mem: skipping refcount at 1648
9999 type: type deduced to be address$
9998 run: address to copy is 1650
9999 mem: storing 1650 in location 1225
 106 run: *next <- copy in
9999 mem: location 1222 is 1633
9999 mem: location 1225 is 1650
9999 mem: storing 1633 in location 1650
9999 mem: incrementing refcount of 1633: 4 -> 5
 106 run: reply result
9999 mem: location 1223 is 1648
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1648
9999 mem: location 1478 is 1158
9999 mem: decrementing refcount of 1633: 5 -> 4
9999 mem: storing 1648 in location 1158
9999 mem: incrementing refcount of 1648: 1 -> 2
 105 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1476 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1476 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1479
 105 run: *redo <- copy 0
9999 mem: location 1479 is 1159
9999 mem: storing 0 in location 1159
 105 run: reply editor/same-as-ingredient:0
9999 mem: location 1476 is 1147
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1147: 33 -> 32
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 32 -> 33
 104 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1352 is 1012
9999 mem: location 1353 is 1147
9999 mem: location 1358 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 153 -> 152
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 152 -> 153
9999 mem: decrementing refcount of 1147: 33 -> 32
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 32 -> 33
9999 mem: storing 0 in location 1348
 103 run: jump-unless go-render?, 
9999 mem: location 1348 is 0
9998 run: jumping to instruction 25
 103 run: jump 
9998 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1340
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 1
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 153 -> 154
 104 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 104 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1223
 104 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 104 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 104 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 104 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 104 run: *column <- copy new-column
9999 mem: location 1223 is 1
9999 mem: location 1225 is 1016
9999 mem: storing 1 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 154 -> 153
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 153 -> 154
 103 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1330
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1256
9999 mem: incrementing refcount of 1330: 11 -> 12
 104 run: jump-unless console, 
9999 mem: location 1256 is 1330
9998 run: jump-unless fell through
 104 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 10
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1331
9999 mem: storing 1331 in location 1257
 104 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 10
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1332 is 1284
9999 mem: storing 1284 in location 1258
9999 mem: incrementing refcount of 1284: 10 -> 11
 104 run: max:number <- length *buf
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9999 mem: storing 11 in location 1259
 104 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 10
9999 mem: location 1259 is 11
9999 mem: storing 0 in location 1260
 104 run: jump-unless done?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 12
 104 run: result <- index *buf, *current-event-index
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9998 run: base address is 1285
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 10
9998 run: address to copy is 1326
9998 run: its type is event
9999 mem: location 1326 is 1
9999 mem: location 1327 is 65522
9999 mem: location 1328 is 0
9999 mem: location 1329 is 0
9999 mem: storing 1 in location 1262
9999 mem: storing 65522 in location 1263
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 104 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 10
9999 mem: location 1257 is 1331
9999 mem: storing 11 in location 1331
 104 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1262 is 1
9999 mem: location 1263 is 65522
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1256 is 1330
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [1, 65522, 0, 0]
9998 run: result 1 is 1330
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1341
9999 mem: storing 65522 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1330: 12 -> 11
9999 mem: storing 1330 in location 1337
9999 mem: incrementing refcount of 1330: 11 -> 12
9999 mem: storing 1 in location 1345
9999 mem: storing 0 in location 1346
 103 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 103 run: jump-if quit?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1341 is 1
9999 mem: location 1342 is 65522
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1347
 103 run: jump-unless t, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 18
 103 run: jump-if t, 
9999 mem: location 1347 is 0
9998 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 mem: location 1341 is 1
9999 mem: location 1342 is 65522
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 154 -> 155
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 33 -> 34
 104 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1354
9999 mem: storing 65522 in location 1355
9999 mem: storing 0 in location 1356
9999 mem: storing 0 in location 1357
 104 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1358
 104 run: jump-if editor, 1:offset
9999 mem: location 1353 is 1147
9998 run: jumping to instruction 7
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 155 -> 156
 105 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 105 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 105 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1359
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 156 -> 157
 105 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 105 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 105 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1360
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1361
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1362
 104 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1363
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1364
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1365
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1366
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1367
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1354 is 1
9999 mem: location 1355 is 65522
9999 mem: location 1356 is 0
9999 mem: location 1357 is 0
9999 mem: storing 0 in location 1368
 104 run: jump-unless c, 
9999 mem: location 1368 is 0
9998 run: jumping to instruction 438
 104 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1354 is 1
9999 mem: location 1355 is 65522
9999 mem: location 1356 is 0
9999 mem: location 1357 is 0
9999 mem: storing 1355 in location 1422
 104 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1422 is 1355
 104 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1385
 104 run: jump-unless page-up?, 
9999 mem: location 1385 is 0
9998 run: jumping to instruction 482
 104 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1401
 104 run: jump-unless page-down?, 
9999 mem: location 1401 is 0
9998 run: jumping to instruction 523
 104 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1408
 104 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1408 is 0
9998 run: jumping to instruction 561
 104 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1409
 104 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1409 is 0
9998 run: jumping to instruction 599
 104 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1423
 104 run: jump-unless move-to-next-line?, 
9999 mem: location 1423 is 0
9998 run: jumping to instruction 636
 104 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1424
 104 run: jump-unless move-to-previous-line?, 
9999 mem: location 1424 is 0
9998 run: jumping to instruction 673
 104 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1425
 104 run: jump-unless move-to-previous-character?, 
9999 mem: location 1425 is 0
9998 run: jumping to instruction 716
 104 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 0 in location 1427
 104 run: jump-unless move-to-next-character?, 
9999 mem: location 1427 is 0
9998 run: jumping to instruction 757
 104 run: delete-next-character?:boolean <- equal *k, 65522/delete
9999 mem: location 1422 is 1355
9999 mem: location 1355 is 65522
9999 mem: storing 1 in location 1429
 104 run: jump-unless delete-next-character?, 
9999 mem: location 1429 is 1
9998 run: jump-unless fell through
 104 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1403
9999 mem: incrementing refcount of 1169: 40 -> 41
 104 run: editor, screen, go-render?:boolean, deleted-cell:address:shared:duplex-list:character <- delete-at-cursor editor, screen
9999 mem: location 1353 is 1147
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 17
9999 mem: allocating size 19
9999 abandon: picking up space from free-list of size 19
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1566
9999 mem: incrementing refcount of 1147: 34 -> 35
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1567
9999 mem: incrementing refcount of 1012: 157 -> 158
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1568
 105 run: data:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1148
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1148 is 1169
9999 mem: storing 1169 in location 1569
9999 mem: incrementing refcount of 1169: 41 -> 42
 105 run: deleted-cell:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1568 is 1151
9999 mem: location 1151 is 1469
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1216
9999 mem: incrementing refcount of 1469: 25 -> 26
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1469
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1495
9999 mem: location 1472 is 1169
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1495
9999 mem: storing 1495 in location 1217
9999 mem: incrementing refcount of 1495: 22 -> 23
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1495
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1495
9999 mem: storing 1495 in location 1570
9999 mem: incrementing refcount of 1495: 23 -> 24
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1571
 105 run: jump-if deleted-cell, 1:offset
9999 mem: location 1570 is 1495
9998 run: jumping to instruction 9
 105 run: currc:character <- get *deleted-cell, value:offset
9999 mem: location 1570 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1469
9999 mem: location 1570 is 1495
9999 mem: skipping refcount at 1495
9998 run: address to copy is 1496
9998 run: its type is character
9999 mem: location 1496 is 101
9999 mem: storing 101 in location 1572
 105 run: data <- remove_2 deleted-cell, data
9999 mem: location 1570 is 1495
9999 mem: location 1569 is 1169
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: x:address:shared:duplex-list:_elem/contained-in:in <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1221
9999 mem: incrementing refcount of 1495: 24 -> 25
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1222
9999 mem: incrementing refcount of 1169: 42 -> 43
 106 run: jump-if x, 1:offset
9999 mem: location 1221 is 1495
9998 run: jumping to instruction 5
 106 run: next-node:address:shared:duplex-list:_elem <- get *x, next:offset
9999 mem: location 1221 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1469
9999 mem: location 1221 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1497 is 1499
9999 mem: storing 1499 in location 1223
9999 mem: incrementing refcount of 1499: 15 -> 16
 106 run: prev-node:address:shared:duplex-list:_elem <- get *x, prev:offset
9999 mem: location 1221 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1469
9999 mem: location 1221 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1498
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1498 is 1469
9999 mem: storing 1469 in location 1224
9999 mem: incrementing refcount of 1469: 26 -> 27
 106 run: tmp:address:address:shared:duplex-list:_elem <- get-address *x, next:offset
9999 mem: location 1221 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1469
9999 mem: location 1221 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9999 mem: storing 1497 in location 1225
 106 run: *tmp <- copy 0
9999 mem: location 1225 is 1497
9999 mem: decrementing refcount of 1499: 16 -> 15
9999 mem: storing 0 in location 1497
 106 run: tmp <- get-address *x, prev:offset
9999 mem: location 1221 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 0
9999 mem: location 1498 is 1469
9999 mem: location 1221 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1498
9999 mem: storing 1498 in location 1225
 106 run: *tmp <- copy 0
9999 mem: location 1225 is 1498
9999 mem: decrementing refcount of 1469: 27 -> 26
9999 mem: storing 0 in location 1498
 106 run: jump-unless next-node, 
9999 mem: location 1223 is 1499
9998 run: jump-unless fell through
 106 run: tmp <- get-address *next-node, prev:offset
9999 mem: location 1223 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1223 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1502
9999 mem: storing 1502 in location 1225
 106 run: *tmp <- copy prev-node
9999 mem: location 1224 is 1469
9999 mem: location 1225 is 1502
9999 mem: decrementing refcount of 1495: 25 -> 24
9999 mem: storing 1469 in location 1502
9999 mem: incrementing refcount of 1469: 26 -> 27
 106 run: jump-unless prev-node, 
9999 mem: location 1224 is 1469
9998 run: jump-unless fell through
 106 run: tmp <- get-address *prev-node, next:offset
9999 mem: location 1224 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1495
9999 mem: location 1472 is 1169
9999 mem: location 1224 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9999 mem: storing 1471 in location 1225
 106 run: *tmp <- copy next-node
9999 mem: location 1223 is 1499
9999 mem: location 1225 is 1471
9999 mem: decrementing refcount of 1495: 24 -> 23
9999 mem: storing 1499 in location 1471
9999 mem: incrementing refcount of 1499: 15 -> 16
 106 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1222 is 1169
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1169
9999 mem: decrementing refcount of 1169: 43 -> 42
9999 mem: storing 1169 in location 1569
9999 mem: incrementing refcount of 1169: 42 -> 43
 105 run: deleted-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1572 is 101
9999 mem: storing 0 in location 1573
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1571
 105 run: jump-unless deleted-newline?, 1:offset
9999 mem: location 1573 is 0
9998 run: jumping to instruction 15
 105 run: curr:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1568 is 1151
9999 mem: location 1151 is 1469
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1216
9999 mem: incrementing refcount of 1469: 27 -> 28
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1469
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1499
9999 mem: location 1472 is 1169
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1499
9999 mem: storing 1499 in location 1217
9999 mem: incrementing refcount of 1499: 16 -> 17
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1499
9999 mem: storing 1499 in location 1574
9999 mem: incrementing refcount of 1499: 17 -> 18
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1575
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1566 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1576
 105 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1567 is 1012
9999 mem: location 1575 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1576 is 1156
9999 mem: location 1156 is 1
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 158 -> 159
 106 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 106 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1223
 106 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 106 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 106 run: *column <- copy new-column
9999 mem: location 1223 is 1
9999 mem: location 1225 is 1016
9999 mem: storing 1 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 159 -> 158
9999 mem: storing 1012 in location 1567
9999 mem: incrementing refcount of 1012: 158 -> 159
 105 run: curr-column:number <- copy *cursor-column
9999 mem: location 1576 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1577
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1567 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 159 -> 160
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 106 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1578
 105 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1577 is 1
9999 mem: location 1578 is 10
9999 mem: storing 0 in location 1579
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1571
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1579 is 0
9998 run: jumping to instruction 26
 105 run: jump-unless curr, 
9999 mem: location 1574 is 1499
9998 run: jump-unless fell through
 105 run: currc:character <- get *curr, value:offset
9999 mem: location 1574 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1469
9999 mem: location 1574 is 1499
9999 mem: skipping refcount at 1499
9998 run: address to copy is 1500
9998 run: its type is character
9999 mem: location 1500 is 102
9999 mem: storing 102 in location 1572
 105 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1572 is 102
9999 mem: storing 0 in location 1580
 105 run: jump-if at-newline?, 
9999 mem: location 1580 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, currc
9999 mem: location 1567 is 1012
9999 mem: location 1572 is 102
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 160 -> 161
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 102
  90 print-character: 102 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 59 -> 60
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 11
9999 mem: storing 1042 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 101
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 102
9999 mem: location 1249 is 1042
9999 mem: storing 102 in location 1042
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 102
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1043
9999 mem: storing 7 in location 1043
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 161 -> 160
9999 mem: storing 1012 in location 1567
9999 mem: incrementing refcount of 1012: 160 -> 161
 105 run: curr-column <- add curr-column, 1
9999 mem: location 1577 is 1
9999 mem: storing 2 in location 1577
 105 run: curr <- next_2 curr
9999 mem: location 1574 is 1499
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1499 in location 1216
9999 mem: incrementing refcount of 1499: 18 -> 19
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1499
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1469
9999 mem: location 1216 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1501
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1501 is 0
9999 mem: storing 0 in location 1217
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1499: 19 -> 18
9999 mem: storing 0 in location 1574
 105 run: jump 
9998 run: jumping to instruction 22
 105 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1577 is 2
9999 mem: location 1578 is 10
9999 mem: storing 0 in location 1579
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1571
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1579 is 0
9998 run: jumping to instruction 26
 105 run: jump-unless curr, 
9999 mem: location 1574 is 0
9998 run: jumping to instruction 34
 105 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1581
 105 run: screen <- print screen, space
9999 mem: location 1567 is 1012
9999 mem: location 1581 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 161 -> 162
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1243
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 60 -> 61
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 12
9999 mem: storing 1044 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 102
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1044
9999 mem: storing 32 in location 1044
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1045
9999 mem: storing 7 in location 1045
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 162 -> 161
9999 mem: storing 1012 in location 1567
9999 mem: incrementing refcount of 1012: 161 -> 162
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1571
 105 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean, deleted-cell:address:shared:duplex-list:character
9999 mem: location 1566 is 1147
9999 mem: location 1567 is 1012
9999 mem: location 1571 is 0
9999 mem: location 1570 is 1495
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9998 run: result 1 is 1012
9998 run: result 2 is 0
9998 run: result 3 is 1495
9999 mem: decrementing refcount of 1147: 35 -> 34
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 34 -> 35
9999 mem: decrementing refcount of 1012: 162 -> 161
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 161 -> 162
9999 mem: storing 0 in location 1358
9999 mem: storing 1495 in location 1430
9999 mem: incrementing refcount of 1495: 23 -> 24
 104 run: jump-unless deleted-cell, 
9999 mem: location 1430 is 1495
9998 run: jump-unless fell through
 104 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1405
9999 mem: incrementing refcount of 1169: 43 -> 44
 104 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1372
 104 run: jump-unless *undo, 
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1648
9998 run: jump-unless fell through
 104 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1648
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1648 in location 1216
9999 mem: incrementing refcount of 1648: 2 -> 3
 105 run: result <- get *in, value:offset
9999 mem: location 1216 is 1648
9999 mem: skipping refcount at 1648
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1649 is 1636
9999 mem: location 1650 is 1633
9999 mem: location 1216 is 1648
9999 mem: skipping refcount at 1648
9998 run: address to copy is 1649
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1649 is 1636
9999 mem: storing 1636 in location 1217
9999 mem: incrementing refcount of 1636: 4 -> 5
 105 run: reply result:_elem
9999 mem: location 1217 is 1636
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1636
9999 mem: storing 1636 in location 1371
9999 mem: incrementing refcount of 1636: 5 -> 6
 104 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1371 is 1636
9999 mem: skipping refcount at 1636
9999 mem: location 1637 is 2
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1495
9999 mem: location 1647 is 2
9999 mem: location 1371 is 1636
9999 mem: skipping refcount at 1636
9999 mem: storing 1638 in location 1373
 104 run: jump-unless deletion, 
9999 mem: location 1373 is 1638
9998 run: jump-unless fell through
 104 run: previous-coalesce-tag:number <- get *deletion, tag:offset
9999 mem: location 1373 is 1638
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1495
9999 mem: location 1647 is 2
9999 mem: location 1373 is 1638
9998 run: address to copy is 1647
9998 run: its type is number
9999 mem: location 1647 is 2
9999 mem: storing 2 in location 1395
 104 run: coalesce?:boolean <- equal previous-coalesce-tag, 2/coalesce-delete
9999 mem: location 1395 is 2
9999 mem: storing 1 in location 1396
 104 run: jump-unless coalesce?, 
9999 mem: location 1396 is 1
9998 run: jump-unless fell through
 104 run: delete-until:address:address:shared:duplex-list:character <- get-address *deletion, delete-until:offset
9999 mem: location 1373 is 1638
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1495
9999 mem: location 1647 is 2
9999 mem: location 1373 is 1638
9998 run: address to copy is 1646
9999 mem: storing 1646 in location 1431
 104 run: *delete-until <- next_2 *before-cursor
9999 mem: location 1363 is 1151
9999 mem: location 1151 is 1469
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1216
9999 mem: incrementing refcount of 1469: 28 -> 29
 105 run: jump-if in, 1:offset
9999 mem: location 1216 is 1469
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1499
9999 mem: location 1472 is 1169
9999 mem: location 1216 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1499
9999 mem: storing 1499 in location 1217
9999 mem: incrementing refcount of 1499: 18 -> 19
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1499
9999 mem: location 1431 is 1646
9999 mem: decrementing refcount of 1495: 24 -> 23
9999 mem: storing 1499 in location 1646
9999 mem: incrementing refcount of 1499: 19 -> 20
 104 run: deleted-so-far:address:address:shared:duplex-list:character <- get-address *deletion, deleted-text:offset
9999 mem: location 1373 is 1638
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1499
9999 mem: location 1647 is 2
9999 mem: location 1373 is 1638
9998 run: address to copy is 1644
9999 mem: storing 1644 in location 1432
 104 run: *deleted-so-far <- append_5 *deleted-so-far, deleted-cell
9999 mem: location 1432 is 1644
9999 mem: location 1644 is 1491
9999 mem: location 1430 is 1495
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1476
9999 mem: incrementing refcount of 1491: 25 -> 26
 105 run: new:address:shared:duplex-list:_elem/contained-in:in <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1477
9999 mem: incrementing refcount of 1495: 23 -> 24
 105 run: last:address:shared:duplex-list:_elem <- last_2 in
9999 mem: location 1476 is 1491
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1651
9999 mem: storing 4 in location 1652
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1654
9999 mem: incrementing refcount of 1491: 26 -> 27
 106 run: result <- copy in
9999 mem: location 1654 is 1491
9999 mem: storing 1491 in location 1655
9999 mem: incrementing refcount of 1491: 27 -> 28
 106 run: next:address:shared:duplex-list:_elem <- next_2 result
9999 mem: location 1655 is 1491
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1216
9999 mem: incrementing refcount of 1491: 28 -> 29
 107 run: jump-if in, 1:offset
9999 mem: location 1216 is 1491
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1216 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 0
9999 mem: location 1494 is 0
9999 mem: location 1216 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1493 is 0
9999 mem: storing 0 in location 1217
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1656
 106 run: jump-unless next, 
9999 mem: location 1656 is 0
9998 run: jumping to instruction 8
 106 run: reply result:address:shared:duplex-list:_elem
9999 mem: location 1655 is 1491
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1491
9999 mem: storing 1491 in location 1478
9999 mem: incrementing refcount of 1491: 29 -> 30
 105 run: dest:address:address:shared:duplex-list:_elem <- get-address *last, next:offset
9999 mem: location 1478 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 0
9999 mem: location 1494 is 0
9999 mem: location 1478 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9999 mem: storing 1493 in location 1479
 105 run: *dest <- copy new
9999 mem: location 1477 is 1495
9999 mem: location 1479 is 1493
9999 mem: storing 1495 in location 1493
9999 mem: incrementing refcount of 1495: 24 -> 25
 105 run: jump-if new, 1:offset
9999 mem: location 1477 is 1495
9998 run: jumping to instruction 8
 105 run: dest <- get-address *new, prev:offset
9999 mem: location 1477 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 0
9999 mem: location 1498 is 0
9999 mem: location 1477 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1498
9999 mem: storing 1498 in location 1479
 105 run: *dest <- copy last
9999 mem: location 1478 is 1491
9999 mem: location 1479 is 1498
9999 mem: storing 1491 in location 1498
9999 mem: incrementing refcount of 1491: 30 -> 31
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1476 is 1491
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1491
9999 mem: location 1432 is 1644
9999 mem: decrementing refcount of 1491: 31 -> 30
9999 mem: storing 1491 in location 1644
9999 mem: incrementing refcount of 1491: 30 -> 31
 104 run: after-row:address:number <- get-address *deletion, after-row:offset
9999 mem: location 1373 is 1638
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1499
9999 mem: location 1647 is 2
9999 mem: location 1373 is 1638
9998 run: address to copy is 1641
9999 mem: storing 1641 in location 1397
 104 run: *after-row <- copy *cursor-row
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1397 is 1641
9999 mem: storing 1 in location 1641
 104 run: after-column:address:number <- get-address *deletion, after-column:offset
9999 mem: location 1373 is 1638
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1499
9999 mem: location 1647 is 2
9999 mem: location 1373 is 1638
9998 run: address to copy is 1642
9999 mem: storing 1642 in location 1398
 104 run: *after-column <- copy *cursor-column
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 1
9999 mem: location 1398 is 1642
9999 mem: storing 1 in location 1642
 104 run: after-top:address:address:shared:duplex-list:character <- get-address *deletion, after-top-of-screen:offset
9999 mem: location 1373 is 1638
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1499
9999 mem: location 1647 is 2
9999 mem: location 1373 is 1638
9998 run: address to copy is 1643
9999 mem: storing 1643 in location 1399
 104 run: *after-top <- get *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: location 1399 is 1643
9999 mem: decrementing refcount of 1169: 44 -> 43
9999 mem: storing 1169 in location 1643
9999 mem: incrementing refcount of 1169: 43 -> 44
 104 run: jump +done-adding-delete-operation:label
9998 run: jumping to instruction 793
 104 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1352 is 1012
9999 mem: location 1353 is 1147
9999 mem: location 1358 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 162 -> 161
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 161 -> 162
9999 mem: decrementing refcount of 1147: 35 -> 34
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 34 -> 35
9999 mem: storing 0 in location 1348
 103 run: jump-unless go-render?, 
9999 mem: location 1348 is 0
9998 run: jumping to instruction 25
 103 run: jump 
9998 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1340
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 1
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 162 -> 163
 104 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 104 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1223
 104 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 104 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 104 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 104 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 104 run: *column <- copy new-column
9999 mem: location 1223 is 1
9999 mem: location 1225 is 1016
9999 mem: storing 1 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 163 -> 162
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 162 -> 163
 103 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1330
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1256
9999 mem: incrementing refcount of 1330: 12 -> 13
 104 run: jump-unless console, 
9999 mem: location 1256 is 1330
9998 run: jump-unless fell through
 104 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 11
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1331
9999 mem: storing 1331 in location 1257
 104 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 11
9999 mem: location 1332 is 1284
9999 mem: location 1256 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1332 is 1284
9999 mem: storing 1284 in location 1258
9999 mem: incrementing refcount of 1284: 11 -> 12
 104 run: max:number <- length *buf
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9999 mem: storing 11 in location 1259
 104 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1331
9999 mem: location 1331 is 11
9999 mem: location 1259 is 11
9999 mem: storing 1 in location 1260
 104 run: jump-unless done?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 104 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1213 in location 1261
9999 mem: incrementing refcount of 1213: 0 -> 1
 104 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1261 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 0
9999 mem: location 1215 is 0
9999 mem: location 1216 is 0
9999 mem: location 1217 is 0
9999 mem: location 1256 is 1330
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1330
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1330: 13 -> 12
9999 mem: storing 1330 in location 1337
9999 mem: incrementing refcount of 1330: 12 -> 13
9999 mem: storing 1 in location 1345
9999 mem: storing 1 in location 1346
 103 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 103 run: jump-if quit?, 
9999 mem: location 1346 is 1
9998 run: jumping to instruction 28
 103 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1336 is 1012
9999 mem: location 1337 is 1330
9999 mem: location 1338 is 1147
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .af        .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 3
 102 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 4
9990 schedule: scenario-editor-can-undo-and-redo-delete
 102 run: memory-should-contain [
    3 <- 1
    4 <- 1
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: assume-console [
    press ctrl-z
  ]
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"ctrl-z": <>}
9992 load: after rewriting: press ctrl-z
9999 mem: storing 'press' event starting at 1659
9999 mem: storing console in 1663
9999 mem: storing console data in 1665
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9991 parse: --- defining run1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- deduce types for recipe run1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1001
9991 transform: --- type-check 'call' instructions inside recipe run1001
9991 transform: --- type-check calls inside recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1663
9999 mem: location 2 is 1147
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 163 -> 164
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1663 in location 1337
9999 mem: incrementing refcount of 1663: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 35 -> 36
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1340
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 164 -> 165
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1223
 105 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 105 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 105 run: *column <- copy new-column
9999 mem: location 1223 is 1
9999 mem: location 1225 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 165 -> 164
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 164 -> 165
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1663
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1663 in location 1256
9999 mem: incrementing refcount of 1663: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1256 is 1663
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1663
9999 mem: skipping refcount at 1663
9999 mem: location 1664 is 0
9999 mem: location 1665 is 1657
9999 mem: location 1256 is 1663
9999 mem: skipping refcount at 1663
9998 run: address to copy is 1664
9999 mem: storing 1664 in location 1257
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1663
9999 mem: skipping refcount at 1663
9999 mem: location 1664 is 0
9999 mem: location 1665 is 1657
9999 mem: location 1256 is 1663
9999 mem: skipping refcount at 1663
9998 run: address to copy is 1665
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1665 is 1657
9999 mem: storing 1657 in location 1258
9999 mem: incrementing refcount of 1657: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1258 is 1657
9999 mem: skipping refcount at 1657
9999 mem: storing 1 in location 1259
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1664
9999 mem: location 1664 is 0
9999 mem: location 1259 is 1
9999 mem: storing 0 in location 1260
 105 run: jump-unless done?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1258 is 1657
9999 mem: skipping refcount at 1657
9998 run: base address is 1658
9999 mem: location 1257 is 1664
9999 mem: location 1664 is 0
9998 run: address to copy is 1659
9998 run: its type is event
9999 mem: location 1659 is 0
9999 mem: location 1660 is 26
9999 mem: location 1661 is 0
9999 mem: location 1662 is 0
9999 mem: storing 0 in location 1262
9999 mem: storing 26 in location 1263
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1257 is 1664
9999 mem: location 1664 is 0
9999 mem: location 1257 is 1664
9999 mem: storing 1 in location 1664
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1262 is 0
9999 mem: location 1263 is 26
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1256 is 1663
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 26, 0, 0]
9998 run: result 1 is 1663
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1341
9999 mem: storing 26 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1663: 2 -> 1
9999 mem: storing 1663 in location 1337
9999 mem: incrementing refcount of 1663: 1 -> 2
9999 mem: storing 1 in location 1345
9999 mem: storing 0 in location 1346
 104 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1341 is 0
9999 mem: location 1342 is 26
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1347
 104 run: jump-unless t, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1347 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 mem: location 1341 is 0
9999 mem: location 1342 is 26
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 165 -> 166
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 36 -> 37
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1354
9999 mem: storing 26 in location 1355
9999 mem: storing 0 in location 1356
9999 mem: storing 0 in location 1357
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1358
 105 run: jump-if editor, 1:offset
9999 mem: location 1353 is 1147
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1666
9999 mem: storing 3 in location 1667
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1669
9999 mem: incrementing refcount of 1012: 166 -> 167
 106 run: jump-unless screen, 
9999 mem: location 1669 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1669 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1669 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1670
 106 run: reply width:number
9999 mem: location 1670 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1359
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1669
9999 mem: incrementing refcount of 1012: 167 -> 168
 106 run: jump-unless screen, 
9999 mem: location 1669 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1669 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1669 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1670
 106 run: reply height:number
9999 mem: location 1670 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1360
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1361
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1362
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1363
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1364
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1365
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1366
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1367
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1354 is 0
9999 mem: location 1355 is 26
9999 mem: location 1356 is 0
9999 mem: location 1357 is 0
9999 mem: storing 1355 in location 1368
 105 run: jump-unless c, 
9999 mem: location 1368 is 1355
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 26
9999 mem: storing 0 in location 1369
 105 run: jump-unless redo?, 
9999 mem: location 1369 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 26
9999 mem: storing 1 in location 1380
 105 run: jump-unless undo?, 
9999 mem: location 1380 is 1
9998 run: jump-unless fell through
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1648
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1372
 105 run: jump-unless *undo, 
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1648
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1648
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1648 in location 1669
9999 mem: incrementing refcount of 1648: 3 -> 4
 106 run: result <- get *in, value:offset
9999 mem: location 1669 is 1648
9999 mem: skipping refcount at 1648
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1649 is 1636
9999 mem: location 1650 is 1633
9999 mem: location 1669 is 1648
9999 mem: skipping refcount at 1648
9998 run: address to copy is 1649
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1649 is 1636
9999 mem: storing 1636 in location 1670
9999 mem: incrementing refcount of 1636: 6 -> 7
 106 run: reply result:_elem
9999 mem: location 1670 is 1636
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1636
9999 mem: storing 1636 in location 1371
9999 mem: incrementing refcount of 1636: 7 -> 8
 105 run: *undo <- rest_2 *undo
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1648
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1648 in location 1669
9999 mem: incrementing refcount of 1648: 4 -> 5
 106 run: result <- get *in, next:offset
9999 mem: location 1669 is 1648
9999 mem: skipping refcount at 1648
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1649 is 1636
9999 mem: location 1650 is 1633
9999 mem: location 1669 is 1648
9999 mem: skipping refcount at 1648
9999 type: type deduced to be address$
9998 run: address to copy is 1650
9998 run: its type is <address : <shared : <list : <address : <shared : <operation : <>>>>>>>
9999 mem: location 1650 is 1633
9999 mem: storing 1633 in location 1670
9999 mem: incrementing refcount of 1633: 4 -> 5
 106 run: reply result:address:shared:list:_elem/contained-in:in
9999 mem: location 1670 is 1633
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1633
9999 mem: location 1372 is 1158
9999 mem: decrementing refcount of 1648: 5 -> 4
9999 mem: storing 1633 in location 1158
9999 mem: incrementing refcount of 1633: 5 -> 6
 105 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1370
 105 run: *redo <- push_4 op, *redo
9999 mem: location 1371 is 1636
9999 mem: location 1370 is 1159
9999 mem: location 1159 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1636 in location 1221
9999 mem: incrementing refcount of 1636: 8 -> 9
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1222
 106 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1671
9999 mem: storing 1671 in location 1223
9999 mem: incrementing refcount of 1671: 0 -> 1
 106 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1223 is 1671
9999 mem: skipping refcount at 1671
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1672 is 0
9999 mem: location 1673 is 0
9999 mem: location 1223 is 1671
9999 mem: skipping refcount at 1671
9998 run: address to copy is 1672
9999 mem: storing 1672 in location 1224
 106 run: *val <- copy x
9999 mem: location 1221 is 1636
9999 mem: location 1224 is 1672
9999 mem: storing 1636 in location 1672
9999 mem: incrementing refcount of 1636: 9 -> 10
 106 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1223 is 1671
9999 mem: skipping refcount at 1671
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1672 is 1636
9999 mem: location 1673 is 0
9999 mem: location 1223 is 1671
9999 mem: skipping refcount at 1671
9999 type: type deduced to be address$
9998 run: address to copy is 1673
9999 mem: storing 1673 in location 1225
 106 run: *next <- copy in
9999 mem: location 1222 is 0
9999 mem: location 1225 is 1673
9999 mem: storing 0 in location 1673
 106 run: reply result
9999 mem: location 1223 is 1671
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1671
9999 mem: location 1370 is 1159
9999 mem: storing 1671 in location 1159
9999 mem: incrementing refcount of 1671: 1 -> 2
 105 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1371 is 1636
9999 mem: skipping refcount at 1636
9999 mem: location 1637 is 2
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1499
9999 mem: location 1647 is 2
9999 mem: location 1371 is 1636
9999 mem: skipping refcount at 1636
9999 mem: storing 1638 in location 1373
 105 run: jump-unless deletion, 
9999 mem: location 1373 is 1638
9998 run: jump-unless fell through
 105 run: start2:address:address:shared:duplex-list:character <- get-address *editor, data:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1381
 105 run: anchor:address:shared:duplex-list:character <- get *deletion, delete-from:offset
9999 mem: location 1373 is 1638
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1499
9999 mem: location 1647 is 2
9999 mem: location 1373 is 1638
9998 run: address to copy is 1645
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1645 is 1469
9999 mem: storing 1469 in location 1382
9999 mem: incrementing refcount of 1469: 29 -> 30
 105 run: jump-unless anchor, 
9999 mem: location 1382 is 1469
9998 run: jump-unless fell through
 105 run: deleted:address:shared:duplex-list:character <- get *deletion, deleted-text:offset
9999 mem: location 1373 is 1638
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1499
9999 mem: location 1647 is 2
9999 mem: location 1373 is 1638
9998 run: address to copy is 1644
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1644 is 1491
9999 mem: storing 1491 in location 1383
9999 mem: incrementing refcount of 1491: 31 -> 32
 105 run: old-cursor:address:shared:duplex-list:character <- last_2 deleted
9999 mem: location 1383 is 1491
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1654
9999 mem: incrementing refcount of 1491: 32 -> 33
 106 run: result <- copy in
9999 mem: location 1654 is 1491
9999 mem: storing 1491 in location 1655
9999 mem: incrementing refcount of 1491: 33 -> 34
 106 run: next:address:shared:duplex-list:_elem <- next_2 result
9999 mem: location 1655 is 1491
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1669
9999 mem: incrementing refcount of 1491: 34 -> 35
 107 run: jump-if in, 1:offset
9999 mem: location 1669 is 1491
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1669 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 0
9999 mem: location 1669 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1493 is 1495
9999 mem: storing 1495 in location 1670
9999 mem: incrementing refcount of 1495: 25 -> 26
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1670 is 1495
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1495
9999 mem: storing 1495 in location 1656
9999 mem: incrementing refcount of 1495: 26 -> 27
 106 run: jump-unless next, 
9999 mem: location 1656 is 1495
9998 run: jump-unless fell through
 106 run: result <- copy next
9999 mem: location 1656 is 1495
9999 mem: decrementing refcount of 1491: 35 -> 34
9999 mem: storing 1495 in location 1655
9999 mem: incrementing refcount of 1495: 27 -> 28
 106 run: jump 
9998 run: jumping to instruction 4
 106 run: next:address:shared:duplex-list:_elem <- next_2 result
9999 mem: location 1655 is 1495
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1669
9999 mem: incrementing refcount of 1495: 28 -> 29
 107 run: jump-if in, 1:offset
9999 mem: location 1669 is 1495
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1669 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 0
9999 mem: location 1498 is 1491
9999 mem: location 1669 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1497 is 0
9999 mem: storing 0 in location 1670
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1670 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1495: 29 -> 28
9999 mem: storing 0 in location 1656
 106 run: jump-unless next, 
9999 mem: location 1656 is 0
9998 run: jumping to instruction 8
 106 run: reply result:address:shared:duplex-list:_elem
9999 mem: location 1655 is 1495
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1495
9999 mem: storing 1495 in location 1384
9999 mem: incrementing refcount of 1495: 28 -> 29
 105 run: insert-range_2 anchor, deleted
9999 mem: location 1382 is 1469
9999 mem: location 1383 is 1491
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1221
9999 mem: incrementing refcount of 1469: 30 -> 31
 106 run: start:address:shared:duplex-list:_elem/contained-in:in <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1222
9999 mem: incrementing refcount of 1491: 34 -> 35
 106 run: jump-if in, 1:offset
9999 mem: location 1221 is 1469
9998 run: jumping to instruction 5
 106 run: jump-if start, 1:offset
9999 mem: location 1222 is 1491
9998 run: jumping to instruction 7
 106 run: end:address:shared:duplex-list:_elem <- copy start
9999 mem: location 1222 is 1491
9999 mem: storing 1491 in location 1223
9999 mem: incrementing refcount of 1491: 35 -> 36
 106 run: next:address:shared:duplex-list:_elem <- next_2 end/insert-range
9999 mem: location 1223 is 1491
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1669
9999 mem: incrementing refcount of 1491: 36 -> 37
 107 run: jump-if in, 1:offset
9999 mem: location 1669 is 1491
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1669 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 0
9999 mem: location 1669 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1493 is 1495
9999 mem: storing 1495 in location 1670
9999 mem: incrementing refcount of 1495: 29 -> 30
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1670 is 1495
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1495
9999 mem: storing 1495 in location 1224
9999 mem: incrementing refcount of 1495: 30 -> 31
 106 run: jump-unless next, 
9999 mem: location 1224 is 1495
9998 run: jump-unless fell through
 106 run: end <- copy next
9999 mem: location 1224 is 1495
9999 mem: decrementing refcount of 1491: 37 -> 36
9999 mem: storing 1495 in location 1223
9999 mem: incrementing refcount of 1495: 31 -> 32
 106 run: jump 
9998 run: jumping to instruction 9
 106 run: next:address:shared:duplex-list:_elem <- next_2 end/insert-range
9999 mem: location 1223 is 1495
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1669
9999 mem: incrementing refcount of 1495: 32 -> 33
 107 run: jump-if in, 1:offset
9999 mem: location 1669 is 1495
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1669 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 0
9999 mem: location 1498 is 1491
9999 mem: location 1669 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1497 is 0
9999 mem: storing 0 in location 1670
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1670 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1495: 33 -> 32
9999 mem: storing 0 in location 1224
 106 run: jump-unless next, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 13
 106 run: next:address:shared:duplex-list:_elem <- next_2 in
9999 mem: location 1221 is 1469
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1669
9999 mem: incrementing refcount of 1469: 31 -> 32
 107 run: jump-if in, 1:offset
9999 mem: location 1669 is 1469
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1669 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1499
9999 mem: location 1472 is 1169
9999 mem: location 1669 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1499
9999 mem: storing 1499 in location 1670
9999 mem: incrementing refcount of 1499: 20 -> 21
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1670 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1499
9999 mem: storing 1499 in location 1224
9999 mem: incrementing refcount of 1499: 21 -> 22
 106 run: dest:address:address:shared:duplex-list:_elem <- get-address *end, next:offset
9999 mem: location 1223 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 0
9999 mem: location 1498 is 1491
9999 mem: location 1223 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9999 mem: storing 1497 in location 1225
 106 run: *dest <- copy next
9999 mem: location 1224 is 1499
9999 mem: location 1225 is 1497
9999 mem: storing 1499 in location 1497
9999 mem: incrementing refcount of 1499: 22 -> 23
 106 run: jump-unless next, 
9999 mem: location 1224 is 1499
9998 run: jump-unless fell through
 106 run: dest <- get-address *next, prev:offset
9999 mem: location 1224 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1469
9999 mem: location 1224 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1502
9999 mem: storing 1502 in location 1225
 106 run: *dest <- copy end
9999 mem: location 1223 is 1495
9999 mem: location 1225 is 1502
9999 mem: decrementing refcount of 1469: 32 -> 31
9999 mem: storing 1495 in location 1502
9999 mem: incrementing refcount of 1495: 32 -> 33
 106 run: dest <- get-address *in, next:offset
9999 mem: location 1221 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1499
9999 mem: location 1472 is 1169
9999 mem: location 1221 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9999 mem: storing 1471 in location 1225
 106 run: *dest <- copy start
9999 mem: location 1222 is 1491
9999 mem: location 1225 is 1471
9999 mem: decrementing refcount of 1499: 23 -> 22
9999 mem: storing 1491 in location 1471
9999 mem: incrementing refcount of 1491: 36 -> 37
 106 run: dest <- get-address *start, prev:offset
9999 mem: location 1222 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 0
9999 mem: location 1222 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1494
9999 mem: storing 1494 in location 1225
 106 run: *dest <- copy in
9999 mem: location 1221 is 1469
9999 mem: location 1225 is 1494
9999 mem: storing 1469 in location 1494
9999 mem: incrementing refcount of 1469: 31 -> 32
 106 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1221 is 1469
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: *before-cursor <- copy old-cursor
9999 mem: location 1384 is 1495
9999 mem: location 1363 is 1151
9999 mem: decrementing refcount of 1469: 32 -> 31
9999 mem: storing 1495 in location 1151
9999 mem: incrementing refcount of 1495: 33 -> 34
 105 run: *cursor-row <- get *deletion, before-row:offset
9999 mem: location 1373 is 1638
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1499
9999 mem: location 1647 is 2
9999 mem: location 1373 is 1638
9998 run: address to copy is 1638
9998 run: its type is number
9999 mem: location 1638 is 1
9999 mem: location 1364 is 1155
9999 mem: storing 1 in location 1155
 105 run: *cursor-column <- get *deletion, before-column:offset
9999 mem: location 1373 is 1638
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1499
9999 mem: location 1647 is 2
9999 mem: location 1373 is 1638
9998 run: address to copy is 1639
9998 run: its type is number
9999 mem: location 1639 is 1
9999 mem: location 1365 is 1156
9999 mem: storing 1 in location 1156
 105 run: top:address:address:shared:duplex-list:character <- get-address *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1376
 105 run: *top <- get *deletion, before-top-of-screen:offset
9999 mem: location 1373 is 1638
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1499
9999 mem: location 1647 is 2
9999 mem: location 1373 is 1638
9998 run: address to copy is 1640
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1640 is 1169
9999 mem: location 1376 is 1149
9999 mem: decrementing refcount of 1169: 44 -> 43
9999 mem: storing 1169 in location 1149
9999 mem: incrementing refcount of 1169: 43 -> 44
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1371 is 1636
9999 mem: skipping refcount at 1636
9999 mem: location 1637 is 2
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1499
9999 mem: location 1647 is 2
9999 mem: location 1371 is 1636
9999 mem: skipping refcount at 1636
9999 mem: storing 0 in location 1377
 105 run: jump-unless move, 
9999 mem: location 1377 is 0
9998 run: jumping to instruction 94
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1371 is 1636
9999 mem: skipping refcount at 1636
9999 mem: location 1637 is 2
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1499
9999 mem: location 1647 is 2
9999 mem: location 1371 is 1636
9999 mem: skipping refcount at 1636
9999 mem: storing 0 in location 1378
 105 run: jump-unless typing, 
9999 mem: location 1378 is 0
9998 run: jumping to instruction 106
 105 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 1/go-render
9999 mem: location 1352 is 1012
9999 mem: location 1353 is 1147
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1012: 168 -> 167
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 167 -> 168
9999 mem: decrementing refcount of 1147: 37 -> 36
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 36 -> 37
9999 mem: storing 1 in location 1348
 104 run: jump-unless go-render?, 
9999 mem: location 1348 is 1
9998 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1163
9999 mem: incrementing refcount of 1012: 168 -> 169
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1164
9999 mem: incrementing refcount of 1147: 37 -> 38
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1165
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1166
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1163 is 1012
9999 mem: location 1164 is 1147
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 169 -> 170
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1187
9999 mem: incrementing refcount of 1147: 38 -> 39
 106 run: jump-if editor, 1:offset
9999 mem: location 1187 is 1147
9998 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1188
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1186 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1669
9999 mem: incrementing refcount of 1012: 170 -> 171
 107 run: jump-unless screen, 
9999 mem: location 1669 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1669 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1669 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1670
 107 run: reply height:number
9999 mem: location 1670 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1189
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1190
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1191
9999 mem: incrementing refcount of 1169: 44 -> 45
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1191 is 1169
9999 mem: storing 1169 in location 1192
9999 mem: incrementing refcount of 1169: 45 -> 46
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1169
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1669
9999 mem: incrementing refcount of 1169: 46 -> 47
 107 run: jump-if in, 1:offset
9999 mem: location 1669 is 1169
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1669 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 1469
9999 mem: location 1172 is 0
9999 mem: location 1669 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 1469
9999 mem: storing 1469 in location 1670
9999 mem: incrementing refcount of 1469: 31 -> 32
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1670 is 1469
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1469
9999 mem: decrementing refcount of 1169: 47 -> 46
9999 mem: storing 1469 in location 1191
9999 mem: incrementing refcount of 1469: 32 -> 33
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1193
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1194
 106 run: column:number <- copy left
9999 mem: location 1188 is 0
9999 mem: storing 0 in location 1195
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1196
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1197
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1495
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1198
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1186 is 1012
9999 mem: location 1194 is 1
9999 mem: location 1195 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 171 -> 172
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 107 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 107 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 107 run: *column <- copy new-column
9999 mem: location 1223 is 0
9999 mem: location 1225 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 172 -> 171
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 171 -> 172
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1469
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 0
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 0 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1491
9999 mem: location 1472 is 1169
9999 mem: location 1191 is 1469
9999 mem: skipping refcount at 1469
9998 run: address to copy is 1470
9998 run: its type is character
9999 mem: location 1470 is 97
9999 mem: storing 97 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 97
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1674
9999 mem: storing 10 in location 1675
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 97
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 97
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 97
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 0
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 97
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 172 -> 173
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 97
  90 print-character: 97 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 97
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 61 -> 62
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 97
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 10
9999 mem: storing 1040 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1248 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 97
9999 mem: location 1249 is 1040
9999 mem: storing 97 in location 1040
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1248 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1041
9999 mem: storing 7 in location 1041
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1469
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1669
9999 mem: incrementing refcount of 1469: 33 -> 34
 107 run: jump-if in, 1:offset
9999 mem: location 1669 is 1469
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1669 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1491
9999 mem: location 1472 is 1169
9999 mem: location 1669 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1491
9999 mem: storing 1491 in location 1670
9999 mem: incrementing refcount of 1491: 37 -> 38
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1670 is 1491
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1491
9999 mem: decrementing refcount of 1469: 34 -> 33
9999 mem: storing 1491 in location 1191
9999 mem: incrementing refcount of 1491: 38 -> 39
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1169
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1669
9999 mem: incrementing refcount of 1169: 46 -> 47
 107 run: jump-if in, 1:offset
9999 mem: location 1669 is 1169
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1669 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 1469
9999 mem: location 1172 is 0
9999 mem: location 1669 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 1469
9999 mem: storing 1469 in location 1670
9999 mem: incrementing refcount of 1469: 33 -> 34
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1670 is 1469
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1469
9999 mem: decrementing refcount of 1169: 47 -> 46
9999 mem: storing 1469 in location 1192
9999 mem: incrementing refcount of 1469: 34 -> 35
 106 run: column <- add column, 1
9999 mem: location 1195 is 0
9999 mem: storing 1 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1491
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 1
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1192 is 1469
9999 mem: location 1198 is 1151
9999 mem: decrementing refcount of 1495: 34 -> 33
9999 mem: storing 1469 in location 1151
9999 mem: incrementing refcount of 1469: 35 -> 36
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1469
9999 mem: location 1191 is 1491
9999 mem: skipping refcount at 1491
9998 run: address to copy is 1492
9998 run: its type is character
9999 mem: location 1492 is 100
9999 mem: storing 100 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 100
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 100
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 100
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 1
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 100
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 173 -> 174
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 100
  90 print-character: 100 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 100
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 62 -> 63
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 100
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 11
9999 mem: storing 1042 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 102
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 100
9999 mem: location 1249 is 1042
9999 mem: storing 100 in location 1042
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 100
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1043
9999 mem: storing 7 in location 1043
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1491
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1669
9999 mem: incrementing refcount of 1491: 39 -> 40
 107 run: jump-if in, 1:offset
9999 mem: location 1669 is 1491
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1669 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1469
9999 mem: location 1669 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1493 is 1495
9999 mem: storing 1495 in location 1670
9999 mem: incrementing refcount of 1495: 33 -> 34
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1670 is 1495
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1495
9999 mem: decrementing refcount of 1491: 40 -> 39
9999 mem: storing 1495 in location 1191
9999 mem: incrementing refcount of 1495: 34 -> 35
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1469
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1669
9999 mem: incrementing refcount of 1469: 36 -> 37
 107 run: jump-if in, 1:offset
9999 mem: location 1669 is 1469
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1669 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1491
9999 mem: location 1472 is 1169
9999 mem: location 1669 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1491
9999 mem: storing 1491 in location 1670
9999 mem: incrementing refcount of 1491: 39 -> 40
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1670 is 1491
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1491
9999 mem: decrementing refcount of 1469: 37 -> 36
9999 mem: storing 1491 in location 1192
9999 mem: incrementing refcount of 1491: 40 -> 41
 106 run: column <- add column, 1
9999 mem: location 1195 is 1
9999 mem: storing 2 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1495
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 2
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 0 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1191 is 1495
9999 mem: skipping refcount at 1495
9998 run: address to copy is 1496
9998 run: its type is character
9999 mem: location 1496 is 101
9999 mem: storing 101 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 101
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
9990 schedule: get-color/render/editor-render/editor-event-loop/run1001/scenario-editor-can-undo-and-redo-delete
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 101
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 101
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 2
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 101
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 174 -> 175
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 101
  90 print-character: 101 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 63 -> 64
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 12
9999 mem: storing 1044 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 101
9999 mem: location 1249 is 1044
9999 mem: storing 101 in location 1044
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 101
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1045
9999 mem: storing 7 in location 1045
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1495
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1669
9999 mem: incrementing refcount of 1495: 35 -> 36
 107 run: jump-if in, 1:offset
9999 mem: location 1669 is 1495
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1669 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1669 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1497 is 1499
9999 mem: storing 1499 in location 1670
9999 mem: incrementing refcount of 1499: 22 -> 23
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1670 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1499
9999 mem: decrementing refcount of 1495: 36 -> 35
9999 mem: storing 1499 in location 1191
9999 mem: incrementing refcount of 1499: 23 -> 24
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1491
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1669
9999 mem: incrementing refcount of 1491: 41 -> 42
 107 run: jump-if in, 1:offset
9999 mem: location 1669 is 1491
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1669 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1469
9999 mem: location 1669 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1493 is 1495
9999 mem: storing 1495 in location 1670
9999 mem: incrementing refcount of 1495: 35 -> 36
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1670 is 1495
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1495
9999 mem: decrementing refcount of 1491: 42 -> 41
9999 mem: storing 1495 in location 1192
9999 mem: incrementing refcount of 1495: 36 -> 37
 106 run: column <- add column, 1
9999 mem: location 1195 is 2
9999 mem: storing 3 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1499
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 3
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 0 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1191 is 1499
9999 mem: skipping refcount at 1499
9998 run: address to copy is 1500
9998 run: its type is character
9999 mem: location 1500 is 102
9999 mem: storing 102 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 102
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 102
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 102
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 3
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 102
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 175 -> 176
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 102
  90 print-character: 102 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 64 -> 65
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 13
9999 mem: storing 1046 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1248 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 102
9999 mem: location 1249 is 1046
9999 mem: storing 102 in location 1046
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1046
9999 mem: location 1046 is 102
9999 mem: location 1047 is 7
9999 mem: location 1248 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1047
9999 mem: storing 7 in location 1047
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1499
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1499 in location 1669
9999 mem: incrementing refcount of 1499: 24 -> 25
 107 run: jump-if in, 1:offset
9999 mem: location 1669 is 1499
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1669 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1669 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1501
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1501 is 0
9999 mem: storing 0 in location 1670
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1670 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1499: 25 -> 24
9999 mem: storing 0 in location 1191
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1495
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1669
9999 mem: incrementing refcount of 1495: 37 -> 38
 107 run: jump-if in, 1:offset
9999 mem: location 1669 is 1495
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1669 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1669 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1497 is 1499
9999 mem: storing 1499 in location 1670
9999 mem: incrementing refcount of 1499: 24 -> 25
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1670 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1499
9999 mem: decrementing refcount of 1495: 38 -> 37
9999 mem: storing 1499 in location 1192
9999 mem: incrementing refcount of 1499: 25 -> 26
 106 run: column <- add column, 1
9999 mem: location 1195 is 3
9999 mem: storing 4 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 0
9998 run: jumping to instruction 68
 106 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1207
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1191 is 0
9999 mem: location 1207 is 1150
9999 mem: storing 0 in location 1150
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1195 is 4
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 0 in location 1208
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1200 is 1
9999 mem: location 1208 is 0
9999 mem: storing 0 in location 1209
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 0 in location 1210
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: storing 0 in location 1211
 106 run: jump-unless before-cursor?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 81
 106 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1212
 106 run: *bottom <- copy row
9999 mem: location 1194 is 1
9999 mem: location 1212 is 1154
9999 mem: storing 1 in location 1154
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1194 is 1
9999 mem: location 1195 is 4
9999 mem: location 1186 is 1012
9999 mem: location 1187 is 1147
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1
9998 run: result 1 is 4
9999 mem: storing 1 in location 1167
9999 mem: storing 4 in location 1168
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1163 is 1012
9999 mem: location 1168 is 4
9999 mem: location 1166 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 176 -> 177
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1222
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1223
 106 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1224
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 4
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 177 -> 178
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 65 -> 66
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 14
9999 mem: storing 1048 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1248 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1048
9999 mem: storing 32 in location 1048
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1248 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1049
9999 mem: storing 7 in location 1049
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 178 -> 177
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 177 -> 178
 106 run: column <- add column, 1
9999 mem: location 1222 is 4
9999 mem: storing 5 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 5
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 178 -> 179
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 66 -> 67
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 15
9999 mem: storing 1050 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1248 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1050
9999 mem: storing 32 in location 1050
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1248 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1051
9999 mem: storing 7 in location 1051
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 179 -> 178
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 178 -> 179
 106 run: column <- add column, 1
9999 mem: location 1222 is 5
9999 mem: storing 6 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 6
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 179 -> 180
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 67 -> 68
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 16
9999 mem: storing 1052 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1248 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1052
9999 mem: storing 32 in location 1052
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1248 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1053
9999 mem: storing 7 in location 1053
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 180 -> 179
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 179 -> 180
 106 run: column <- add column, 1
9999 mem: location 1222 is 6
9999 mem: storing 7 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 7
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 180 -> 181
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 68 -> 69
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 17
9999 mem: storing 1054 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1248 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1054
9999 mem: storing 32 in location 1054
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1248 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1055
9999 mem: storing 7 in location 1055
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 181 -> 180
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 180 -> 181
 106 run: column <- add column, 1
9999 mem: location 1222 is 7
9999 mem: storing 8 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 8
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 181 -> 182
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 69 -> 70
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 18
9999 mem: storing 1056 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1248 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1056
9999 mem: storing 32 in location 1056
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1248 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1057
9999 mem: storing 7 in location 1057
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run1001/scenario-editor-can-undo-and-redo-delete
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 182 -> 181
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 181 -> 182
 106 run: column <- add column, 1
9999 mem: location 1222 is 8
9999 mem: storing 9 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 9
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 182 -> 183
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 70 -> 71
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 19
9999 mem: storing 1058 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1248 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1058
9999 mem: storing 32 in location 1058
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1248 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1059
9999 mem: storing 7 in location 1059
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 183 -> 182
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 182 -> 183
 106 run: column <- add column, 1
9999 mem: location 1222 is 9
9999 mem: storing 10 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 10
9999 mem: location 1223 is 9
9999 mem: storing 1 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 1
9998 run: jumping to instruction 11
 106 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1163 is 1012
9999 mem: location 1167 is 2
9999 mem: location 1165 is 0
9999 mem: location 1166 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 183 -> 184
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1257
 106 run: x:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1258
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1259
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1260
9999 mem: storing 1 in location 1261
 106 run: jump-if style-found?, 
9999 mem: location 1261 is 1
9998 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1262
9999 mem: storing 0 in location 1263
 106 run: jump-if color-found?, 
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1262
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 106 run: jump-if bg-color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1264
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1256 is 1012
9999 mem: location 1257 is 2
9999 mem: location 1258 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 184 -> 185
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1222
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 107 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 107 run: *row <- copy new-row
9999 mem: location 1222 is 2
9999 mem: location 1224 is 1015
9999 mem: storing 2 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 107 run: *column <- copy new-column
9999 mem: location 1223 is 0
9999 mem: location 1225 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 185 -> 184
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 184 -> 185
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 0
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 185 -> 186
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 71 -> 72
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 20
9999 mem: storing 1060 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1248 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1060
9999 mem: storing 9480 in location 1060
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1248 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1061
9999 mem: storing 245 in location 1061
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 0
9999 mem: storing 1 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 1
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 186 -> 187
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 72 -> 73
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 21
9999 mem: storing 1062 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1248 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1062
9999 mem: storing 9480 in location 1062
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1248 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1063
9999 mem: storing 245 in location 1063
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 1
9999 mem: storing 2 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 2
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 187 -> 188
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 73 -> 74
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 22
9999 mem: storing 1064 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1248 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1064
9999 mem: storing 9480 in location 1064
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1248 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1065
9999 mem: storing 245 in location 1065
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 2
9999 mem: storing 3 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 3
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 188 -> 189
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 74 -> 75
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 23
9999 mem: storing 1066 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1248 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1066
9999 mem: storing 9480 in location 1066
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1248 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1067
9999 mem: storing 245 in location 1067
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 3
9999 mem: storing 4 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 4
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 189 -> 190
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 75 -> 76
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 24
9999 mem: storing 1068 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1248 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1068
9999 mem: storing 9480 in location 1068
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1248 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1069
9999 mem: storing 245 in location 1069
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 4
9999 mem: storing 5 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 5
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 190 -> 191
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 76 -> 77
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 25
9999 mem: storing 1070 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1248 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1070
9999 mem: storing 9480 in location 1070
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1248 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1071
9999 mem: storing 245 in location 1071
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 5
9999 mem: storing 6 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 6
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 191 -> 192
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 77 -> 78
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 26
9999 mem: storing 1072 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1248 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1072
9999 mem: storing 9480 in location 1072
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1248 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1073
9999 mem: storing 245 in location 1073
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 6
9999 mem: storing 7 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 7
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 192 -> 193
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run1001/scenario-editor-can-undo-and-redo-delete
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 78 -> 79
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 27
9999 mem: storing 1074 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1248 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1074
9999 mem: storing 9480 in location 1074
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1248 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1075
9999 mem: storing 245 in location 1075
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 7
9999 mem: storing 8 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 8
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 193 -> 194
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 79 -> 80
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 28
9999 mem: storing 1076 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1076
9999 mem: location 1076 is 9480
9999 mem: location 1077 is 245
9999 mem: location 1248 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1076
9999 mem: storing 9480 in location 1076
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1076
9999 mem: location 1076 is 9480
9999 mem: location 1077 is 245
9999 mem: location 1248 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1077
9999 mem: storing 245 in location 1077
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 8
9999 mem: storing 9 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 9
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 194 -> 195
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 80 -> 81
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 29
9999 mem: storing 1078 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1078
9999 mem: location 1078 is 9480
9999 mem: location 1079 is 245
9999 mem: location 1248 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1078
9999 mem: storing 9480 in location 1078
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1078
9999 mem: location 1078 is 9480
9999 mem: location 1079 is 245
9999 mem: location 1248 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1079
9999 mem: storing 245 in location 1079
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 9
9999 mem: storing 10 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 10
9999 mem: location 1259 is 9
9999 mem: storing 0 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 27
 106 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1163 is 1012
9999 mem: location 1167 is 3
9999 mem: location 1165 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 195 -> 196
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1222
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 106 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1224
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1225
 106 run: jump-if screen, 
9999 mem: location 1221 is 1012
9998 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1221 is 1012
9999 mem: location 1222 is 3
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 196 -> 197
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1271
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 107 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 107 run: *row <- copy new-row
9999 mem: location 1271 is 3
9999 mem: location 1273 is 1015
9999 mem: storing 3 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: *column <- copy new-column
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 197 -> 196
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 196 -> 197
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1221 is 1012
9999 mem: location 1223 is 0
9999 mem: location 1225 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 197 -> 198
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1271
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1272
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1273
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 0
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 198 -> 199
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 81 -> 82
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 30
9999 mem: storing 1080 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1248 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1080
9999 mem: storing 32 in location 1080
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1248 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1081
9999 mem: storing 7 in location 1081
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 199 -> 198
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 198 -> 199
 107 run: column <- add column, 1
9999 mem: location 1271 is 0
9999 mem: storing 1 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 1
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 199 -> 200
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 82 -> 83
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 31
9999 mem: storing 1082 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1248 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1082
9999 mem: storing 32 in location 1082
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1248 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1083
9999 mem: storing 7 in location 1083
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 200 -> 199
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 199 -> 200
 107 run: column <- add column, 1
9999 mem: location 1271 is 1
9999 mem: storing 2 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 2
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 200 -> 201
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 83 -> 84
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 32
9999 mem: storing 1084 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1248 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1084
9999 mem: storing 32 in location 1084
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1248 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1085
9999 mem: storing 7 in location 1085
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 201 -> 200
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 200 -> 201
 107 run: column <- add column, 1
9999 mem: location 1271 is 2
9999 mem: storing 3 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 3
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 201 -> 202
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 33 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 84 -> 85
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 33
9999 mem: storing 1086 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1248 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1086
9999 mem: storing 32 in location 1086
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1248 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1087
9999 mem: storing 7 in location 1087
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 202 -> 201
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 201 -> 202
 107 run: column <- add column, 1
9999 mem: location 1271 is 3
9999 mem: storing 4 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 4
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 202 -> 203
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 34 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 85 -> 86
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 34
9999 mem: storing 1088 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1248 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1088
9999 mem: storing 32 in location 1088
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1248 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1089
9999 mem: storing 7 in location 1089
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 203 -> 202
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 202 -> 203
 107 run: column <- add column, 1
9999 mem: location 1271 is 4
9999 mem: storing 5 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 5
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 203 -> 204
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run1001/scenario-editor-can-undo-and-redo-delete
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 35 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 86 -> 87
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 35
9999 mem: storing 1090 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1248 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1090
9999 mem: storing 32 in location 1090
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1248 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1091
9999 mem: storing 7 in location 1091
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 204 -> 203
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 203 -> 204
 107 run: column <- add column, 1
9999 mem: location 1271 is 5
9999 mem: storing 6 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 6
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 204 -> 205
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 36 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 87 -> 88
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 36
9999 mem: storing 1092 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1248 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1092
9999 mem: storing 32 in location 1092
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1248 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1093
9999 mem: storing 7 in location 1093
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 205 -> 204
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 204 -> 205
 107 run: column <- add column, 1
9999 mem: location 1271 is 6
9999 mem: storing 7 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 7
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 205 -> 206
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 37 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 88 -> 89
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 37
9999 mem: storing 1094 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1248 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1094
9999 mem: storing 32 in location 1094
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1248 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1095
9999 mem: storing 7 in location 1095
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 206 -> 205
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 205 -> 206
 107 run: column <- add column, 1
9999 mem: location 1271 is 7
9999 mem: storing 8 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 8
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 206 -> 207
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 38 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 89 -> 90
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 38
9999 mem: storing 1096 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1248 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1096
9999 mem: storing 32 in location 1096
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1248 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1097
9999 mem: storing 7 in location 1097
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 207 -> 206
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 206 -> 207
 107 run: column <- add column, 1
9999 mem: location 1271 is 8
9999 mem: storing 9 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 9
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 207 -> 208
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 39 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 90 -> 91
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 39
9999 mem: storing 1098 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1248 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1098
9999 mem: storing 32 in location 1098
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1248 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1099
9999 mem: storing 7 in location 1099
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 208 -> 207
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 207 -> 208
 107 run: column <- add column, 1
9999 mem: location 1271 is 9
9999 mem: storing 10 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 10
9999 mem: location 1272 is 9
9999 mem: storing 1 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 1
9998 run: jumping to instruction 11
 107 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1221 is 1012
9999 mem: location 1222 is 3
9999 mem: location 1224 is 0
9999 mem: location 1225 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 208 -> 209
 107 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1279
 107 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1280
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1281
 107 run: row <- add row, 1
9999 mem: location 1279 is 3
9999 mem: storing 4 in location 1279
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1278 is 1012
9999 mem: location 1279 is 4
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 209 -> 210
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1271
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 108 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 108 run: *row <- copy new-row
9999 mem: location 1271 is 4
9999 mem: location 1273 is 1015
9999 mem: storing 4 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: *column <- copy new-column
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 210 -> 209
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 209 -> 210
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1278 is 1012
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1669
9999 mem: incrementing refcount of 1012: 210 -> 211
 108 run: jump-unless screen, 
9999 mem: location 1669 is 1012
9998 run: jump-unless fell through
 108 run: height <- get *screen, num-rows:offset
9999 mem: location 1669 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1669 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1670
 108 run: reply height:number
9999 mem: location 1670 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1282
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1279 is 4
9999 mem: location 1282 is 5
9999 mem: storing 0 in location 1283
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1283 is 0
9998 run: jump-if fell through
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1278 is 1012
9999 mem: location 1279 is 4
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 211 -> 212
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1271
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 108 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 108 run: *row <- copy new-row
9999 mem: location 1271 is 4
9999 mem: location 1273 is 1015
9999 mem: storing 4 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: *column <- copy new-column
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 212 -> 211
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 211 -> 212
 107 run: clear-line-delimited screen, left, right
9999 mem: location 1278 is 1012
9999 mem: location 1280 is 0
9999 mem: location 1281 is 9
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 212 -> 213
 108 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1271
 108 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1272
 108 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1273
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 0
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 213 -> 214
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 40 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 91 -> 92
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 40
9999 mem: storing 1100 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1248 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1100
9999 mem: storing 32 in location 1100
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1248 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1101
9999 mem: storing 7 in location 1101
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 214 -> 213
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 213 -> 214
 108 run: column <- add column, 1
9999 mem: location 1271 is 0
9999 mem: storing 1 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 1
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 214 -> 215
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 41 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 92 -> 93
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 41
9999 mem: storing 1102 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1248 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1102
9999 mem: storing 32 in location 1102
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1248 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1103
9999 mem: storing 7 in location 1103
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 215 -> 214
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 214 -> 215
 108 run: column <- add column, 1
9999 mem: location 1271 is 1
9999 mem: storing 2 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 2
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 215 -> 216
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 42 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 93 -> 94
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 42
9999 mem: storing 1104 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1248 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1104
9999 mem: storing 32 in location 1104
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1248 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1105
9999 mem: storing 7 in location 1105
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 216 -> 215
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 215 -> 216
 108 run: column <- add column, 1
9999 mem: location 1271 is 2
9999 mem: storing 3 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 3
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 216 -> 217
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run1001/scenario-editor-can-undo-and-redo-delete
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 43 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 94 -> 95
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 43
9999 mem: storing 1106 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1248 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1106
9999 mem: storing 32 in location 1106
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1248 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1107
9999 mem: storing 7 in location 1107
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 217 -> 216
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 216 -> 217
 108 run: column <- add column, 1
9999 mem: location 1271 is 3
9999 mem: storing 4 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 4
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 217 -> 218
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 44 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 95 -> 96
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 44
9999 mem: storing 1108 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1248 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1108
9999 mem: storing 32 in location 1108
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1248 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1109
9999 mem: storing 7 in location 1109
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 218 -> 217
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 217 -> 218
 108 run: column <- add column, 1
9999 mem: location 1271 is 4
9999 mem: storing 5 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 5
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 218 -> 219
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 45 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 96 -> 97
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 45
9999 mem: storing 1110 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1248 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1110
9999 mem: storing 32 in location 1110
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1248 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1111
9999 mem: storing 7 in location 1111
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 219 -> 218
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 218 -> 219
 108 run: column <- add column, 1
9999 mem: location 1271 is 5
9999 mem: storing 6 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 6
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 219 -> 220
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 46 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 97 -> 98
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 46
9999 mem: storing 1112 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1248 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1112
9999 mem: storing 32 in location 1112
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1248 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1113
9999 mem: storing 7 in location 1113
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 220 -> 219
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 219 -> 220
 108 run: column <- add column, 1
9999 mem: location 1271 is 6
9999 mem: storing 7 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 7
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 220 -> 221
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 47 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 98 -> 99
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 47
9999 mem: storing 1114 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1248 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1114
9999 mem: storing 32 in location 1114
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1248 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1115
9999 mem: storing 7 in location 1115
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 221 -> 220
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 220 -> 221
 108 run: column <- add column, 1
9999 mem: location 1271 is 7
9999 mem: storing 8 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 8
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 221 -> 222
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 48 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 99 -> 100
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 48
9999 mem: storing 1116 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1248 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1116
9999 mem: storing 32 in location 1116
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1248 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1117
9999 mem: storing 7 in location 1117
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 222 -> 221
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 221 -> 222
 108 run: column <- add column, 1
9999 mem: location 1271 is 8
9999 mem: storing 9 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 9
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 222 -> 223
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 49 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 100 -> 101
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 49
9999 mem: storing 1118 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1248 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1118
9999 mem: storing 32 in location 1118
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1248 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1119
9999 mem: storing 7 in location 1119
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 223 -> 222
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 222 -> 223
 108 run: column <- add column, 1
9999 mem: location 1271 is 9
9999 mem: storing 10 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 10
9999 mem: location 1272 is 9
9999 mem: storing 1 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 1
9998 run: jumping to instruction 11
 108 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
 107 run: row <- add row, 1
9999 mem: location 1279 is 4
9999 mem: storing 5 in location 1279
 107 run: jump 
9998 run: jumping to instruction 9
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1279 is 5
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1283
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1283 is 1
9998 run: jumping to instruction 15
 107 run: reply screen:address:shared:screen
9999 mem: location 1278 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data
9999 mem: location 1163 is 1012
9999 mem: location 1164 is 1147
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 223 -> 222
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 222 -> 223
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1340
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 223 -> 224
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1223
 105 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 105 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 105 run: *column <- copy new-column
9999 mem: location 1223 is 1
9999 mem: location 1225 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 224 -> 223
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 223 -> 224
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1663
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1663 in location 1256
9999 mem: incrementing refcount of 1663: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1256 is 1663
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1663
9999 mem: skipping refcount at 1663
9999 mem: location 1664 is 1
9999 mem: location 1665 is 1657
9999 mem: location 1256 is 1663
9999 mem: skipping refcount at 1663
9998 run: address to copy is 1664
9999 mem: storing 1664 in location 1257
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1663
9999 mem: skipping refcount at 1663
9999 mem: location 1664 is 1
9999 mem: location 1665 is 1657
9999 mem: location 1256 is 1663
9999 mem: skipping refcount at 1663
9998 run: address to copy is 1665
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1665 is 1657
9999 mem: storing 1657 in location 1258
9999 mem: incrementing refcount of 1657: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1258 is 1657
9999 mem: skipping refcount at 1657
9999 mem: storing 1 in location 1259
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1664
9999 mem: location 1664 is 1
9999 mem: location 1259 is 1
9999 mem: storing 1 in location 1260
 105 run: jump-unless done?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1666 in location 1261
9999 mem: incrementing refcount of 1666: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1261 is 1666
9999 mem: skipping refcount at 1666
9999 mem: location 1667 is 0
9999 mem: location 1668 is 0
9999 mem: location 1669 is 0
9999 mem: location 1670 is 0
9999 mem: location 1256 is 1663
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1663
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1663: 3 -> 2
9999 mem: storing 1663 in location 1337
9999 mem: incrementing refcount of 1663: 2 -> 3
9999 mem: storing 1 in location 1345
9999 mem: storing 1 in location 1346
 104 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1346 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1336 is 1012
9999 mem: location 1337 is 1663
9999 mem: location 1338 is 1147
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 3
 102 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 4
 102 run: memory-should-contain [
    3 <- 1
    4 <- 1
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: screen-should-contain [
    .          .
    .adef      .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: assume-console [
    press ctrl-z
  ]
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"ctrl-z": <>}
9992 load: after rewriting: press ctrl-z
9999 mem: storing 'press' event starting at 1688
9999 mem: storing console in 1692
9999 mem: storing console data in 1694
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9991 parse: --- defining run1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 parse: recipe run1002 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1002
9991 transform: --- deduce types for recipe run1002
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1002
9991 transform: --- transform names for recipe run1002
9991 transform: --- resolve ambiguous calls for recipe run1002
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1002
9991 transform: --- transform braces for recipe run1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1002
9991 transform: --- type-check 'call' instructions inside recipe run1002
9991 transform: --- type-check calls inside recipe run1002
9991 transform: --- convert 'new' to 'allocate' for recipe run1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1692
9999 mem: location 2 is 1147
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 224 -> 225
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1692 in location 1337
9999 mem: incrementing refcount of 1692: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 39 -> 40
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1340
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 225 -> 226
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1223
 105 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 105 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 105 run: *column <- copy new-column
9999 mem: location 1223 is 1
9999 mem: location 1225 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 226 -> 225
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 225 -> 226
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1692
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1692 in location 1256
9999 mem: incrementing refcount of 1692: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1256 is 1692
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1692
9999 mem: skipping refcount at 1692
9999 mem: location 1693 is 0
9999 mem: location 1694 is 1686
9999 mem: location 1256 is 1692
9999 mem: skipping refcount at 1692
9998 run: address to copy is 1693
9999 mem: storing 1693 in location 1257
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1692
9999 mem: skipping refcount at 1692
9999 mem: location 1693 is 0
9999 mem: location 1694 is 1686
9999 mem: location 1256 is 1692
9999 mem: skipping refcount at 1692
9998 run: address to copy is 1694
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1694 is 1686
9999 mem: storing 1686 in location 1258
9999 mem: incrementing refcount of 1686: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1258 is 1686
9999 mem: skipping refcount at 1686
9999 mem: storing 1 in location 1259
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1693
9999 mem: location 1693 is 0
9999 mem: location 1259 is 1
9999 mem: storing 0 in location 1260
 105 run: jump-unless done?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1258 is 1686
9999 mem: skipping refcount at 1686
9998 run: base address is 1687
9999 mem: location 1257 is 1693
9999 mem: location 1693 is 0
9998 run: address to copy is 1688
9998 run: its type is event
9999 mem: location 1688 is 0
9999 mem: location 1689 is 26
9999 mem: location 1690 is 0
9999 mem: location 1691 is 0
9999 mem: storing 0 in location 1262
9999 mem: storing 26 in location 1263
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1257 is 1693
9999 mem: location 1693 is 0
9999 mem: location 1257 is 1693
9999 mem: storing 1 in location 1693
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1262 is 0
9999 mem: location 1263 is 26
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1256 is 1692
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 26, 0, 0]
9998 run: result 1 is 1692
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1341
9999 mem: storing 26 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1692: 2 -> 1
9999 mem: storing 1692 in location 1337
9999 mem: incrementing refcount of 1692: 1 -> 2
9999 mem: storing 1 in location 1345
9999 mem: storing 0 in location 1346
 104 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1341 is 0
9999 mem: location 1342 is 26
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1347
 104 run: jump-unless t, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1347 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 mem: location 1341 is 0
9999 mem: location 1342 is 26
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 226 -> 227
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 40 -> 41
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1354
9999 mem: storing 26 in location 1355
9999 mem: storing 0 in location 1356
9999 mem: storing 0 in location 1357
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1358
 105 run: jump-if editor, 1:offset
9999 mem: location 1353 is 1147
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1695
9999 mem: storing 3 in location 1696
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1698
9999 mem: incrementing refcount of 1012: 227 -> 228
 106 run: jump-unless screen, 
9999 mem: location 1698 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1698 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1698 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1699
 106 run: reply width:number
9999 mem: location 1699 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1359
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1698
9999 mem: incrementing refcount of 1012: 228 -> 229
 106 run: jump-unless screen, 
9999 mem: location 1698 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1698 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1698 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1699
 106 run: reply height:number
9999 mem: location 1699 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1360
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1361
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1362
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1363
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1364
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1365
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1366
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1367
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1354 is 0
9999 mem: location 1355 is 26
9999 mem: location 1356 is 0
9999 mem: location 1357 is 0
9999 mem: storing 1355 in location 1368
 105 run: jump-unless c, 
9999 mem: location 1368 is 1355
9998 run: jump-unless fell through
9990 schedule: handle-keyboard-event/editor-event-loop/run1002/scenario-editor-can-undo-and-redo-delete
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 26
9999 mem: storing 0 in location 1369
 105 run: jump-unless redo?, 
9999 mem: location 1369 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 26
9999 mem: storing 1 in location 1380
 105 run: jump-unless undo?, 
9999 mem: location 1380 is 1
9998 run: jump-unless fell through
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1633
9999 mem: location 1159 is 1671
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1372
 105 run: jump-unless *undo, 
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1633
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1633
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1633 in location 1698
9999 mem: incrementing refcount of 1633: 6 -> 7
 106 run: result <- get *in, value:offset
9999 mem: location 1698 is 1633
9999 mem: skipping refcount at 1633
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1634 is 1621
9999 mem: location 1635 is 1594
9999 mem: location 1698 is 1633
9999 mem: skipping refcount at 1633
9998 run: address to copy is 1634
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1634 is 1621
9999 mem: storing 1621 in location 1699
9999 mem: incrementing refcount of 1621: 5 -> 6
 106 run: reply result:_elem
9999 mem: location 1699 is 1621
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1621
9999 mem: storing 1621 in location 1371
9999 mem: incrementing refcount of 1621: 6 -> 7
 105 run: *undo <- rest_2 *undo
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1633
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1633 in location 1698
9999 mem: incrementing refcount of 1633: 7 -> 8
 106 run: result <- get *in, next:offset
9999 mem: location 1698 is 1633
9999 mem: skipping refcount at 1633
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1634 is 1621
9999 mem: location 1635 is 1594
9999 mem: location 1698 is 1633
9999 mem: skipping refcount at 1633
9999 type: type deduced to be address$
9998 run: address to copy is 1635
9998 run: its type is <address : <shared : <list : <address : <shared : <operation : <>>>>>>>
9999 mem: location 1635 is 1594
9999 mem: storing 1594 in location 1699
9999 mem: incrementing refcount of 1594: 4 -> 5
 106 run: reply result:address:shared:list:_elem/contained-in:in
9999 mem: location 1699 is 1594
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1594
9999 mem: location 1372 is 1158
9999 mem: decrementing refcount of 1633: 8 -> 7
9999 mem: storing 1594 in location 1158
9999 mem: incrementing refcount of 1594: 5 -> 6
 105 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1671
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1370
 105 run: *redo <- push_4 op, *redo
9999 mem: location 1371 is 1621
9999 mem: location 1370 is 1159
9999 mem: location 1159 is 1671
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1621 in location 1221
9999 mem: incrementing refcount of 1621: 7 -> 8
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1671 in location 1222
9999 mem: incrementing refcount of 1671: 2 -> 3
 106 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1700
9999 mem: storing 1700 in location 1223
9999 mem: incrementing refcount of 1700: 0 -> 1
 106 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1223 is 1700
9999 mem: skipping refcount at 1700
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1701 is 0
9999 mem: location 1702 is 0
9999 mem: location 1223 is 1700
9999 mem: skipping refcount at 1700
9998 run: address to copy is 1701
9999 mem: storing 1701 in location 1224
 106 run: *val <- copy x
9999 mem: location 1221 is 1621
9999 mem: location 1224 is 1701
9999 mem: storing 1621 in location 1701
9999 mem: incrementing refcount of 1621: 8 -> 9
 106 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1223 is 1700
9999 mem: skipping refcount at 1700
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1701 is 1621
9999 mem: location 1702 is 0
9999 mem: location 1223 is 1700
9999 mem: skipping refcount at 1700
9999 type: type deduced to be address$
9998 run: address to copy is 1702
9999 mem: storing 1702 in location 1225
 106 run: *next <- copy in
9999 mem: location 1222 is 1671
9999 mem: location 1225 is 1702
9999 mem: storing 1671 in location 1702
9999 mem: incrementing refcount of 1671: 3 -> 4
 106 run: reply result
9999 mem: location 1223 is 1700
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1700
9999 mem: location 1370 is 1159
9999 mem: decrementing refcount of 1671: 4 -> 3
9999 mem: storing 1700 in location 1159
9999 mem: incrementing refcount of 1700: 1 -> 2
 105 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1371 is 1621
9999 mem: skipping refcount at 1621
9999 mem: location 1622 is 2
9999 mem: location 1623 is 1
9999 mem: location 1624 is 2
9999 mem: location 1625 is 1169
9999 mem: location 1626 is 1
9999 mem: location 1627 is 1
9999 mem: location 1628 is 1169
9999 mem: location 1629 is 1483
9999 mem: location 1630 is 1469
9999 mem: location 1631 is 1491
9999 mem: location 1632 is 1
9999 mem: location 1371 is 1621
9999 mem: skipping refcount at 1621
9999 mem: storing 1623 in location 1373
 105 run: jump-unless deletion, 
9999 mem: location 1373 is 1623
9998 run: jump-unless fell through
 105 run: start2:address:address:shared:duplex-list:character <- get-address *editor, data:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1381
 105 run: anchor:address:shared:duplex-list:character <- get *deletion, delete-from:offset
9999 mem: location 1373 is 1623
9999 mem: location 1623 is 1
9999 mem: location 1624 is 2
9999 mem: location 1625 is 1169
9999 mem: location 1626 is 1
9999 mem: location 1627 is 1
9999 mem: location 1628 is 1169
9999 mem: location 1629 is 1483
9999 mem: location 1630 is 1469
9999 mem: location 1631 is 1491
9999 mem: location 1632 is 1
9999 mem: location 1373 is 1623
9998 run: address to copy is 1630
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1630 is 1469
9999 mem: storing 1469 in location 1382
9999 mem: incrementing refcount of 1469: 36 -> 37
 105 run: jump-unless anchor, 
9999 mem: location 1382 is 1469
9998 run: jump-unless fell through
 105 run: deleted:address:shared:duplex-list:character <- get *deletion, deleted-text:offset
9999 mem: location 1373 is 1623
9999 mem: location 1623 is 1
9999 mem: location 1624 is 2
9999 mem: location 1625 is 1169
9999 mem: location 1626 is 1
9999 mem: location 1627 is 1
9999 mem: location 1628 is 1169
9999 mem: location 1629 is 1483
9999 mem: location 1630 is 1469
9999 mem: location 1631 is 1491
9999 mem: location 1632 is 1
9999 mem: location 1373 is 1623
9998 run: address to copy is 1629
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1629 is 1483
9999 mem: storing 1483 in location 1383
9999 mem: incrementing refcount of 1483: 20 -> 21
 105 run: old-cursor:address:shared:duplex-list:character <- last_2 deleted
9999 mem: location 1383 is 1483
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1654
9999 mem: incrementing refcount of 1483: 21 -> 22
 106 run: result <- copy in
9999 mem: location 1654 is 1483
9999 mem: storing 1483 in location 1655
9999 mem: incrementing refcount of 1483: 22 -> 23
 106 run: next:address:shared:duplex-list:_elem <- next_2 result
9999 mem: location 1655 is 1483
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1698
9999 mem: incrementing refcount of 1483: 23 -> 24
 107 run: jump-if in, 1:offset
9999 mem: location 1698 is 1483
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1698 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 0
9999 mem: location 1486 is 0
9999 mem: location 1698 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1485 is 0
9999 mem: storing 0 in location 1699
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1699 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1656
 106 run: jump-unless next, 
9999 mem: location 1656 is 0
9998 run: jumping to instruction 8
 106 run: reply result:address:shared:duplex-list:_elem
9999 mem: location 1655 is 1483
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1483
9999 mem: storing 1483 in location 1384
9999 mem: incrementing refcount of 1483: 24 -> 25
 105 run: insert-range_2 anchor, deleted
9999 mem: location 1382 is 1469
9999 mem: location 1383 is 1483
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1221
9999 mem: incrementing refcount of 1469: 37 -> 38
 106 run: start:address:shared:duplex-list:_elem/contained-in:in <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1222
9999 mem: incrementing refcount of 1483: 25 -> 26
 106 run: jump-if in, 1:offset
9999 mem: location 1221 is 1469
9998 run: jumping to instruction 5
 106 run: jump-if start, 1:offset
9999 mem: location 1222 is 1483
9998 run: jumping to instruction 7
 106 run: end:address:shared:duplex-list:_elem <- copy start
9999 mem: location 1222 is 1483
9999 mem: storing 1483 in location 1223
9999 mem: incrementing refcount of 1483: 26 -> 27
 106 run: next:address:shared:duplex-list:_elem <- next_2 end/insert-range
9999 mem: location 1223 is 1483
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1698
9999 mem: incrementing refcount of 1483: 27 -> 28
 107 run: jump-if in, 1:offset
9999 mem: location 1698 is 1483
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1698 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 0
9999 mem: location 1486 is 0
9999 mem: location 1698 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1485 is 0
9999 mem: storing 0 in location 1699
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1699 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1224
 106 run: jump-unless next, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 13
 106 run: next:address:shared:duplex-list:_elem <- next_2 in
9999 mem: location 1221 is 1469
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1698
9999 mem: incrementing refcount of 1469: 38 -> 39
 107 run: jump-if in, 1:offset
9999 mem: location 1698 is 1469
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1698 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1491
9999 mem: location 1472 is 1169
9999 mem: location 1698 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1491
9999 mem: storing 1491 in location 1699
9999 mem: incrementing refcount of 1491: 41 -> 42
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1699 is 1491
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1491
9999 mem: storing 1491 in location 1224
9999 mem: incrementing refcount of 1491: 42 -> 43
 106 run: dest:address:address:shared:duplex-list:_elem <- get-address *end, next:offset
9999 mem: location 1223 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 0
9999 mem: location 1486 is 0
9999 mem: location 1223 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9999 mem: storing 1485 in location 1225
 106 run: *dest <- copy next
9999 mem: location 1224 is 1491
9999 mem: location 1225 is 1485
9999 mem: storing 1491 in location 1485
9999 mem: incrementing refcount of 1491: 43 -> 44
 106 run: jump-unless next, 
9999 mem: location 1224 is 1491
9998 run: jump-unless fell through
 106 run: dest <- get-address *next, prev:offset
9999 mem: location 1224 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1469
9999 mem: location 1224 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1494
9999 mem: storing 1494 in location 1225
 106 run: *dest <- copy end
9999 mem: location 1223 is 1483
9999 mem: location 1225 is 1494
9999 mem: decrementing refcount of 1469: 39 -> 38
9999 mem: storing 1483 in location 1494
9999 mem: incrementing refcount of 1483: 28 -> 29
 106 run: dest <- get-address *in, next:offset
9999 mem: location 1221 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1491
9999 mem: location 1472 is 1169
9999 mem: location 1221 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9999 mem: storing 1471 in location 1225
 106 run: *dest <- copy start
9999 mem: location 1222 is 1483
9999 mem: location 1225 is 1471
9999 mem: decrementing refcount of 1491: 44 -> 43
9999 mem: storing 1483 in location 1471
9999 mem: incrementing refcount of 1483: 29 -> 30
 106 run: dest <- get-address *start, prev:offset
9999 mem: location 1222 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1491
9999 mem: location 1486 is 0
9999 mem: location 1222 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1486
9999 mem: storing 1486 in location 1225
 106 run: *dest <- copy in
9999 mem: location 1221 is 1469
9999 mem: location 1225 is 1486
9999 mem: storing 1469 in location 1486
9999 mem: incrementing refcount of 1469: 38 -> 39
 106 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1221 is 1469
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: *before-cursor <- copy old-cursor
9999 mem: location 1384 is 1483
9999 mem: location 1363 is 1151
9999 mem: decrementing refcount of 1469: 39 -> 38
9999 mem: storing 1483 in location 1151
9999 mem: incrementing refcount of 1483: 30 -> 31
 105 run: *cursor-row <- get *deletion, before-row:offset
9999 mem: location 1373 is 1623
9999 mem: location 1623 is 1
9999 mem: location 1624 is 2
9999 mem: location 1625 is 1169
9999 mem: location 1626 is 1
9999 mem: location 1627 is 1
9999 mem: location 1628 is 1169
9999 mem: location 1629 is 1483
9999 mem: location 1630 is 1469
9999 mem: location 1631 is 1491
9999 mem: location 1632 is 1
9999 mem: location 1373 is 1623
9998 run: address to copy is 1623
9998 run: its type is number
9999 mem: location 1623 is 1
9999 mem: location 1364 is 1155
9999 mem: storing 1 in location 1155
 105 run: *cursor-column <- get *deletion, before-column:offset
9999 mem: location 1373 is 1623
9999 mem: location 1623 is 1
9999 mem: location 1624 is 2
9999 mem: location 1625 is 1169
9999 mem: location 1626 is 1
9999 mem: location 1627 is 1
9999 mem: location 1628 is 1169
9999 mem: location 1629 is 1483
9999 mem: location 1630 is 1469
9999 mem: location 1631 is 1491
9999 mem: location 1632 is 1
9999 mem: location 1373 is 1623
9998 run: address to copy is 1624
9998 run: its type is number
9999 mem: location 1624 is 2
9999 mem: location 1365 is 1156
9999 mem: storing 2 in location 1156
 105 run: top:address:address:shared:duplex-list:character <- get-address *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1376
 105 run: *top <- get *deletion, before-top-of-screen:offset
9999 mem: location 1373 is 1623
9999 mem: location 1623 is 1
9999 mem: location 1624 is 2
9999 mem: location 1625 is 1169
9999 mem: location 1626 is 1
9999 mem: location 1627 is 1
9999 mem: location 1628 is 1169
9999 mem: location 1629 is 1483
9999 mem: location 1630 is 1469
9999 mem: location 1631 is 1491
9999 mem: location 1632 is 1
9999 mem: location 1373 is 1623
9998 run: address to copy is 1625
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1625 is 1169
9999 mem: location 1376 is 1149
9999 mem: decrementing refcount of 1169: 46 -> 45
9999 mem: storing 1169 in location 1149
9999 mem: incrementing refcount of 1169: 45 -> 46
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1371 is 1621
9999 mem: skipping refcount at 1621
9999 mem: location 1622 is 2
9999 mem: location 1623 is 1
9999 mem: location 1624 is 2
9999 mem: location 1625 is 1169
9999 mem: location 1626 is 1
9999 mem: location 1627 is 1
9999 mem: location 1628 is 1169
9999 mem: location 1629 is 1483
9999 mem: location 1630 is 1469
9999 mem: location 1631 is 1491
9999 mem: location 1632 is 1
9999 mem: location 1371 is 1621
9999 mem: skipping refcount at 1621
9999 mem: storing 0 in location 1377
 105 run: jump-unless move, 
9999 mem: location 1377 is 0
9998 run: jumping to instruction 94
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1371 is 1621
9999 mem: skipping refcount at 1621
9999 mem: location 1622 is 2
9999 mem: location 1623 is 1
9999 mem: location 1624 is 2
9999 mem: location 1625 is 1169
9999 mem: location 1626 is 1
9999 mem: location 1627 is 1
9999 mem: location 1628 is 1169
9999 mem: location 1629 is 1483
9999 mem: location 1630 is 1469
9999 mem: location 1631 is 1491
9999 mem: location 1632 is 1
9999 mem: location 1371 is 1621
9999 mem: skipping refcount at 1621
9999 mem: storing 0 in location 1378
 105 run: jump-unless typing, 
9999 mem: location 1378 is 0
9998 run: jumping to instruction 106
 105 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 1/go-render
9999 mem: location 1352 is 1012
9999 mem: location 1353 is 1147
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1012: 229 -> 228
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 228 -> 229
9999 mem: decrementing refcount of 1147: 41 -> 40
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 40 -> 41
9999 mem: storing 1 in location 1348
 104 run: jump-unless go-render?, 
9999 mem: location 1348 is 1
9998 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1163
9999 mem: incrementing refcount of 1012: 229 -> 230
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1164
9999 mem: incrementing refcount of 1147: 41 -> 42
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1165
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1166
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1163 is 1012
9999 mem: location 1164 is 1147
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 230 -> 231
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1187
9999 mem: incrementing refcount of 1147: 42 -> 43
 106 run: jump-if editor, 1:offset
9999 mem: location 1187 is 1147
9998 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1188
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1186 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1698
9999 mem: incrementing refcount of 1012: 231 -> 232
 107 run: jump-unless screen, 
9999 mem: location 1698 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1698 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1698 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1699
 107 run: reply height:number
9999 mem: location 1699 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1189
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1190
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1191
9999 mem: incrementing refcount of 1169: 46 -> 47
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1191 is 1169
9999 mem: storing 1169 in location 1192
9999 mem: incrementing refcount of 1169: 47 -> 48
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1169
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1698
9999 mem: incrementing refcount of 1169: 48 -> 49
 107 run: jump-if in, 1:offset
9999 mem: location 1698 is 1169
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1698 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 1469
9999 mem: location 1172 is 0
9999 mem: location 1698 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 1469
9999 mem: storing 1469 in location 1699
9999 mem: incrementing refcount of 1469: 38 -> 39
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1699 is 1469
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1469
9999 mem: decrementing refcount of 1169: 49 -> 48
9999 mem: storing 1469 in location 1191
9999 mem: incrementing refcount of 1469: 39 -> 40
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1193
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1194
 106 run: column:number <- copy left
9999 mem: location 1188 is 0
9999 mem: storing 0 in location 1195
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1196
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1197
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1198
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1186 is 1012
9999 mem: location 1194 is 1
9999 mem: location 1195 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 232 -> 233
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 107 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 107 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 107 run: *column <- copy new-column
9999 mem: location 1223 is 0
9999 mem: location 1225 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 233 -> 232
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 232 -> 233
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1469
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 0
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 0 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1483
9999 mem: location 1472 is 1169
9999 mem: location 1191 is 1469
9999 mem: skipping refcount at 1469
9998 run: address to copy is 1470
9998 run: its type is character
9999 mem: location 1470 is 97
9999 mem: storing 97 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 97
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 97
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 97
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 97
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 0
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 97
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 233 -> 234
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 97
  90 print-character: 97 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 97
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 101 -> 102
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 97
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 10
9999 mem: storing 1040 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1248 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 97
9999 mem: location 1249 is 1040
9999 mem: storing 97 in location 1040
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1248 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1041
9999 mem: storing 7 in location 1041
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1469
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1698
9999 mem: incrementing refcount of 1469: 40 -> 41
 107 run: jump-if in, 1:offset
9999 mem: location 1698 is 1469
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1698 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1483
9999 mem: location 1472 is 1169
9999 mem: location 1698 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1483
9999 mem: storing 1483 in location 1699
9999 mem: incrementing refcount of 1483: 31 -> 32
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1699 is 1483
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1483
9999 mem: decrementing refcount of 1469: 41 -> 40
9999 mem: storing 1483 in location 1191
9999 mem: incrementing refcount of 1483: 32 -> 33
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1169
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1698
9999 mem: incrementing refcount of 1169: 48 -> 49
 107 run: jump-if in, 1:offset
9999 mem: location 1698 is 1169
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1698 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 1469
9999 mem: location 1172 is 0
9999 mem: location 1698 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 1469
9999 mem: storing 1469 in location 1699
9999 mem: incrementing refcount of 1469: 40 -> 41
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1699 is 1469
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1469
9999 mem: decrementing refcount of 1169: 49 -> 48
9999 mem: storing 1469 in location 1192
9999 mem: incrementing refcount of 1469: 41 -> 42
 106 run: column <- add column, 1
9999 mem: location 1195 is 0
9999 mem: storing 1 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1483
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 1
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 0 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1491
9999 mem: location 1486 is 1469
9999 mem: location 1191 is 1483
9999 mem: skipping refcount at 1483
9998 run: address to copy is 1484
9998 run: its type is character
9999 mem: location 1484 is 98
9999 mem: storing 98 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 98
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 98
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 98
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 98
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 1
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 98
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 234 -> 235
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 98
  90 print-character: 98 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 98
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 102 -> 103
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 98
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 11
9999 mem: storing 1042 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 100
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 98
9999 mem: location 1249 is 1042
9999 mem: storing 98 in location 1042
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1043
9999 mem: storing 7 in location 1043
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1483
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1698
9999 mem: incrementing refcount of 1483: 33 -> 34
 107 run: jump-if in, 1:offset
9999 mem: location 1698 is 1483
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1698 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1491
9999 mem: location 1486 is 1469
9999 mem: location 1698 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1485 is 1491
9999 mem: storing 1491 in location 1699
9999 mem: incrementing refcount of 1491: 43 -> 44
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1699 is 1491
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1491
9999 mem: decrementing refcount of 1483: 34 -> 33
9999 mem: storing 1491 in location 1191
9999 mem: incrementing refcount of 1491: 44 -> 45
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1469
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1698
9999 mem: incrementing refcount of 1469: 42 -> 43
 107 run: jump-if in, 1:offset
9999 mem: location 1698 is 1469
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1698 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1483
9999 mem: location 1472 is 1169
9999 mem: location 1698 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1483
9999 mem: storing 1483 in location 1699
9999 mem: incrementing refcount of 1483: 33 -> 34
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1699 is 1483
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1483
9999 mem: decrementing refcount of 1469: 43 -> 42
9999 mem: storing 1483 in location 1192
9999 mem: incrementing refcount of 1483: 34 -> 35
 106 run: column <- add column, 1
9999 mem: location 1195 is 1
9999 mem: storing 2 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1491
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 2
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 1 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1192 is 1483
9999 mem: location 1198 is 1151
9999 mem: decrementing refcount of 1483: 35 -> 34
9999 mem: storing 1483 in location 1151
9999 mem: incrementing refcount of 1483: 34 -> 35
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1483
9999 mem: location 1191 is 1491
9999 mem: skipping refcount at 1491
9998 run: address to copy is 1492
9998 run: its type is character
9999 mem: location 1492 is 100
9999 mem: storing 100 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 100
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 100
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 100
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 2
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 100
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 235 -> 236
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 100
  90 print-character: 100 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 100
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 103 -> 104
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 100
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 12
9999 mem: storing 1044 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 101
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 100
9999 mem: location 1249 is 1044
9999 mem: storing 100 in location 1044
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 100
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1045
9999 mem: storing 7 in location 1045
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1491
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1698
9999 mem: incrementing refcount of 1491: 45 -> 46
 107 run: jump-if in, 1:offset
9999 mem: location 1698 is 1491
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1698 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1483
9999 mem: location 1698 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1493 is 1495
9999 mem: storing 1495 in location 1699
9999 mem: incrementing refcount of 1495: 37 -> 38
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1699 is 1495
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1495
9999 mem: decrementing refcount of 1491: 46 -> 45
9999 mem: storing 1495 in location 1191
9999 mem: incrementing refcount of 1495: 38 -> 39
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1483
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1698
9999 mem: incrementing refcount of 1483: 35 -> 36
 107 run: jump-if in, 1:offset
9999 mem: location 1698 is 1483
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1698 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1491
9999 mem: location 1486 is 1469
9999 mem: location 1698 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1485 is 1491
9999 mem: storing 1491 in location 1699
9999 mem: incrementing refcount of 1491: 45 -> 46
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1699 is 1491
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1491
9999 mem: decrementing refcount of 1483: 36 -> 35
9999 mem: storing 1491 in location 1192
9999 mem: incrementing refcount of 1491: 46 -> 47
 106 run: column <- add column, 1
9999 mem: location 1195 is 2
9999 mem: storing 3 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1495
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 3
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 0 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1191 is 1495
9999 mem: skipping refcount at 1495
9998 run: address to copy is 1496
9998 run: its type is character
9999 mem: location 1496 is 101
9999 mem: storing 101 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 101
9999 trace: incrementing callstack depth to 6
9990 schedule: get-color/render/editor-render/editor-event-loop/run1002/scenario-editor-can-undo-and-redo-delete
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 101
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 101
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 101
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 3
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 101
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 236 -> 237
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 101
  90 print-character: 101 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 104 -> 105
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 13
9999 mem: storing 1046 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1046
9999 mem: location 1046 is 102
9999 mem: location 1047 is 7
9999 mem: location 1248 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 101
9999 mem: location 1249 is 1046
9999 mem: storing 101 in location 1046
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1046
9999 mem: location 1046 is 101
9999 mem: location 1047 is 7
9999 mem: location 1248 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1047
9999 mem: storing 7 in location 1047
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1495
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1698
9999 mem: incrementing refcount of 1495: 39 -> 40
 107 run: jump-if in, 1:offset
9999 mem: location 1698 is 1495
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1698 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1698 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1497 is 1499
9999 mem: storing 1499 in location 1699
9999 mem: incrementing refcount of 1499: 26 -> 27
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1699 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1499
9999 mem: decrementing refcount of 1495: 40 -> 39
9999 mem: storing 1499 in location 1191
9999 mem: incrementing refcount of 1499: 27 -> 28
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1491
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1698
9999 mem: incrementing refcount of 1491: 47 -> 48
 107 run: jump-if in, 1:offset
9999 mem: location 1698 is 1491
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1698 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1483
9999 mem: location 1698 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1493 is 1495
9999 mem: storing 1495 in location 1699
9999 mem: incrementing refcount of 1495: 39 -> 40
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1699 is 1495
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1495
9999 mem: decrementing refcount of 1491: 48 -> 47
9999 mem: storing 1495 in location 1192
9999 mem: incrementing refcount of 1495: 40 -> 41
 106 run: column <- add column, 1
9999 mem: location 1195 is 3
9999 mem: storing 4 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1499
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 4
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 0 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1191 is 1499
9999 mem: skipping refcount at 1499
9998 run: address to copy is 1500
9998 run: its type is character
9999 mem: location 1500 is 102
9999 mem: storing 102 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 102
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 102
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 102
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 4
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 102
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 237 -> 238
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 102
  90 print-character: 102 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 105 -> 106
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 14
9999 mem: storing 1048 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1248 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 102
9999 mem: location 1249 is 1048
9999 mem: storing 102 in location 1048
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1048
9999 mem: location 1048 is 102
9999 mem: location 1049 is 7
9999 mem: location 1248 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1049
9999 mem: storing 7 in location 1049
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1499
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1499 in location 1698
9999 mem: incrementing refcount of 1499: 28 -> 29
 107 run: jump-if in, 1:offset
9999 mem: location 1698 is 1499
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1698 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1698 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1501
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1501 is 0
9999 mem: storing 0 in location 1699
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1699 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1499: 29 -> 28
9999 mem: storing 0 in location 1191
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1495
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1698
9999 mem: incrementing refcount of 1495: 41 -> 42
 107 run: jump-if in, 1:offset
9999 mem: location 1698 is 1495
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1698 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1698 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1497 is 1499
9999 mem: storing 1499 in location 1699
9999 mem: incrementing refcount of 1499: 28 -> 29
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1699 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1499
9999 mem: decrementing refcount of 1495: 42 -> 41
9999 mem: storing 1499 in location 1192
9999 mem: incrementing refcount of 1499: 29 -> 30
 106 run: column <- add column, 1
9999 mem: location 1195 is 4
9999 mem: storing 5 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 0
9998 run: jumping to instruction 68
 106 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1207
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1191 is 0
9999 mem: location 1207 is 1150
9999 mem: storing 0 in location 1150
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1195 is 5
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 0 in location 1208
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1200 is 1
9999 mem: location 1208 is 0
9999 mem: storing 0 in location 1209
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 0 in location 1210
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: storing 0 in location 1211
 106 run: jump-unless before-cursor?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 81
 106 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1212
 106 run: *bottom <- copy row
9999 mem: location 1194 is 1
9999 mem: location 1212 is 1154
9999 mem: storing 1 in location 1154
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1194 is 1
9999 mem: location 1195 is 5
9999 mem: location 1186 is 1012
9999 mem: location 1187 is 1147
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1
9998 run: result 1 is 5
9999 mem: storing 1 in location 1167
9999 mem: storing 5 in location 1168
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1163 is 1012
9999 mem: location 1168 is 5
9999 mem: location 1166 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 238 -> 239
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1222
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1223
 106 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1224
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 5
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 239 -> 240
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 106 -> 107
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 15
9999 mem: storing 1050 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1248 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1050
9999 mem: storing 32 in location 1050
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1248 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1051
9999 mem: storing 7 in location 1051
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 240 -> 239
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 239 -> 240
 106 run: column <- add column, 1
9999 mem: location 1222 is 5
9999 mem: storing 6 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 6
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 240 -> 241
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 107 -> 108
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 16
9999 mem: storing 1052 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1248 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1052
9999 mem: storing 32 in location 1052
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1248 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1053
9999 mem: storing 7 in location 1053
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 241 -> 240
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 240 -> 241
 106 run: column <- add column, 1
9999 mem: location 1222 is 6
9999 mem: storing 7 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 7
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 241 -> 242
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 108 -> 109
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 17
9999 mem: storing 1054 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1248 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1054
9999 mem: storing 32 in location 1054
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1248 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1055
9999 mem: storing 7 in location 1055
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 242 -> 241
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 241 -> 242
 106 run: column <- add column, 1
9999 mem: location 1222 is 7
9999 mem: storing 8 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 8
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 242 -> 243
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 109 -> 110
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 18
9999 mem: storing 1056 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1248 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1056
9999 mem: storing 32 in location 1056
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1248 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1057
9999 mem: storing 7 in location 1057
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 243 -> 242
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 242 -> 243
 106 run: column <- add column, 1
9999 mem: location 1222 is 8
9999 mem: storing 9 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 9
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 243 -> 244
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 110 -> 111
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run1002/scenario-editor-can-undo-and-redo-delete
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 19
9999 mem: storing 1058 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1248 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1058
9999 mem: storing 32 in location 1058
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1248 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1059
9999 mem: storing 7 in location 1059
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 244 -> 243
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 243 -> 244
 106 run: column <- add column, 1
9999 mem: location 1222 is 9
9999 mem: storing 10 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 10
9999 mem: location 1223 is 9
9999 mem: storing 1 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 1
9998 run: jumping to instruction 11
 106 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1163 is 1012
9999 mem: location 1167 is 2
9999 mem: location 1165 is 0
9999 mem: location 1166 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 244 -> 245
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1257
 106 run: x:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1258
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1259
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1260
9999 mem: storing 1 in location 1261
 106 run: jump-if style-found?, 
9999 mem: location 1261 is 1
9998 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1262
9999 mem: storing 0 in location 1263
 106 run: jump-if color-found?, 
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1262
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 106 run: jump-if bg-color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1264
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1256 is 1012
9999 mem: location 1257 is 2
9999 mem: location 1258 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 245 -> 246
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1222
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 107 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 107 run: *row <- copy new-row
9999 mem: location 1222 is 2
9999 mem: location 1224 is 1015
9999 mem: storing 2 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 107 run: *column <- copy new-column
9999 mem: location 1223 is 0
9999 mem: location 1225 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 246 -> 245
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 245 -> 246
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 0
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 246 -> 247
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 111 -> 112
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 20
9999 mem: storing 1060 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1248 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1060
9999 mem: storing 9480 in location 1060
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1248 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1061
9999 mem: storing 245 in location 1061
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 0
9999 mem: storing 1 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 1
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 247 -> 248
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 112 -> 113
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 21
9999 mem: storing 1062 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1248 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1062
9999 mem: storing 9480 in location 1062
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1248 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1063
9999 mem: storing 245 in location 1063
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 1
9999 mem: storing 2 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 2
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 248 -> 249
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 113 -> 114
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 22
9999 mem: storing 1064 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1248 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1064
9999 mem: storing 9480 in location 1064
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1248 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1065
9999 mem: storing 245 in location 1065
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 2
9999 mem: storing 3 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 3
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 249 -> 250
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 114 -> 115
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 23
9999 mem: storing 1066 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1248 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1066
9999 mem: storing 9480 in location 1066
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1248 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1067
9999 mem: storing 245 in location 1067
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 3
9999 mem: storing 4 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 4
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 250 -> 251
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 115 -> 116
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 24
9999 mem: storing 1068 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1248 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1068
9999 mem: storing 9480 in location 1068
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1248 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1069
9999 mem: storing 245 in location 1069
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 4
9999 mem: storing 5 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 5
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 251 -> 252
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 116 -> 117
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 25
9999 mem: storing 1070 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1248 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1070
9999 mem: storing 9480 in location 1070
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1248 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1071
9999 mem: storing 245 in location 1071
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 5
9999 mem: storing 6 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 6
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 252 -> 253
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 117 -> 118
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 26
9999 mem: storing 1072 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1248 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1072
9999 mem: storing 9480 in location 1072
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1248 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1073
9999 mem: storing 245 in location 1073
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 6
9999 mem: storing 7 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 7
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 253 -> 254
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 118 -> 119
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 27
9999 mem: storing 1074 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1248 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1074
9999 mem: storing 9480 in location 1074
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1248 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1075
9999 mem: storing 245 in location 1075
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 7
9999 mem: storing 8 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 8
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 254 -> 255
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run1002/scenario-editor-can-undo-and-redo-delete
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 119 -> 120
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 28
9999 mem: storing 1076 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1076
9999 mem: location 1076 is 9480
9999 mem: location 1077 is 245
9999 mem: location 1248 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1076
9999 mem: storing 9480 in location 1076
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1076
9999 mem: location 1076 is 9480
9999 mem: location 1077 is 245
9999 mem: location 1248 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1077
9999 mem: storing 245 in location 1077
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 8
9999 mem: storing 9 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 9
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 255 -> 256
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 120 -> 121
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 29
9999 mem: storing 1078 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1078
9999 mem: location 1078 is 9480
9999 mem: location 1079 is 245
9999 mem: location 1248 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1078
9999 mem: storing 9480 in location 1078
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1078
9999 mem: location 1078 is 9480
9999 mem: location 1079 is 245
9999 mem: location 1248 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1079
9999 mem: storing 245 in location 1079
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 9
9999 mem: storing 10 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 10
9999 mem: location 1259 is 9
9999 mem: storing 0 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 27
 106 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1163 is 1012
9999 mem: location 1167 is 3
9999 mem: location 1165 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 256 -> 257
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1222
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 106 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1224
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1225
 106 run: jump-if screen, 
9999 mem: location 1221 is 1012
9998 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1221 is 1012
9999 mem: location 1222 is 3
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 257 -> 258
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1271
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 107 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 107 run: *row <- copy new-row
9999 mem: location 1271 is 3
9999 mem: location 1273 is 1015
9999 mem: storing 3 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: *column <- copy new-column
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 258 -> 257
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 257 -> 258
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1221 is 1012
9999 mem: location 1223 is 0
9999 mem: location 1225 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 258 -> 259
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1271
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1272
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1273
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 0
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 259 -> 260
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 121 -> 122
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 30
9999 mem: storing 1080 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1248 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1080
9999 mem: storing 32 in location 1080
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1248 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1081
9999 mem: storing 7 in location 1081
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 260 -> 259
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 259 -> 260
 107 run: column <- add column, 1
9999 mem: location 1271 is 0
9999 mem: storing 1 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 1
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 260 -> 261
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 122 -> 123
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 31
9999 mem: storing 1082 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1248 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1082
9999 mem: storing 32 in location 1082
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1248 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1083
9999 mem: storing 7 in location 1083
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 261 -> 260
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 260 -> 261
 107 run: column <- add column, 1
9999 mem: location 1271 is 1
9999 mem: storing 2 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 2
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 261 -> 262
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 123 -> 124
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 32
9999 mem: storing 1084 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1248 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1084
9999 mem: storing 32 in location 1084
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1248 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1085
9999 mem: storing 7 in location 1085
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 262 -> 261
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 261 -> 262
 107 run: column <- add column, 1
9999 mem: location 1271 is 2
9999 mem: storing 3 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 3
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 262 -> 263
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 33 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 124 -> 125
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 33
9999 mem: storing 1086 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1248 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1086
9999 mem: storing 32 in location 1086
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1248 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1087
9999 mem: storing 7 in location 1087
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 263 -> 262
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 262 -> 263
 107 run: column <- add column, 1
9999 mem: location 1271 is 3
9999 mem: storing 4 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 4
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 263 -> 264
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 34 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 125 -> 126
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 34
9999 mem: storing 1088 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1248 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1088
9999 mem: storing 32 in location 1088
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1248 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1089
9999 mem: storing 7 in location 1089
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 264 -> 263
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 263 -> 264
 107 run: column <- add column, 1
9999 mem: location 1271 is 4
9999 mem: storing 5 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 5
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 264 -> 265
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 35 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 126 -> 127
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 35
9999 mem: storing 1090 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1248 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1090
9999 mem: storing 32 in location 1090
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1248 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1091
9999 mem: storing 7 in location 1091
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 265 -> 264
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 264 -> 265
 107 run: column <- add column, 1
9999 mem: location 1271 is 5
9999 mem: storing 6 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 6
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 265 -> 266
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run1002/scenario-editor-can-undo-and-redo-delete
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 36 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 127 -> 128
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 36
9999 mem: storing 1092 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1248 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1092
9999 mem: storing 32 in location 1092
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1248 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1093
9999 mem: storing 7 in location 1093
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 266 -> 265
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 265 -> 266
 107 run: column <- add column, 1
9999 mem: location 1271 is 6
9999 mem: storing 7 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 7
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 266 -> 267
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 37 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 128 -> 129
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 37
9999 mem: storing 1094 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1248 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1094
9999 mem: storing 32 in location 1094
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1248 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1095
9999 mem: storing 7 in location 1095
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 267 -> 266
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 266 -> 267
 107 run: column <- add column, 1
9999 mem: location 1271 is 7
9999 mem: storing 8 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 8
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 267 -> 268
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 38 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 129 -> 130
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 38
9999 mem: storing 1096 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1248 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1096
9999 mem: storing 32 in location 1096
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1248 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1097
9999 mem: storing 7 in location 1097
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 268 -> 267
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 267 -> 268
 107 run: column <- add column, 1
9999 mem: location 1271 is 8
9999 mem: storing 9 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 9
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 268 -> 269
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 39 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 130 -> 131
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 39
9999 mem: storing 1098 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1248 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1098
9999 mem: storing 32 in location 1098
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1248 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1099
9999 mem: storing 7 in location 1099
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 269 -> 268
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 268 -> 269
 107 run: column <- add column, 1
9999 mem: location 1271 is 9
9999 mem: storing 10 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 10
9999 mem: location 1272 is 9
9999 mem: storing 1 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 1
9998 run: jumping to instruction 11
 107 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1221 is 1012
9999 mem: location 1222 is 3
9999 mem: location 1224 is 0
9999 mem: location 1225 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 269 -> 270
 107 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1279
 107 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1280
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1281
 107 run: row <- add row, 1
9999 mem: location 1279 is 3
9999 mem: storing 4 in location 1279
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1278 is 1012
9999 mem: location 1279 is 4
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 270 -> 271
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1271
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 108 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 108 run: *row <- copy new-row
9999 mem: location 1271 is 4
9999 mem: location 1273 is 1015
9999 mem: storing 4 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: *column <- copy new-column
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 271 -> 270
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 270 -> 271
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1278 is 1012
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1698
9999 mem: incrementing refcount of 1012: 271 -> 272
 108 run: jump-unless screen, 
9999 mem: location 1698 is 1012
9998 run: jump-unless fell through
 108 run: height <- get *screen, num-rows:offset
9999 mem: location 1698 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1698 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1699
 108 run: reply height:number
9999 mem: location 1699 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1282
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1279 is 4
9999 mem: location 1282 is 5
9999 mem: storing 0 in location 1283
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1283 is 0
9998 run: jump-if fell through
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1278 is 1012
9999 mem: location 1279 is 4
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 272 -> 273
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1271
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 108 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 108 run: *row <- copy new-row
9999 mem: location 1271 is 4
9999 mem: location 1273 is 1015
9999 mem: storing 4 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: *column <- copy new-column
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 273 -> 272
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 272 -> 273
 107 run: clear-line-delimited screen, left, right
9999 mem: location 1278 is 1012
9999 mem: location 1280 is 0
9999 mem: location 1281 is 9
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 273 -> 274
 108 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1271
 108 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1272
 108 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1273
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 0
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 274 -> 275
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 40 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 131 -> 132
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 40
9999 mem: storing 1100 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1248 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1100
9999 mem: storing 32 in location 1100
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1248 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1101
9999 mem: storing 7 in location 1101
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 275 -> 274
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 274 -> 275
 108 run: column <- add column, 1
9999 mem: location 1271 is 0
9999 mem: storing 1 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 1
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 275 -> 276
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 41 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 132 -> 133
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 41
9999 mem: storing 1102 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1248 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1102
9999 mem: storing 32 in location 1102
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1248 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1103
9999 mem: storing 7 in location 1103
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 276 -> 275
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 275 -> 276
 108 run: column <- add column, 1
9999 mem: location 1271 is 1
9999 mem: storing 2 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 2
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 276 -> 277
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 42 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 133 -> 134
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 42
9999 mem: storing 1104 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1248 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1104
9999 mem: storing 32 in location 1104
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1248 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1105
9999 mem: storing 7 in location 1105
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 277 -> 276
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 276 -> 277
 108 run: column <- add column, 1
9999 mem: location 1271 is 2
9999 mem: storing 3 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 3
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 277 -> 278
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 43 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 134 -> 135
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 43
9999 mem: storing 1106 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1248 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1106
9999 mem: storing 32 in location 1106
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1248 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1107
9999 mem: storing 7 in location 1107
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 278 -> 277
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 277 -> 278
 108 run: column <- add column, 1
9999 mem: location 1271 is 3
9999 mem: storing 4 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 4
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 278 -> 279
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run1002/scenario-editor-can-undo-and-redo-delete
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 44 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 135 -> 136
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 44
9999 mem: storing 1108 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1248 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1108
9999 mem: storing 32 in location 1108
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1248 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1109
9999 mem: storing 7 in location 1109
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 279 -> 278
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 278 -> 279
 108 run: column <- add column, 1
9999 mem: location 1271 is 4
9999 mem: storing 5 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 5
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 279 -> 280
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 45 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 136 -> 137
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 45
9999 mem: storing 1110 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1248 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1110
9999 mem: storing 32 in location 1110
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1248 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1111
9999 mem: storing 7 in location 1111
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 280 -> 279
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 279 -> 280
 108 run: column <- add column, 1
9999 mem: location 1271 is 5
9999 mem: storing 6 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 6
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 280 -> 281
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 46 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 137 -> 138
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 46
9999 mem: storing 1112 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1248 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1112
9999 mem: storing 32 in location 1112
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1248 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1113
9999 mem: storing 7 in location 1113
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 281 -> 280
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 280 -> 281
 108 run: column <- add column, 1
9999 mem: location 1271 is 6
9999 mem: storing 7 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 7
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 281 -> 282
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 47 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 138 -> 139
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 47
9999 mem: storing 1114 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1248 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1114
9999 mem: storing 32 in location 1114
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1248 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1115
9999 mem: storing 7 in location 1115
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 282 -> 281
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 281 -> 282
 108 run: column <- add column, 1
9999 mem: location 1271 is 7
9999 mem: storing 8 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 8
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 282 -> 283
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 48 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 139 -> 140
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 48
9999 mem: storing 1116 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1248 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1116
9999 mem: storing 32 in location 1116
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1248 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1117
9999 mem: storing 7 in location 1117
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 283 -> 282
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 282 -> 283
 108 run: column <- add column, 1
9999 mem: location 1271 is 8
9999 mem: storing 9 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 9
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 283 -> 284
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 49 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 140 -> 141
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 49
9999 mem: storing 1118 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1248 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1118
9999 mem: storing 32 in location 1118
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1248 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1119
9999 mem: storing 7 in location 1119
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 284 -> 283
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 283 -> 284
 108 run: column <- add column, 1
9999 mem: location 1271 is 9
9999 mem: storing 10 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 10
9999 mem: location 1272 is 9
9999 mem: storing 1 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 1
9998 run: jumping to instruction 11
 108 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
 107 run: row <- add row, 1
9999 mem: location 1279 is 4
9999 mem: storing 5 in location 1279
 107 run: jump 
9998 run: jumping to instruction 9
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1279 is 5
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1283
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1283 is 1
9998 run: jumping to instruction 15
 107 run: reply screen:address:shared:screen
9999 mem: location 1278 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data
9999 mem: location 1163 is 1012
9999 mem: location 1164 is 1147
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 284 -> 283
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 283 -> 284
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1340
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 284 -> 285
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1223
 105 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 105 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 105 run: *column <- copy new-column
9999 mem: location 1223 is 2
9999 mem: location 1225 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 285 -> 284
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 284 -> 285
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1692
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1692 in location 1256
9999 mem: incrementing refcount of 1692: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1256 is 1692
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1692
9999 mem: skipping refcount at 1692
9999 mem: location 1693 is 1
9999 mem: location 1694 is 1686
9999 mem: location 1256 is 1692
9999 mem: skipping refcount at 1692
9998 run: address to copy is 1693
9999 mem: storing 1693 in location 1257
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1692
9999 mem: skipping refcount at 1692
9999 mem: location 1693 is 1
9999 mem: location 1694 is 1686
9999 mem: location 1256 is 1692
9999 mem: skipping refcount at 1692
9998 run: address to copy is 1694
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1694 is 1686
9999 mem: storing 1686 in location 1258
9999 mem: incrementing refcount of 1686: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1258 is 1686
9999 mem: skipping refcount at 1686
9999 mem: storing 1 in location 1259
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1693
9999 mem: location 1693 is 1
9999 mem: location 1259 is 1
9999 mem: storing 1 in location 1260
 105 run: jump-unless done?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1695 in location 1261
9999 mem: incrementing refcount of 1695: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1261 is 1695
9999 mem: skipping refcount at 1695
9999 mem: location 1696 is 0
9999 mem: location 1697 is 0
9999 mem: location 1698 is 0
9999 mem: location 1699 is 0
9999 mem: location 1256 is 1692
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1692
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1692: 3 -> 2
9999 mem: storing 1692 in location 1337
9999 mem: incrementing refcount of 1692: 2 -> 3
9999 mem: storing 1 in location 1345
9999 mem: storing 1 in location 1346
 104 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1346 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1336 is 1012
9999 mem: location 1337 is 1692
9999 mem: location 1338 is 1147
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 3
 102 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 4
 102 run: memory-should-contain [
    3 <- 1
    4 <- 2
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: screen-should-contain [
    .          .
    .abdef     .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: assume-console [
    press ctrl-z
  ]
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"ctrl-z": <>}
9992 load: after rewriting: press ctrl-z
9999 mem: storing 'press' event starting at 1705
9999 mem: storing console in 1709
9999 mem: storing console data in 1711
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9991 parse: --- defining run1003
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 parse: recipe run1003 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1003
9991 transform: --- deduce types for recipe run1003
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1003
9991 transform: --- transform names for recipe run1003
9991 transform: --- resolve ambiguous calls for recipe run1003
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1003
9991 transform: --- transform braces for recipe run1003
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1003
9991 transform: --- type-check 'call' instructions inside recipe run1003
9991 transform: --- type-check calls inside recipe run1003
9991 transform: --- convert 'new' to 'allocate' for recipe run1003
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1709
9999 mem: location 2 is 1147
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 285 -> 286
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1709 in location 1337
9999 mem: incrementing refcount of 1709: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 43 -> 44
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1340
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 286 -> 287
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1223
 105 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 105 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 105 run: *column <- copy new-column
9999 mem: location 1223 is 2
9999 mem: location 1225 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 287 -> 286
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 286 -> 287
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1709
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1709 in location 1256
9999 mem: incrementing refcount of 1709: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1256 is 1709
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1709
9999 mem: skipping refcount at 1709
9999 mem: location 1710 is 0
9999 mem: location 1711 is 1703
9999 mem: location 1256 is 1709
9999 mem: skipping refcount at 1709
9998 run: address to copy is 1710
9999 mem: storing 1710 in location 1257
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1709
9999 mem: skipping refcount at 1709
9999 mem: location 1710 is 0
9999 mem: location 1711 is 1703
9999 mem: location 1256 is 1709
9999 mem: skipping refcount at 1709
9998 run: address to copy is 1711
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1711 is 1703
9999 mem: storing 1703 in location 1258
9999 mem: incrementing refcount of 1703: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1258 is 1703
9999 mem: skipping refcount at 1703
9999 mem: storing 1 in location 1259
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1710
9999 mem: location 1710 is 0
9999 mem: location 1259 is 1
9999 mem: storing 0 in location 1260
 105 run: jump-unless done?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1258 is 1703
9999 mem: skipping refcount at 1703
9998 run: base address is 1704
9999 mem: location 1257 is 1710
9999 mem: location 1710 is 0
9998 run: address to copy is 1705
9998 run: its type is event
9999 mem: location 1705 is 0
9999 mem: location 1706 is 26
9999 mem: location 1707 is 0
9999 mem: location 1708 is 0
9999 mem: storing 0 in location 1262
9999 mem: storing 26 in location 1263
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1257 is 1710
9999 mem: location 1710 is 0
9999 mem: location 1257 is 1710
9999 mem: storing 1 in location 1710
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1262 is 0
9999 mem: location 1263 is 26
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1256 is 1709
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 26, 0, 0]
9998 run: result 1 is 1709
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1341
9999 mem: storing 26 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1709: 2 -> 1
9999 mem: storing 1709 in location 1337
9999 mem: incrementing refcount of 1709: 1 -> 2
9999 mem: storing 1 in location 1345
9999 mem: storing 0 in location 1346
 104 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1341 is 0
9999 mem: location 1342 is 26
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1347
 104 run: jump-unless t, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1347 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 mem: location 1341 is 0
9999 mem: location 1342 is 26
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 287 -> 288
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 44 -> 45
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1354
9999 mem: storing 26 in location 1355
9999 mem: storing 0 in location 1356
9999 mem: storing 0 in location 1357
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1358
 105 run: jump-if editor, 1:offset
9999 mem: location 1353 is 1147
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1712
9999 mem: storing 3 in location 1713
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1715
9999 mem: incrementing refcount of 1012: 288 -> 289
 106 run: jump-unless screen, 
9999 mem: location 1715 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1715 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1715 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1716
 106 run: reply width:number
9999 mem: location 1716 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1359
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1715
9999 mem: incrementing refcount of 1012: 289 -> 290
 106 run: jump-unless screen, 
9999 mem: location 1715 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1715 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1715 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1716
 106 run: reply height:number
9999 mem: location 1716 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1360
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1361
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1362
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1363
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1364
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1365
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1366
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1367
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1354 is 0
9999 mem: location 1355 is 26
9999 mem: location 1356 is 0
9999 mem: location 1357 is 0
9999 mem: storing 1355 in location 1368
 105 run: jump-unless c, 
9999 mem: location 1368 is 1355
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 26
9999 mem: storing 0 in location 1369
 105 run: jump-unless redo?, 
9999 mem: location 1369 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 26
9999 mem: storing 1 in location 1380
 105 run: jump-unless undo?, 
9999 mem: location 1380 is 1
9998 run: jump-unless fell through
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1594
9999 mem: location 1159 is 1700
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1372
 105 run: jump-unless *undo, 
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1594
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1594
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1594 in location 1715
9999 mem: incrementing refcount of 1594: 6 -> 7
 106 run: result <- get *in, value:offset
9999 mem: location 1715 is 1594
9999 mem: skipping refcount at 1594
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1595 is 1582
9999 mem: location 1596 is 1560
9999 mem: location 1715 is 1594
9999 mem: skipping refcount at 1594
9998 run: address to copy is 1595
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1595 is 1582
9999 mem: storing 1582 in location 1716
9999 mem: incrementing refcount of 1582: 5 -> 6
 106 run: reply result:_elem
9999 mem: location 1716 is 1582
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1582
9999 mem: storing 1582 in location 1371
9999 mem: incrementing refcount of 1582: 6 -> 7
 105 run: *undo <- rest_2 *undo
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1594
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1594 in location 1715
9999 mem: incrementing refcount of 1594: 7 -> 8
 106 run: result <- get *in, next:offset
9999 mem: location 1715 is 1594
9999 mem: skipping refcount at 1594
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1595 is 1582
9999 mem: location 1596 is 1560
9999 mem: location 1715 is 1594
9999 mem: skipping refcount at 1594
9999 type: type deduced to be address$
9998 run: address to copy is 1596
9998 run: its type is <address : <shared : <list : <address : <shared : <operation : <>>>>>>>
9999 mem: location 1596 is 1560
9999 mem: storing 1560 in location 1716
9999 mem: incrementing refcount of 1560: 4 -> 5
 106 run: reply result:address:shared:list:_elem/contained-in:in
9999 mem: location 1716 is 1560
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1560
9999 mem: location 1372 is 1158
9999 mem: decrementing refcount of 1594: 8 -> 7
9999 mem: storing 1560 in location 1158
9999 mem: incrementing refcount of 1560: 5 -> 6
 105 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1700
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1370
 105 run: *redo <- push_4 op, *redo
9999 mem: location 1371 is 1582
9999 mem: location 1370 is 1159
9999 mem: location 1159 is 1700
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1582 in location 1221
9999 mem: incrementing refcount of 1582: 7 -> 8
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1700 in location 1222
9999 mem: incrementing refcount of 1700: 2 -> 3
 106 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1717
9999 mem: storing 1717 in location 1223
9999 mem: incrementing refcount of 1717: 0 -> 1
 106 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1223 is 1717
9999 mem: skipping refcount at 1717
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1718 is 0
9999 mem: location 1719 is 0
9999 mem: location 1223 is 1717
9999 mem: skipping refcount at 1717
9998 run: address to copy is 1718
9999 mem: storing 1718 in location 1224
 106 run: *val <- copy x
9999 mem: location 1221 is 1582
9999 mem: location 1224 is 1718
9999 mem: storing 1582 in location 1718
9999 mem: incrementing refcount of 1582: 8 -> 9
 106 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1223 is 1717
9999 mem: skipping refcount at 1717
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1718 is 1582
9999 mem: location 1719 is 0
9999 mem: location 1223 is 1717
9999 mem: skipping refcount at 1717
9999 type: type deduced to be address$
9998 run: address to copy is 1719
9999 mem: storing 1719 in location 1225
 106 run: *next <- copy in
9999 mem: location 1222 is 1700
9999 mem: location 1225 is 1719
9999 mem: storing 1700 in location 1719
9999 mem: incrementing refcount of 1700: 3 -> 4
 106 run: reply result
9999 mem: location 1223 is 1717
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1717
9999 mem: location 1370 is 1159
9999 mem: decrementing refcount of 1700: 4 -> 3
9999 mem: storing 1717 in location 1159
9999 mem: incrementing refcount of 1717: 1 -> 2
 105 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1371 is 1582
9999 mem: skipping refcount at 1582
9999 mem: location 1583 is 2
9999 mem: location 1584 is 1
9999 mem: location 1585 is 2
9999 mem: location 1586 is 1169
9999 mem: location 1587 is 1
9999 mem: location 1588 is 2
9999 mem: location 1589 is 1169
9999 mem: location 1590 is 1487
9999 mem: location 1591 is 1483
9999 mem: location 1592 is 1491
9999 mem: location 1593 is 2
9999 mem: location 1371 is 1582
9999 mem: skipping refcount at 1582
9999 mem: storing 1584 in location 1373
 105 run: jump-unless deletion, 
9999 mem: location 1373 is 1584
9998 run: jump-unless fell through
 105 run: start2:address:address:shared:duplex-list:character <- get-address *editor, data:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1381
 105 run: anchor:address:shared:duplex-list:character <- get *deletion, delete-from:offset
9999 mem: location 1373 is 1584
9999 mem: location 1584 is 1
9999 mem: location 1585 is 2
9999 mem: location 1586 is 1169
9999 mem: location 1587 is 1
9999 mem: location 1588 is 2
9999 mem: location 1589 is 1169
9999 mem: location 1590 is 1487
9999 mem: location 1591 is 1483
9999 mem: location 1592 is 1491
9999 mem: location 1593 is 2
9999 mem: location 1373 is 1584
9998 run: address to copy is 1591
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1591 is 1483
9999 mem: storing 1483 in location 1382
9999 mem: incrementing refcount of 1483: 35 -> 36
 105 run: jump-unless anchor, 
9999 mem: location 1382 is 1483
9998 run: jump-unless fell through
 105 run: deleted:address:shared:duplex-list:character <- get *deletion, deleted-text:offset
9999 mem: location 1373 is 1584
9999 mem: location 1584 is 1
9999 mem: location 1585 is 2
9999 mem: location 1586 is 1169
9999 mem: location 1587 is 1
9999 mem: location 1588 is 2
9999 mem: location 1589 is 1169
9999 mem: location 1590 is 1487
9999 mem: location 1591 is 1483
9999 mem: location 1592 is 1491
9999 mem: location 1593 is 2
9999 mem: location 1373 is 1584
9998 run: address to copy is 1590
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1590 is 1487
9999 mem: storing 1487 in location 1383
9999 mem: incrementing refcount of 1487: 15 -> 16
 105 run: old-cursor:address:shared:duplex-list:character <- last_2 deleted
9999 mem: location 1383 is 1487
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1487 in location 1654
9999 mem: incrementing refcount of 1487: 16 -> 17
9990 schedule: last_2/handle-keyboard-event/editor-event-loop/run1003/scenario-editor-can-undo-and-redo-delete
 106 run: result <- copy in
9999 mem: location 1654 is 1487
9999 mem: storing 1487 in location 1655
9999 mem: incrementing refcount of 1487: 17 -> 18
 106 run: next:address:shared:duplex-list:_elem <- next_2 result
9999 mem: location 1655 is 1487
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1487 in location 1715
9999 mem: incrementing refcount of 1487: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1715 is 1487
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1715 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 0
9999 mem: location 1490 is 0
9999 mem: location 1715 is 1487
9999 mem: skipping refcount at 1487
9999 type: type deduced to be character$
9998 run: address to copy is 1489
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1489 is 0
9999 mem: storing 0 in location 1716
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1716 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1656
 106 run: jump-unless next, 
9999 mem: location 1656 is 0
9998 run: jumping to instruction 8
 106 run: reply result:address:shared:duplex-list:_elem
9999 mem: location 1655 is 1487
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1487
9999 mem: storing 1487 in location 1384
9999 mem: incrementing refcount of 1487: 19 -> 20
 105 run: insert-range_2 anchor, deleted
9999 mem: location 1382 is 1483
9999 mem: location 1383 is 1487
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1221
9999 mem: incrementing refcount of 1483: 36 -> 37
 106 run: start:address:shared:duplex-list:_elem/contained-in:in <- next-ingredient-without-typechecking 
9999 mem: storing 1487 in location 1222
9999 mem: incrementing refcount of 1487: 20 -> 21
 106 run: jump-if in, 1:offset
9999 mem: location 1221 is 1483
9998 run: jumping to instruction 5
 106 run: jump-if start, 1:offset
9999 mem: location 1222 is 1487
9998 run: jumping to instruction 7
 106 run: end:address:shared:duplex-list:_elem <- copy start
9999 mem: location 1222 is 1487
9999 mem: storing 1487 in location 1223
9999 mem: incrementing refcount of 1487: 21 -> 22
 106 run: next:address:shared:duplex-list:_elem <- next_2 end/insert-range
9999 mem: location 1223 is 1487
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1487 in location 1715
9999 mem: incrementing refcount of 1487: 22 -> 23
 107 run: jump-if in, 1:offset
9999 mem: location 1715 is 1487
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1715 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 0
9999 mem: location 1490 is 0
9999 mem: location 1715 is 1487
9999 mem: skipping refcount at 1487
9999 type: type deduced to be character$
9998 run: address to copy is 1489
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1489 is 0
9999 mem: storing 0 in location 1716
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1716 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1224
 106 run: jump-unless next, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 13
 106 run: next:address:shared:duplex-list:_elem <- next_2 in
9999 mem: location 1221 is 1483
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1715
9999 mem: incrementing refcount of 1483: 37 -> 38
 107 run: jump-if in, 1:offset
9999 mem: location 1715 is 1483
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1715 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1491
9999 mem: location 1486 is 1469
9999 mem: location 1715 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1485 is 1491
9999 mem: storing 1491 in location 1716
9999 mem: incrementing refcount of 1491: 47 -> 48
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1716 is 1491
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1491
9999 mem: storing 1491 in location 1224
9999 mem: incrementing refcount of 1491: 48 -> 49
 106 run: dest:address:address:shared:duplex-list:_elem <- get-address *end, next:offset
9999 mem: location 1223 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 0
9999 mem: location 1490 is 0
9999 mem: location 1223 is 1487
9999 mem: skipping refcount at 1487
9999 type: type deduced to be character$
9998 run: address to copy is 1489
9999 mem: storing 1489 in location 1225
 106 run: *dest <- copy next
9999 mem: location 1224 is 1491
9999 mem: location 1225 is 1489
9999 mem: storing 1491 in location 1489
9999 mem: incrementing refcount of 1491: 49 -> 50
 106 run: jump-unless next, 
9999 mem: location 1224 is 1491
9998 run: jump-unless fell through
 106 run: dest <- get-address *next, prev:offset
9999 mem: location 1224 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1483
9999 mem: location 1224 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1494
9999 mem: storing 1494 in location 1225
 106 run: *dest <- copy end
9999 mem: location 1223 is 1487
9999 mem: location 1225 is 1494
9999 mem: decrementing refcount of 1483: 38 -> 37
9999 mem: storing 1487 in location 1494
9999 mem: incrementing refcount of 1487: 23 -> 24
 106 run: dest <- get-address *in, next:offset
9999 mem: location 1221 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1491
9999 mem: location 1486 is 1469
9999 mem: location 1221 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9999 mem: storing 1485 in location 1225
 106 run: *dest <- copy start
9999 mem: location 1222 is 1487
9999 mem: location 1225 is 1485
9999 mem: decrementing refcount of 1491: 50 -> 49
9999 mem: storing 1487 in location 1485
9999 mem: incrementing refcount of 1487: 24 -> 25
 106 run: dest <- get-address *start, prev:offset
9999 mem: location 1222 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 1491
9999 mem: location 1490 is 0
9999 mem: location 1222 is 1487
9999 mem: skipping refcount at 1487
9999 type: type deduced to be character$
9998 run: address to copy is 1490
9999 mem: storing 1490 in location 1225
 106 run: *dest <- copy in
9999 mem: location 1221 is 1483
9999 mem: location 1225 is 1490
9999 mem: storing 1483 in location 1490
9999 mem: incrementing refcount of 1483: 37 -> 38
 106 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1221 is 1483
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: *before-cursor <- copy old-cursor
9999 mem: location 1384 is 1487
9999 mem: location 1363 is 1151
9999 mem: decrementing refcount of 1483: 38 -> 37
9999 mem: storing 1487 in location 1151
9999 mem: incrementing refcount of 1487: 25 -> 26
 105 run: *cursor-row <- get *deletion, before-row:offset
9999 mem: location 1373 is 1584
9999 mem: location 1584 is 1
9999 mem: location 1585 is 2
9999 mem: location 1586 is 1169
9999 mem: location 1587 is 1
9999 mem: location 1588 is 2
9999 mem: location 1589 is 1169
9999 mem: location 1590 is 1487
9999 mem: location 1591 is 1483
9999 mem: location 1592 is 1491
9999 mem: location 1593 is 2
9999 mem: location 1373 is 1584
9998 run: address to copy is 1584
9998 run: its type is number
9999 mem: location 1584 is 1
9999 mem: location 1364 is 1155
9999 mem: storing 1 in location 1155
 105 run: *cursor-column <- get *deletion, before-column:offset
9999 mem: location 1373 is 1584
9999 mem: location 1584 is 1
9999 mem: location 1585 is 2
9999 mem: location 1586 is 1169
9999 mem: location 1587 is 1
9999 mem: location 1588 is 2
9999 mem: location 1589 is 1169
9999 mem: location 1590 is 1487
9999 mem: location 1591 is 1483
9999 mem: location 1592 is 1491
9999 mem: location 1593 is 2
9999 mem: location 1373 is 1584
9998 run: address to copy is 1585
9998 run: its type is number
9999 mem: location 1585 is 2
9999 mem: location 1365 is 1156
9999 mem: storing 2 in location 1156
 105 run: top:address:address:shared:duplex-list:character <- get-address *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1376
 105 run: *top <- get *deletion, before-top-of-screen:offset
9999 mem: location 1373 is 1584
9999 mem: location 1584 is 1
9999 mem: location 1585 is 2
9999 mem: location 1586 is 1169
9999 mem: location 1587 is 1
9999 mem: location 1588 is 2
9999 mem: location 1589 is 1169
9999 mem: location 1590 is 1487
9999 mem: location 1591 is 1483
9999 mem: location 1592 is 1491
9999 mem: location 1593 is 2
9999 mem: location 1373 is 1584
9998 run: address to copy is 1586
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1586 is 1169
9999 mem: location 1376 is 1149
9999 mem: decrementing refcount of 1169: 48 -> 47
9999 mem: storing 1169 in location 1149
9999 mem: incrementing refcount of 1169: 47 -> 48
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1371 is 1582
9999 mem: skipping refcount at 1582
9999 mem: location 1583 is 2
9999 mem: location 1584 is 1
9999 mem: location 1585 is 2
9999 mem: location 1586 is 1169
9999 mem: location 1587 is 1
9999 mem: location 1588 is 2
9999 mem: location 1589 is 1169
9999 mem: location 1590 is 1487
9999 mem: location 1591 is 1483
9999 mem: location 1592 is 1491
9999 mem: location 1593 is 2
9999 mem: location 1371 is 1582
9999 mem: skipping refcount at 1582
9999 mem: storing 0 in location 1377
 105 run: jump-unless move, 
9999 mem: location 1377 is 0
9998 run: jumping to instruction 94
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1371 is 1582
9999 mem: skipping refcount at 1582
9999 mem: location 1583 is 2
9999 mem: location 1584 is 1
9999 mem: location 1585 is 2
9999 mem: location 1586 is 1169
9999 mem: location 1587 is 1
9999 mem: location 1588 is 2
9999 mem: location 1589 is 1169
9999 mem: location 1590 is 1487
9999 mem: location 1591 is 1483
9999 mem: location 1592 is 1491
9999 mem: location 1593 is 2
9999 mem: location 1371 is 1582
9999 mem: skipping refcount at 1582
9999 mem: storing 0 in location 1378
 105 run: jump-unless typing, 
9999 mem: location 1378 is 0
9998 run: jumping to instruction 106
 105 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 1/go-render
9999 mem: location 1352 is 1012
9999 mem: location 1353 is 1147
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1012: 290 -> 289
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 289 -> 290
9999 mem: decrementing refcount of 1147: 45 -> 44
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 44 -> 45
9999 mem: storing 1 in location 1348
 104 run: jump-unless go-render?, 
9999 mem: location 1348 is 1
9998 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1163
9999 mem: incrementing refcount of 1012: 290 -> 291
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1164
9999 mem: incrementing refcount of 1147: 45 -> 46
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1165
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1166
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1163 is 1012
9999 mem: location 1164 is 1147
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 291 -> 292
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1187
9999 mem: incrementing refcount of 1147: 46 -> 47
 106 run: jump-if editor, 1:offset
9999 mem: location 1187 is 1147
9998 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1188
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1186 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1715
9999 mem: incrementing refcount of 1012: 292 -> 293
 107 run: jump-unless screen, 
9999 mem: location 1715 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1715 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1715 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1716
 107 run: reply height:number
9999 mem: location 1716 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1189
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1190
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1191
9999 mem: incrementing refcount of 1169: 48 -> 49
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1191 is 1169
9999 mem: storing 1169 in location 1192
9999 mem: incrementing refcount of 1169: 49 -> 50
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1169
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1715
9999 mem: incrementing refcount of 1169: 50 -> 51
 107 run: jump-if in, 1:offset
9999 mem: location 1715 is 1169
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1715 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 1469
9999 mem: location 1172 is 0
9999 mem: location 1715 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 1469
9999 mem: storing 1469 in location 1716
9999 mem: incrementing refcount of 1469: 42 -> 43
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1716 is 1469
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1469
9999 mem: decrementing refcount of 1169: 51 -> 50
9999 mem: storing 1469 in location 1191
9999 mem: incrementing refcount of 1469: 43 -> 44
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1193
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1194
 106 run: column:number <- copy left
9999 mem: location 1188 is 0
9999 mem: storing 0 in location 1195
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1196
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1197
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1487
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1198
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1186 is 1012
9999 mem: location 1194 is 1
9999 mem: location 1195 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 293 -> 294
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 107 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 107 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 107 run: *column <- copy new-column
9999 mem: location 1223 is 0
9999 mem: location 1225 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 294 -> 293
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 293 -> 294
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1469
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 0
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 0 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1483
9999 mem: location 1472 is 1169
9999 mem: location 1191 is 1469
9999 mem: skipping refcount at 1469
9998 run: address to copy is 1470
9998 run: its type is character
9999 mem: location 1470 is 97
9999 mem: storing 97 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 97
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 97
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 97
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 97
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 0
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 97
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 294 -> 295
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 97
  90 print-character: 97 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 97
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 141 -> 142
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 97
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 10
9999 mem: storing 1040 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1248 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 97
9999 mem: location 1249 is 1040
9999 mem: storing 97 in location 1040
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1248 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1041
9999 mem: storing 7 in location 1041
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1469
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1715
9999 mem: incrementing refcount of 1469: 44 -> 45
 107 run: jump-if in, 1:offset
9999 mem: location 1715 is 1469
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1715 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1483
9999 mem: location 1472 is 1169
9999 mem: location 1715 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1483
9999 mem: storing 1483 in location 1716
9999 mem: incrementing refcount of 1483: 37 -> 38
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1716 is 1483
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1483
9999 mem: decrementing refcount of 1469: 45 -> 44
9999 mem: storing 1483 in location 1191
9999 mem: incrementing refcount of 1483: 38 -> 39
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1169
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1715
9999 mem: incrementing refcount of 1169: 50 -> 51
 107 run: jump-if in, 1:offset
9999 mem: location 1715 is 1169
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1715 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 1469
9999 mem: location 1172 is 0
9999 mem: location 1715 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 1469
9999 mem: storing 1469 in location 1716
9999 mem: incrementing refcount of 1469: 44 -> 45
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1716 is 1469
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1469
9999 mem: decrementing refcount of 1169: 51 -> 50
9999 mem: storing 1469 in location 1192
9999 mem: incrementing refcount of 1469: 45 -> 46
 106 run: column <- add column, 1
9999 mem: location 1195 is 0
9999 mem: storing 1 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1483
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 1
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 0 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1487
9999 mem: location 1486 is 1469
9999 mem: location 1191 is 1483
9999 mem: skipping refcount at 1483
9998 run: address to copy is 1484
9998 run: its type is character
9999 mem: location 1484 is 98
9999 mem: storing 98 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 98
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 98
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 98
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 98
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 1
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 98
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 295 -> 296
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 98
  90 print-character: 98 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 98
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 142 -> 143
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 98
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 11
9999 mem: storing 1042 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 98
9999 mem: location 1249 is 1042
9999 mem: storing 98 in location 1042
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1043
9999 mem: storing 7 in location 1043
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1483
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1715
9999 mem: incrementing refcount of 1483: 39 -> 40
 107 run: jump-if in, 1:offset
9999 mem: location 1715 is 1483
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1715 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1487
9999 mem: location 1486 is 1469
9999 mem: location 1715 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1485 is 1487
9999 mem: storing 1487 in location 1716
9999 mem: incrementing refcount of 1487: 26 -> 27
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1716 is 1487
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1487
9999 mem: decrementing refcount of 1483: 40 -> 39
9999 mem: storing 1487 in location 1191
9999 mem: incrementing refcount of 1487: 27 -> 28
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1469
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1715
9999 mem: incrementing refcount of 1469: 46 -> 47
 107 run: jump-if in, 1:offset
9999 mem: location 1715 is 1469
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1715 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1483
9999 mem: location 1472 is 1169
9999 mem: location 1715 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1483
9999 mem: storing 1483 in location 1716
9999 mem: incrementing refcount of 1483: 39 -> 40
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1716 is 1483
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1483
9999 mem: decrementing refcount of 1469: 47 -> 46
9999 mem: storing 1483 in location 1192
9999 mem: incrementing refcount of 1483: 40 -> 41
 106 run: column <- add column, 1
9999 mem: location 1195 is 1
9999 mem: storing 2 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1487
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 2
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 1 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1192 is 1483
9999 mem: location 1198 is 1151
9999 mem: decrementing refcount of 1487: 28 -> 27
9999 mem: storing 1483 in location 1151
9999 mem: incrementing refcount of 1483: 41 -> 42
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 1491
9999 mem: location 1490 is 1483
9999 mem: location 1191 is 1487
9999 mem: skipping refcount at 1487
9998 run: address to copy is 1488
9998 run: its type is character
9999 mem: location 1488 is 99
9999 mem: storing 99 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 99
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 99
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 99
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 99
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 2
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 99
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 296 -> 297
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 99
  90 print-character: 99 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 99
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 143 -> 144
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 99
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 12
9999 mem: storing 1044 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 100
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 99
9999 mem: location 1249 is 1044
9999 mem: storing 99 in location 1044
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 99
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1045
9999 mem: storing 7 in location 1045
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1487
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1487 in location 1715
9999 mem: incrementing refcount of 1487: 27 -> 28
 107 run: jump-if in, 1:offset
9999 mem: location 1715 is 1487
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1715 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 1491
9999 mem: location 1490 is 1483
9999 mem: location 1715 is 1487
9999 mem: skipping refcount at 1487
9999 type: type deduced to be character$
9998 run: address to copy is 1489
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1489 is 1491
9999 mem: storing 1491 in location 1716
9999 mem: incrementing refcount of 1491: 49 -> 50
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1716 is 1491
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1491
9999 mem: decrementing refcount of 1487: 28 -> 27
9999 mem: storing 1491 in location 1191
9999 mem: incrementing refcount of 1491: 50 -> 51
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1483
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1715
9999 mem: incrementing refcount of 1483: 42 -> 43
 107 run: jump-if in, 1:offset
9999 mem: location 1715 is 1483
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1715 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1487
9999 mem: location 1486 is 1469
9999 mem: location 1715 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1485 is 1487
9999 mem: storing 1487 in location 1716
9999 mem: incrementing refcount of 1487: 27 -> 28
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1716 is 1487
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1487
9999 mem: decrementing refcount of 1483: 43 -> 42
9999 mem: storing 1487 in location 1192
9999 mem: incrementing refcount of 1487: 28 -> 29
 106 run: column <- add column, 1
9999 mem: location 1195 is 2
9999 mem: storing 3 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1491
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 3
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 0 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1487
9999 mem: location 1191 is 1491
9999 mem: skipping refcount at 1491
9998 run: address to copy is 1492
9998 run: its type is character
9999 mem: location 1492 is 100
9999 mem: storing 100 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 100
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 100
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 100
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 3
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 100
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 297 -> 298
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
9990 schedule: print/render/editor-render/editor-event-loop/run1003/scenario-editor-can-undo-and-redo-delete
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 100
  90 print-character: 100 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 100
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 144 -> 145
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 100
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 13
9999 mem: storing 1046 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1046
9999 mem: location 1046 is 101
9999 mem: location 1047 is 7
9999 mem: location 1248 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 100
9999 mem: location 1249 is 1046
9999 mem: storing 100 in location 1046
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1046
9999 mem: location 1046 is 100
9999 mem: location 1047 is 7
9999 mem: location 1248 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1047
9999 mem: storing 7 in location 1047
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1491
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1715
9999 mem: incrementing refcount of 1491: 51 -> 52
 107 run: jump-if in, 1:offset
9999 mem: location 1715 is 1491
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1715 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1487
9999 mem: location 1715 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1493 is 1495
9999 mem: storing 1495 in location 1716
9999 mem: incrementing refcount of 1495: 41 -> 42
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1716 is 1495
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1495
9999 mem: decrementing refcount of 1491: 52 -> 51
9999 mem: storing 1495 in location 1191
9999 mem: incrementing refcount of 1495: 42 -> 43
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1487
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1487 in location 1715
9999 mem: incrementing refcount of 1487: 29 -> 30
 107 run: jump-if in, 1:offset
9999 mem: location 1715 is 1487
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1715 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 1491
9999 mem: location 1490 is 1483
9999 mem: location 1715 is 1487
9999 mem: skipping refcount at 1487
9999 type: type deduced to be character$
9998 run: address to copy is 1489
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1489 is 1491
9999 mem: storing 1491 in location 1716
9999 mem: incrementing refcount of 1491: 51 -> 52
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1716 is 1491
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1491
9999 mem: decrementing refcount of 1487: 30 -> 29
9999 mem: storing 1491 in location 1192
9999 mem: incrementing refcount of 1491: 52 -> 53
 106 run: column <- add column, 1
9999 mem: location 1195 is 3
9999 mem: storing 4 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1495
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 4
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 0 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1191 is 1495
9999 mem: skipping refcount at 1495
9998 run: address to copy is 1496
9998 run: its type is character
9999 mem: location 1496 is 101
9999 mem: storing 101 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 101
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 101
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 101
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 4
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 101
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 298 -> 299
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 101
  90 print-character: 101 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 145 -> 146
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 14
9999 mem: storing 1048 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1048
9999 mem: location 1048 is 102
9999 mem: location 1049 is 7
9999 mem: location 1248 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 101
9999 mem: location 1249 is 1048
9999 mem: storing 101 in location 1048
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1048
9999 mem: location 1048 is 101
9999 mem: location 1049 is 7
9999 mem: location 1248 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1049
9999 mem: storing 7 in location 1049
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1495
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1715
9999 mem: incrementing refcount of 1495: 43 -> 44
 107 run: jump-if in, 1:offset
9999 mem: location 1715 is 1495
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1715 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1715 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1497 is 1499
9999 mem: storing 1499 in location 1716
9999 mem: incrementing refcount of 1499: 30 -> 31
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1716 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1499
9999 mem: decrementing refcount of 1495: 44 -> 43
9999 mem: storing 1499 in location 1191
9999 mem: incrementing refcount of 1499: 31 -> 32
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1491
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1715
9999 mem: incrementing refcount of 1491: 53 -> 54
 107 run: jump-if in, 1:offset
9999 mem: location 1715 is 1491
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1715 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1487
9999 mem: location 1715 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1493 is 1495
9999 mem: storing 1495 in location 1716
9999 mem: incrementing refcount of 1495: 43 -> 44
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1716 is 1495
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1495
9999 mem: decrementing refcount of 1491: 54 -> 53
9999 mem: storing 1495 in location 1192
9999 mem: incrementing refcount of 1495: 44 -> 45
 106 run: column <- add column, 1
9999 mem: location 1195 is 4
9999 mem: storing 5 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1499
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 5
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 0 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1191 is 1499
9999 mem: skipping refcount at 1499
9998 run: address to copy is 1500
9998 run: its type is character
9999 mem: location 1500 is 102
9999 mem: storing 102 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 102
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 102
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 102
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 5
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 102
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 299 -> 300
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 102
  90 print-character: 102 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 146 -> 147
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 15
9999 mem: storing 1050 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1248 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 102
9999 mem: location 1249 is 1050
9999 mem: storing 102 in location 1050
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1050
9999 mem: location 1050 is 102
9999 mem: location 1051 is 7
9999 mem: location 1248 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1051
9999 mem: storing 7 in location 1051
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1499
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1499 in location 1715
9999 mem: incrementing refcount of 1499: 32 -> 33
 107 run: jump-if in, 1:offset
9999 mem: location 1715 is 1499
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1715 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1715 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1501
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1501 is 0
9999 mem: storing 0 in location 1716
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1716 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1499: 33 -> 32
9999 mem: storing 0 in location 1191
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1495
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1715
9999 mem: incrementing refcount of 1495: 45 -> 46
 107 run: jump-if in, 1:offset
9999 mem: location 1715 is 1495
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1715 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1715 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1497 is 1499
9999 mem: storing 1499 in location 1716
9999 mem: incrementing refcount of 1499: 32 -> 33
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1716 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1499
9999 mem: decrementing refcount of 1495: 46 -> 45
9999 mem: storing 1499 in location 1192
9999 mem: incrementing refcount of 1499: 33 -> 34
 106 run: column <- add column, 1
9999 mem: location 1195 is 5
9999 mem: storing 6 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 0
9998 run: jumping to instruction 68
 106 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1207
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1191 is 0
9999 mem: location 1207 is 1150
9999 mem: storing 0 in location 1150
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1195 is 6
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 0 in location 1208
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1200 is 1
9999 mem: location 1208 is 0
9999 mem: storing 0 in location 1209
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 0 in location 1210
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: storing 0 in location 1211
 106 run: jump-unless before-cursor?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 81
 106 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1212
 106 run: *bottom <- copy row
9999 mem: location 1194 is 1
9999 mem: location 1212 is 1154
9999 mem: storing 1 in location 1154
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1194 is 1
9999 mem: location 1195 is 6
9999 mem: location 1186 is 1012
9999 mem: location 1187 is 1147
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1
9998 run: result 1 is 6
9999 mem: storing 1 in location 1167
9999 mem: storing 6 in location 1168
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1163 is 1012
9999 mem: location 1168 is 6
9999 mem: location 1166 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 300 -> 301
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1222
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1223
 106 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1224
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 6
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 301 -> 302
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 147 -> 148
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 16
9999 mem: storing 1052 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1248 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1052
9999 mem: storing 32 in location 1052
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1248 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1053
9999 mem: storing 7 in location 1053
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 302 -> 301
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 301 -> 302
 106 run: column <- add column, 1
9999 mem: location 1222 is 6
9999 mem: storing 7 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 7
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 302 -> 303
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 148 -> 149
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 17
9999 mem: storing 1054 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1248 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1054
9999 mem: storing 32 in location 1054
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1248 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1055
9999 mem: storing 7 in location 1055
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 303 -> 302
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 302 -> 303
 106 run: column <- add column, 1
9999 mem: location 1222 is 7
9999 mem: storing 8 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 8
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 303 -> 304
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 149 -> 150
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 18
9999 mem: storing 1056 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1248 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1056
9999 mem: storing 32 in location 1056
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1248 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1057
9999 mem: storing 7 in location 1057
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 304 -> 303
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 303 -> 304
 106 run: column <- add column, 1
9999 mem: location 1222 is 8
9999 mem: storing 9 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 9
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 304 -> 305
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run1003/scenario-editor-can-undo-and-redo-delete
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 150 -> 151
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 19
9999 mem: storing 1058 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1248 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1058
9999 mem: storing 32 in location 1058
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1248 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1059
9999 mem: storing 7 in location 1059
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 305 -> 304
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 304 -> 305
 106 run: column <- add column, 1
9999 mem: location 1222 is 9
9999 mem: storing 10 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 10
9999 mem: location 1223 is 9
9999 mem: storing 1 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 1
9998 run: jumping to instruction 11
 106 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1163 is 1012
9999 mem: location 1167 is 2
9999 mem: location 1165 is 0
9999 mem: location 1166 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 305 -> 306
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1257
 106 run: x:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1258
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1259
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1260
9999 mem: storing 1 in location 1261
 106 run: jump-if style-found?, 
9999 mem: location 1261 is 1
9998 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1262
9999 mem: storing 0 in location 1263
 106 run: jump-if color-found?, 
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1262
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 106 run: jump-if bg-color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1264
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1256 is 1012
9999 mem: location 1257 is 2
9999 mem: location 1258 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 306 -> 307
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1222
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 107 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 107 run: *row <- copy new-row
9999 mem: location 1222 is 2
9999 mem: location 1224 is 1015
9999 mem: storing 2 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 107 run: *column <- copy new-column
9999 mem: location 1223 is 0
9999 mem: location 1225 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 307 -> 306
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 306 -> 307
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 0
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 307 -> 308
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 151 -> 152
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 20
9999 mem: storing 1060 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1248 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1060
9999 mem: storing 9480 in location 1060
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1248 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1061
9999 mem: storing 245 in location 1061
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 0
9999 mem: storing 1 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 1
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 308 -> 309
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 152 -> 153
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 21
9999 mem: storing 1062 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1248 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1062
9999 mem: storing 9480 in location 1062
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1248 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1063
9999 mem: storing 245 in location 1063
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 1
9999 mem: storing 2 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 2
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 309 -> 310
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 153 -> 154
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 22
9999 mem: storing 1064 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1248 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1064
9999 mem: storing 9480 in location 1064
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1248 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1065
9999 mem: storing 245 in location 1065
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 2
9999 mem: storing 3 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 3
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 310 -> 311
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 154 -> 155
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 23
9999 mem: storing 1066 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1248 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1066
9999 mem: storing 9480 in location 1066
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1248 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1067
9999 mem: storing 245 in location 1067
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 3
9999 mem: storing 4 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 4
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 311 -> 312
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 155 -> 156
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 24
9999 mem: storing 1068 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1248 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1068
9999 mem: storing 9480 in location 1068
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1248 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1069
9999 mem: storing 245 in location 1069
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 4
9999 mem: storing 5 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 5
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 312 -> 313
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 156 -> 157
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 25
9999 mem: storing 1070 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1248 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1070
9999 mem: storing 9480 in location 1070
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1248 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1071
9999 mem: storing 245 in location 1071
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 5
9999 mem: storing 6 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 6
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 313 -> 314
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 157 -> 158
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 26
9999 mem: storing 1072 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1248 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1072
9999 mem: storing 9480 in location 1072
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1248 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1073
9999 mem: storing 245 in location 1073
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 6
9999 mem: storing 7 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 7
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 314 -> 315
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 158 -> 159
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 27
9999 mem: storing 1074 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1248 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1074
9999 mem: storing 9480 in location 1074
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1248 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1075
9999 mem: storing 245 in location 1075
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run1003/scenario-editor-can-undo-and-redo-delete
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 7
9999 mem: storing 8 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 8
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 315 -> 316
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 159 -> 160
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 28
9999 mem: storing 1076 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1076
9999 mem: location 1076 is 9480
9999 mem: location 1077 is 245
9999 mem: location 1248 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1076
9999 mem: storing 9480 in location 1076
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1076
9999 mem: location 1076 is 9480
9999 mem: location 1077 is 245
9999 mem: location 1248 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1077
9999 mem: storing 245 in location 1077
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 8
9999 mem: storing 9 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 9
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 316 -> 317
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 160 -> 161
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 29
9999 mem: storing 1078 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1078
9999 mem: location 1078 is 9480
9999 mem: location 1079 is 245
9999 mem: location 1248 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1078
9999 mem: storing 9480 in location 1078
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1078
9999 mem: location 1078 is 9480
9999 mem: location 1079 is 245
9999 mem: location 1248 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1079
9999 mem: storing 245 in location 1079
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 9
9999 mem: storing 10 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 10
9999 mem: location 1259 is 9
9999 mem: storing 0 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 27
 106 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1163 is 1012
9999 mem: location 1167 is 3
9999 mem: location 1165 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 317 -> 318
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1222
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 106 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1224
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1225
 106 run: jump-if screen, 
9999 mem: location 1221 is 1012
9998 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1221 is 1012
9999 mem: location 1222 is 3
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 318 -> 319
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1271
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 107 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 107 run: *row <- copy new-row
9999 mem: location 1271 is 3
9999 mem: location 1273 is 1015
9999 mem: storing 3 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: *column <- copy new-column
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 319 -> 318
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 318 -> 319
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1221 is 1012
9999 mem: location 1223 is 0
9999 mem: location 1225 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 319 -> 320
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1271
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1272
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1273
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 0
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 320 -> 321
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 161 -> 162
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 30
9999 mem: storing 1080 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1248 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1080
9999 mem: storing 32 in location 1080
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1248 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1081
9999 mem: storing 7 in location 1081
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 321 -> 320
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 320 -> 321
 107 run: column <- add column, 1
9999 mem: location 1271 is 0
9999 mem: storing 1 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 1
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 321 -> 322
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 162 -> 163
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 31
9999 mem: storing 1082 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1248 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1082
9999 mem: storing 32 in location 1082
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1248 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1083
9999 mem: storing 7 in location 1083
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 322 -> 321
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 321 -> 322
 107 run: column <- add column, 1
9999 mem: location 1271 is 1
9999 mem: storing 2 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 2
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 322 -> 323
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 163 -> 164
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 32
9999 mem: storing 1084 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1248 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1084
9999 mem: storing 32 in location 1084
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1248 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1085
9999 mem: storing 7 in location 1085
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 323 -> 322
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 322 -> 323
 107 run: column <- add column, 1
9999 mem: location 1271 is 2
9999 mem: storing 3 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 3
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 323 -> 324
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 33 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 164 -> 165
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 33
9999 mem: storing 1086 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1248 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1086
9999 mem: storing 32 in location 1086
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1248 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1087
9999 mem: storing 7 in location 1087
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 324 -> 323
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 323 -> 324
 107 run: column <- add column, 1
9999 mem: location 1271 is 3
9999 mem: storing 4 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 4
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 324 -> 325
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 34 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 165 -> 166
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 34
9999 mem: storing 1088 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1248 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1088
9999 mem: storing 32 in location 1088
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1248 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1089
9999 mem: storing 7 in location 1089
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 325 -> 324
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 324 -> 325
 107 run: column <- add column, 1
9999 mem: location 1271 is 4
9999 mem: storing 5 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 5
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 325 -> 326
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 35 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 166 -> 167
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 35
9999 mem: storing 1090 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1248 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1090
9999 mem: storing 32 in location 1090
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1248 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1091
9999 mem: storing 7 in location 1091
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 326 -> 325
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 325 -> 326
 107 run: column <- add column, 1
9999 mem: location 1271 is 5
9999 mem: storing 6 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 6
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 326 -> 327
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run1003/scenario-editor-can-undo-and-redo-delete
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 36 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 167 -> 168
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 36
9999 mem: storing 1092 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1248 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1092
9999 mem: storing 32 in location 1092
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1248 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1093
9999 mem: storing 7 in location 1093
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 327 -> 326
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 326 -> 327
 107 run: column <- add column, 1
9999 mem: location 1271 is 6
9999 mem: storing 7 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 7
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 327 -> 328
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 37 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 168 -> 169
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 37
9999 mem: storing 1094 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1248 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1094
9999 mem: storing 32 in location 1094
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1248 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1095
9999 mem: storing 7 in location 1095
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 328 -> 327
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 327 -> 328
 107 run: column <- add column, 1
9999 mem: location 1271 is 7
9999 mem: storing 8 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 8
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 328 -> 329
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 38 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 169 -> 170
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 38
9999 mem: storing 1096 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1248 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1096
9999 mem: storing 32 in location 1096
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1248 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1097
9999 mem: storing 7 in location 1097
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 329 -> 328
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 328 -> 329
 107 run: column <- add column, 1
9999 mem: location 1271 is 8
9999 mem: storing 9 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 9
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 329 -> 330
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 39 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 170 -> 171
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 39
9999 mem: storing 1098 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1248 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1098
9999 mem: storing 32 in location 1098
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1248 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1099
9999 mem: storing 7 in location 1099
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 330 -> 329
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 329 -> 330
 107 run: column <- add column, 1
9999 mem: location 1271 is 9
9999 mem: storing 10 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 10
9999 mem: location 1272 is 9
9999 mem: storing 1 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 1
9998 run: jumping to instruction 11
 107 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1221 is 1012
9999 mem: location 1222 is 3
9999 mem: location 1224 is 0
9999 mem: location 1225 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 330 -> 331
 107 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1279
 107 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1280
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1281
 107 run: row <- add row, 1
9999 mem: location 1279 is 3
9999 mem: storing 4 in location 1279
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1278 is 1012
9999 mem: location 1279 is 4
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 331 -> 332
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1271
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 108 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 108 run: *row <- copy new-row
9999 mem: location 1271 is 4
9999 mem: location 1273 is 1015
9999 mem: storing 4 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: *column <- copy new-column
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 332 -> 331
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 331 -> 332
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1278 is 1012
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1715
9999 mem: incrementing refcount of 1012: 332 -> 333
 108 run: jump-unless screen, 
9999 mem: location 1715 is 1012
9998 run: jump-unless fell through
 108 run: height <- get *screen, num-rows:offset
9999 mem: location 1715 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1715 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1716
 108 run: reply height:number
9999 mem: location 1716 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1282
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1279 is 4
9999 mem: location 1282 is 5
9999 mem: storing 0 in location 1283
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1283 is 0
9998 run: jump-if fell through
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1278 is 1012
9999 mem: location 1279 is 4
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 333 -> 334
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1271
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 108 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 108 run: *row <- copy new-row
9999 mem: location 1271 is 4
9999 mem: location 1273 is 1015
9999 mem: storing 4 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: *column <- copy new-column
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 334 -> 333
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 333 -> 334
 107 run: clear-line-delimited screen, left, right
9999 mem: location 1278 is 1012
9999 mem: location 1280 is 0
9999 mem: location 1281 is 9
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 334 -> 335
 108 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1271
 108 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1272
 108 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1273
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 0
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 335 -> 336
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 40 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 171 -> 172
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 40
9999 mem: storing 1100 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1248 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1100
9999 mem: storing 32 in location 1100
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1248 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1101
9999 mem: storing 7 in location 1101
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 336 -> 335
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 335 -> 336
 108 run: column <- add column, 1
9999 mem: location 1271 is 0
9999 mem: storing 1 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 1
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 336 -> 337
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 41 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 172 -> 173
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 41
9999 mem: storing 1102 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1248 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1102
9999 mem: storing 32 in location 1102
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1248 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1103
9999 mem: storing 7 in location 1103
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 337 -> 336
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 336 -> 337
 108 run: column <- add column, 1
9999 mem: location 1271 is 1
9999 mem: storing 2 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 2
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 337 -> 338
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 42 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 173 -> 174
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 42
9999 mem: storing 1104 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1248 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1104
9999 mem: storing 32 in location 1104
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1248 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1105
9999 mem: storing 7 in location 1105
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 338 -> 337
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 337 -> 338
 108 run: column <- add column, 1
9999 mem: location 1271 is 2
9999 mem: storing 3 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 3
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 338 -> 339
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 43 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 174 -> 175
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 43
9999 mem: storing 1106 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1248 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1106
9999 mem: storing 32 in location 1106
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1248 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1107
9999 mem: storing 7 in location 1107
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 339 -> 338
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 338 -> 339
 108 run: column <- add column, 1
9999 mem: location 1271 is 3
9999 mem: storing 4 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 4
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run1003/scenario-editor-can-undo-and-redo-delete
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 339 -> 340
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 44 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 175 -> 176
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 44
9999 mem: storing 1108 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1248 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1108
9999 mem: storing 32 in location 1108
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1248 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1109
9999 mem: storing 7 in location 1109
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 340 -> 339
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 339 -> 340
 108 run: column <- add column, 1
9999 mem: location 1271 is 4
9999 mem: storing 5 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 5
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 340 -> 341
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 45 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 176 -> 177
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 45
9999 mem: storing 1110 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1248 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1110
9999 mem: storing 32 in location 1110
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1248 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1111
9999 mem: storing 7 in location 1111
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 341 -> 340
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 340 -> 341
 108 run: column <- add column, 1
9999 mem: location 1271 is 5
9999 mem: storing 6 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 6
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 341 -> 342
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 46 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 177 -> 178
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 46
9999 mem: storing 1112 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1248 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1112
9999 mem: storing 32 in location 1112
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1248 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1113
9999 mem: storing 7 in location 1113
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 342 -> 341
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 341 -> 342
 108 run: column <- add column, 1
9999 mem: location 1271 is 6
9999 mem: storing 7 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 7
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 342 -> 343
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 47 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 178 -> 179
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 47
9999 mem: storing 1114 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1248 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1114
9999 mem: storing 32 in location 1114
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1248 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1115
9999 mem: storing 7 in location 1115
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 343 -> 342
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 342 -> 343
 108 run: column <- add column, 1
9999 mem: location 1271 is 7
9999 mem: storing 8 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 8
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 343 -> 344
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 48 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 179 -> 180
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 48
9999 mem: storing 1116 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1248 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1116
9999 mem: storing 32 in location 1116
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1248 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1117
9999 mem: storing 7 in location 1117
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 344 -> 343
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 343 -> 344
 108 run: column <- add column, 1
9999 mem: location 1271 is 8
9999 mem: storing 9 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 9
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 344 -> 345
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 49 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 180 -> 181
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 49
9999 mem: storing 1118 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1248 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1118
9999 mem: storing 32 in location 1118
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1248 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1119
9999 mem: storing 7 in location 1119
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 345 -> 344
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 344 -> 345
 108 run: column <- add column, 1
9999 mem: location 1271 is 9
9999 mem: storing 10 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 10
9999 mem: location 1272 is 9
9999 mem: storing 1 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 1
9998 run: jumping to instruction 11
 108 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
 107 run: row <- add row, 1
9999 mem: location 1279 is 4
9999 mem: storing 5 in location 1279
 107 run: jump 
9998 run: jumping to instruction 9
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1279 is 5
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1283
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1283 is 1
9998 run: jumping to instruction 15
 107 run: reply screen:address:shared:screen
9999 mem: location 1278 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data
9999 mem: location 1163 is 1012
9999 mem: location 1164 is 1147
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 345 -> 344
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 344 -> 345
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1340
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 345 -> 346
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1223
 105 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 105 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 105 run: *column <- copy new-column
9999 mem: location 1223 is 2
9999 mem: location 1225 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 346 -> 345
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 345 -> 346
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1709
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1709 in location 1256
9999 mem: incrementing refcount of 1709: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1256 is 1709
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1709
9999 mem: skipping refcount at 1709
9999 mem: location 1710 is 1
9999 mem: location 1711 is 1703
9999 mem: location 1256 is 1709
9999 mem: skipping refcount at 1709
9998 run: address to copy is 1710
9999 mem: storing 1710 in location 1257
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1709
9999 mem: skipping refcount at 1709
9999 mem: location 1710 is 1
9999 mem: location 1711 is 1703
9999 mem: location 1256 is 1709
9999 mem: skipping refcount at 1709
9998 run: address to copy is 1711
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1711 is 1703
9999 mem: storing 1703 in location 1258
9999 mem: incrementing refcount of 1703: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1258 is 1703
9999 mem: skipping refcount at 1703
9999 mem: storing 1 in location 1259
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1710
9999 mem: location 1710 is 1
9999 mem: location 1259 is 1
9999 mem: storing 1 in location 1260
 105 run: jump-unless done?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1712 in location 1261
9999 mem: incrementing refcount of 1712: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1261 is 1712
9999 mem: skipping refcount at 1712
9999 mem: location 1713 is 0
9999 mem: location 1714 is 0
9999 mem: location 1715 is 0
9999 mem: location 1716 is 0
9999 mem: location 1256 is 1709
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1709
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1709: 3 -> 2
9999 mem: storing 1709 in location 1337
9999 mem: incrementing refcount of 1709: 2 -> 3
9999 mem: storing 1 in location 1345
9999 mem: storing 1 in location 1346
 104 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1346 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1336 is 1012
9999 mem: location 1337 is 1709
9999 mem: location 1338 is 1147
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 3
 102 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 4
 102 run: memory-should-contain [
    3 <- 1
    4 <- 2
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: screen-should-contain [
    .          .
    .abcdef    .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: assume-console [
    press ctrl-y
  ]
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"ctrl-y": <>}
9992 load: after rewriting: press ctrl-y
9999 mem: storing 'press' event starting at 1722
9999 mem: storing console in 1726
9999 mem: storing console data in 1728
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9991 parse: --- defining run1004
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 parse: recipe run1004 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1004
9991 transform: --- deduce types for recipe run1004
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1004
9991 transform: --- transform names for recipe run1004
9991 transform: --- resolve ambiguous calls for recipe run1004
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1004
9991 transform: --- transform braces for recipe run1004
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1004
9991 transform: --- type-check 'call' instructions inside recipe run1004
9991 transform: --- type-check calls inside recipe run1004
9991 transform: --- convert 'new' to 'allocate' for recipe run1004
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1726
9999 mem: location 2 is 1147
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 346 -> 347
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1726 in location 1337
9999 mem: incrementing refcount of 1726: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 47 -> 48
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1340
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 347 -> 348
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1223
 105 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 105 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 105 run: *column <- copy new-column
9999 mem: location 1223 is 2
9999 mem: location 1225 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 348 -> 347
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 347 -> 348
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1726
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1726 in location 1256
9999 mem: incrementing refcount of 1726: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1256 is 1726
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1726
9999 mem: skipping refcount at 1726
9999 mem: location 1727 is 0
9999 mem: location 1728 is 1720
9999 mem: location 1256 is 1726
9999 mem: skipping refcount at 1726
9998 run: address to copy is 1727
9999 mem: storing 1727 in location 1257
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1726
9999 mem: skipping refcount at 1726
9999 mem: location 1727 is 0
9999 mem: location 1728 is 1720
9999 mem: location 1256 is 1726
9999 mem: skipping refcount at 1726
9998 run: address to copy is 1728
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1728 is 1720
9999 mem: storing 1720 in location 1258
9999 mem: incrementing refcount of 1720: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1258 is 1720
9999 mem: skipping refcount at 1720
9999 mem: storing 1 in location 1259
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1727
9999 mem: location 1727 is 0
9999 mem: location 1259 is 1
9999 mem: storing 0 in location 1260
 105 run: jump-unless done?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1258 is 1720
9999 mem: skipping refcount at 1720
9998 run: base address is 1721
9999 mem: location 1257 is 1727
9999 mem: location 1727 is 0
9998 run: address to copy is 1722
9998 run: its type is event
9999 mem: location 1722 is 0
9999 mem: location 1723 is 25
9999 mem: location 1724 is 0
9999 mem: location 1725 is 0
9999 mem: storing 0 in location 1262
9999 mem: storing 25 in location 1263
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1257 is 1727
9999 mem: location 1727 is 0
9999 mem: location 1257 is 1727
9999 mem: storing 1 in location 1727
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1262 is 0
9999 mem: location 1263 is 25
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1256 is 1726
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 25, 0, 0]
9998 run: result 1 is 1726
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1341
9999 mem: storing 25 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1726: 2 -> 1
9999 mem: storing 1726 in location 1337
9999 mem: incrementing refcount of 1726: 1 -> 2
9999 mem: storing 1 in location 1345
9999 mem: storing 0 in location 1346
 104 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1341 is 0
9999 mem: location 1342 is 25
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1347
 104 run: jump-unless t, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1347 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 mem: location 1341 is 0
9999 mem: location 1342 is 25
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 348 -> 349
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 48 -> 49
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1354
9999 mem: storing 25 in location 1355
9999 mem: storing 0 in location 1356
9999 mem: storing 0 in location 1357
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1358
 105 run: jump-if editor, 1:offset
9999 mem: location 1353 is 1147
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1729
9999 mem: storing 3 in location 1730
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1732
9999 mem: incrementing refcount of 1012: 349 -> 350
 106 run: jump-unless screen, 
9999 mem: location 1732 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1732 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1732 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1733
 106 run: reply width:number
9999 mem: location 1733 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1359
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1732
9999 mem: incrementing refcount of 1012: 350 -> 351
 106 run: jump-unless screen, 
9999 mem: location 1732 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1732 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1732 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1733
 106 run: reply height:number
9999 mem: location 1733 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1360
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1361
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1362
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1363
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1364
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1365
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1366
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1367
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1354 is 0
9999 mem: location 1355 is 25
9999 mem: location 1356 is 0
9999 mem: location 1357 is 0
9999 mem: storing 1355 in location 1368
 105 run: jump-unless c, 
9999 mem: location 1368 is 1355
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 25
9999 mem: storing 1 in location 1369
 105 run: jump-unless redo?, 
9999 mem: location 1369 is 1
9998 run: jump-unless fell through
 105 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1717
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1370
 105 run: jump-unless *redo, 
9999 mem: location 1370 is 1159
9999 mem: location 1159 is 1717
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *redo
9999 mem: location 1370 is 1159
9999 mem: location 1159 is 1717
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1717 in location 1732
9999 mem: incrementing refcount of 1717: 2 -> 3
 106 run: result <- get *in, value:offset
9999 mem: location 1732 is 1717
9999 mem: skipping refcount at 1717
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1718 is 1582
9999 mem: location 1719 is 1700
9999 mem: location 1732 is 1717
9999 mem: skipping refcount at 1717
9998 run: address to copy is 1718
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1718 is 1582
9999 mem: storing 1582 in location 1733
9999 mem: incrementing refcount of 1582: 9 -> 10
 106 run: reply result:_elem
9999 mem: location 1733 is 1582
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1582
9999 mem: storing 1582 in location 1371
9999 mem: incrementing refcount of 1582: 10 -> 11
 105 run: *redo <- rest_2 *redo
9999 mem: location 1370 is 1159
9999 mem: location 1159 is 1717
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1717 in location 1732
9999 mem: incrementing refcount of 1717: 3 -> 4
 106 run: result <- get *in, next:offset
9999 mem: location 1732 is 1717
9999 mem: skipping refcount at 1717
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1718 is 1582
9999 mem: location 1719 is 1700
9999 mem: location 1732 is 1717
9999 mem: skipping refcount at 1717
9999 type: type deduced to be address$
9998 run: address to copy is 1719
9998 run: its type is <address : <shared : <list : <address : <shared : <operation : <>>>>>>>
9999 mem: location 1719 is 1700
9999 mem: storing 1700 in location 1733
9999 mem: incrementing refcount of 1700: 3 -> 4
 106 run: reply result:address:shared:list:_elem/contained-in:in
9999 mem: location 1733 is 1700
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1700
9999 mem: location 1370 is 1159
9999 mem: decrementing refcount of 1717: 4 -> 3
9999 mem: storing 1700 in location 1159
9999 mem: incrementing refcount of 1700: 4 -> 5
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1560
9999 mem: location 1159 is 1700
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1372
 105 run: *undo <- push_4 op, *undo
9999 mem: location 1371 is 1582
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1560
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1582 in location 1221
9999 mem: incrementing refcount of 1582: 11 -> 12
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1560 in location 1222
9999 mem: incrementing refcount of 1560: 6 -> 7
 106 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1734
9999 mem: storing 1734 in location 1223
9999 mem: incrementing refcount of 1734: 0 -> 1
 106 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1223 is 1734
9999 mem: skipping refcount at 1734
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1735 is 0
9999 mem: location 1736 is 0
9999 mem: location 1223 is 1734
9999 mem: skipping refcount at 1734
9998 run: address to copy is 1735
9999 mem: storing 1735 in location 1224
 106 run: *val <- copy x
9999 mem: location 1221 is 1582
9999 mem: location 1224 is 1735
9999 mem: storing 1582 in location 1735
9999 mem: incrementing refcount of 1582: 12 -> 13
 106 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1223 is 1734
9999 mem: skipping refcount at 1734
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1735 is 1582
9999 mem: location 1736 is 0
9999 mem: location 1223 is 1734
9999 mem: skipping refcount at 1734
9999 type: type deduced to be address$
9998 run: address to copy is 1736
9999 mem: storing 1736 in location 1225
 106 run: *next <- copy in
9999 mem: location 1222 is 1560
9999 mem: location 1225 is 1736
9999 mem: storing 1560 in location 1736
9999 mem: incrementing refcount of 1560: 7 -> 8
 106 run: reply result
9999 mem: location 1223 is 1734
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1734
9999 mem: location 1372 is 1158
9999 mem: decrementing refcount of 1560: 8 -> 7
9999 mem: storing 1734 in location 1158
9999 mem: incrementing refcount of 1734: 1 -> 2
 105 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1371 is 1582
9999 mem: skipping refcount at 1582
9999 mem: location 1583 is 2
9999 mem: location 1584 is 1
9999 mem: location 1585 is 2
9999 mem: location 1586 is 1169
9999 mem: location 1587 is 1
9999 mem: location 1588 is 2
9999 mem: location 1589 is 1169
9999 mem: location 1590 is 1487
9999 mem: location 1591 is 1483
9999 mem: location 1592 is 1491
9999 mem: location 1593 is 2
9999 mem: location 1371 is 1582
9999 mem: skipping refcount at 1582
9999 mem: storing 1584 in location 1373
 105 run: jump-unless deletion, 
9999 mem: location 1373 is 1584
9998 run: jump-unless fell through
9990 schedule: handle-keyboard-event/editor-event-loop/run1004/scenario-editor-can-undo-and-redo-delete
 105 run: start:address:shared:duplex-list:character <- get *deletion, delete-from:offset
9999 mem: location 1373 is 1584
9999 mem: location 1584 is 1
9999 mem: location 1585 is 2
9999 mem: location 1586 is 1169
9999 mem: location 1587 is 1
9999 mem: location 1588 is 2
9999 mem: location 1589 is 1169
9999 mem: location 1590 is 1487
9999 mem: location 1591 is 1483
9999 mem: location 1592 is 1491
9999 mem: location 1593 is 2
9999 mem: location 1373 is 1584
9998 run: address to copy is 1591
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1591 is 1483
9999 mem: storing 1483 in location 1374
9999 mem: incrementing refcount of 1483: 42 -> 43
 105 run: end:address:shared:duplex-list:character <- get *deletion, delete-until:offset
9999 mem: location 1373 is 1584
9999 mem: location 1584 is 1
9999 mem: location 1585 is 2
9999 mem: location 1586 is 1169
9999 mem: location 1587 is 1
9999 mem: location 1588 is 2
9999 mem: location 1589 is 1169
9999 mem: location 1590 is 1487
9999 mem: location 1591 is 1483
9999 mem: location 1592 is 1491
9999 mem: location 1593 is 2
9999 mem: location 1373 is 1584
9998 run: address to copy is 1592
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1592 is 1491
9999 mem: storing 1491 in location 1375
9999 mem: incrementing refcount of 1491: 53 -> 54
 105 run: remove-between_2 start, end
9999 mem: location 1374 is 1483
9999 mem: location 1375 is 1491
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: start:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1221
9999 mem: incrementing refcount of 1483: 43 -> 44
 106 run: end:address:shared:duplex-list:_elem/contained-in:start <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1222
9999 mem: incrementing refcount of 1491: 54 -> 55
 106 run: jump-if start, 1:offset
9999 mem: location 1221 is 1483
9998 run: jumping to instruction 5
 106 run: next:address:address:shared:duplex-list:_elem <- get-address *start, next:offset
9999 mem: location 1221 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1487
9999 mem: location 1486 is 1469
9999 mem: location 1221 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9999 mem: storing 1485 in location 1223
 106 run: nothing-to-delete?:boolean <- equal *next, end
9999 mem: location 1223 is 1485
9999 mem: location 1485 is 1487
9999 mem: location 1222 is 1491
9999 mem: storing 0 in location 1224
 106 run: jump-unless nothing-to-delete?, 1:offset
9999 mem: location 1224 is 0
9998 run: jumping to instruction 9
 106 run: prev:address:address:shared:duplex-list:_elem <- get-address **next, prev:offset
9999 mem: location 1223 is 1485
9999 mem: location 1485 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 1491
9999 mem: location 1490 is 1483
9999 mem: location 1223 is 1485
9999 mem: location 1485 is 1487
9999 mem: skipping refcount at 1487
9999 type: type deduced to be character$
9998 run: address to copy is 1490
9999 mem: storing 1490 in location 1225
 106 run: *prev <- copy 0
9999 mem: location 1225 is 1490
9999 mem: decrementing refcount of 1483: 44 -> 43
9999 mem: storing 0 in location 1490
 106 run: *next <- copy end
9999 mem: location 1222 is 1491
9999 mem: location 1223 is 1485
9999 mem: decrementing refcount of 1487: 29 -> 28
9999 mem: storing 1491 in location 1485
9999 mem: incrementing refcount of 1491: 55 -> 56
 106 run: jump-if end, 1:offset
9999 mem: location 1222 is 1491
9998 run: jumping to instruction 14
 106 run: prev <- get-address *end, prev:offset
9999 mem: location 1222 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1487
9999 mem: location 1222 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1494
9999 mem: storing 1494 in location 1225
 106 run: next <- get-address **prev, next:offset
9999 mem: location 1225 is 1494
9999 mem: location 1494 is 1487
9999 mem: skipping refcount at 1487
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1488 is 99
9999 mem: location 1489 is 1491
9999 mem: location 1490 is 0
9999 mem: location 1225 is 1494
9999 mem: location 1494 is 1487
9999 mem: skipping refcount at 1487
9999 type: type deduced to be character$
9998 run: address to copy is 1489
9999 mem: storing 1489 in location 1223
 106 run: *next <- copy 0
9999 mem: location 1223 is 1489
9999 mem: decrementing refcount of 1491: 56 -> 55
9999 mem: storing 0 in location 1489
 106 run: *prev <- copy start
9999 mem: location 1221 is 1483
9999 mem: location 1225 is 1494
9999 mem: decrementing refcount of 1487: 28 -> 27
9999 mem: storing 1483 in location 1494
9999 mem: incrementing refcount of 1483: 43 -> 44
 106 run: reply start:address:shared:duplex-list:_elem
9999 mem: location 1221 is 1483
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: *cursor-row <- get *deletion, after-row:offset
9999 mem: location 1373 is 1584
9999 mem: location 1584 is 1
9999 mem: location 1585 is 2
9999 mem: location 1586 is 1169
9999 mem: location 1587 is 1
9999 mem: location 1588 is 2
9999 mem: location 1589 is 1169
9999 mem: location 1590 is 1487
9999 mem: location 1591 is 1483
9999 mem: location 1592 is 1491
9999 mem: location 1593 is 2
9999 mem: location 1373 is 1584
9998 run: address to copy is 1587
9998 run: its type is number
9999 mem: location 1587 is 1
9999 mem: location 1364 is 1155
9999 mem: storing 1 in location 1155
 105 run: *cursor-column <- get *deletion, after-column:offset
9999 mem: location 1373 is 1584
9999 mem: location 1584 is 1
9999 mem: location 1585 is 2
9999 mem: location 1586 is 1169
9999 mem: location 1587 is 1
9999 mem: location 1588 is 2
9999 mem: location 1589 is 1169
9999 mem: location 1590 is 1487
9999 mem: location 1591 is 1483
9999 mem: location 1592 is 1491
9999 mem: location 1593 is 2
9999 mem: location 1373 is 1584
9998 run: address to copy is 1588
9998 run: its type is number
9999 mem: location 1588 is 2
9999 mem: location 1365 is 1156
9999 mem: storing 2 in location 1156
 105 run: top:address:address:shared:duplex-list:character <- get-address *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1376
 105 run: *top <- get *deletion, after-top-of-screen:offset
9999 mem: location 1373 is 1584
9999 mem: location 1584 is 1
9999 mem: location 1585 is 2
9999 mem: location 1586 is 1169
9999 mem: location 1587 is 1
9999 mem: location 1588 is 2
9999 mem: location 1589 is 1169
9999 mem: location 1590 is 1487
9999 mem: location 1591 is 1483
9999 mem: location 1592 is 1491
9999 mem: location 1593 is 2
9999 mem: location 1373 is 1584
9998 run: address to copy is 1589
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1589 is 1169
9999 mem: location 1376 is 1149
9999 mem: decrementing refcount of 1169: 50 -> 49
9999 mem: storing 1169 in location 1149
9999 mem: incrementing refcount of 1169: 49 -> 50
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1371 is 1582
9999 mem: skipping refcount at 1582
9999 mem: location 1583 is 2
9999 mem: location 1584 is 1
9999 mem: location 1585 is 2
9999 mem: location 1586 is 1169
9999 mem: location 1587 is 1
9999 mem: location 1588 is 2
9999 mem: location 1589 is 1169
9999 mem: location 1590 is 1487
9999 mem: location 1591 is 1483
9999 mem: location 1592 is 1491
9999 mem: location 1593 is 2
9999 mem: location 1371 is 1582
9999 mem: skipping refcount at 1582
9999 mem: storing 0 in location 1377
 105 run: jump-unless move, 
9999 mem: location 1377 is 0
9998 run: jumping to instruction 49
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1371 is 1582
9999 mem: skipping refcount at 1582
9999 mem: location 1583 is 2
9999 mem: location 1584 is 1
9999 mem: location 1585 is 2
9999 mem: location 1586 is 1169
9999 mem: location 1587 is 1
9999 mem: location 1588 is 2
9999 mem: location 1589 is 1169
9999 mem: location 1590 is 1487
9999 mem: location 1591 is 1483
9999 mem: location 1592 is 1491
9999 mem: location 1593 is 2
9999 mem: location 1371 is 1582
9999 mem: skipping refcount at 1582
9999 mem: storing 0 in location 1378
 105 run: jump-unless typing, 
9999 mem: location 1378 is 0
9998 run: jumping to instruction 59
 105 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 1/go-render
9999 mem: location 1352 is 1012
9999 mem: location 1353 is 1147
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1012: 351 -> 350
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 350 -> 351
9999 mem: decrementing refcount of 1147: 49 -> 48
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 48 -> 49
9999 mem: storing 1 in location 1348
 104 run: jump-unless go-render?, 
9999 mem: location 1348 is 1
9998 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1163
9999 mem: incrementing refcount of 1012: 351 -> 352
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1164
9999 mem: incrementing refcount of 1147: 49 -> 50
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1165
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1166
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1163 is 1012
9999 mem: location 1164 is 1147
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 352 -> 353
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1187
9999 mem: incrementing refcount of 1147: 50 -> 51
 106 run: jump-if editor, 1:offset
9999 mem: location 1187 is 1147
9998 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1188
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1186 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1732
9999 mem: incrementing refcount of 1012: 353 -> 354
 107 run: jump-unless screen, 
9999 mem: location 1732 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1732 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1732 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1733
 107 run: reply height:number
9999 mem: location 1733 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1189
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1190
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1191
9999 mem: incrementing refcount of 1169: 50 -> 51
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1191 is 1169
9999 mem: storing 1169 in location 1192
9999 mem: incrementing refcount of 1169: 51 -> 52
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1169
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1732
9999 mem: incrementing refcount of 1169: 52 -> 53
 107 run: jump-if in, 1:offset
9999 mem: location 1732 is 1169
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1732 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 1469
9999 mem: location 1172 is 0
9999 mem: location 1732 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 1469
9999 mem: storing 1469 in location 1733
9999 mem: incrementing refcount of 1469: 46 -> 47
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1733 is 1469
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1469
9999 mem: decrementing refcount of 1169: 53 -> 52
9999 mem: storing 1469 in location 1191
9999 mem: incrementing refcount of 1469: 47 -> 48
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1193
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1194
 106 run: column:number <- copy left
9999 mem: location 1188 is 0
9999 mem: storing 0 in location 1195
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1196
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1197
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1198
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1186 is 1012
9999 mem: location 1194 is 1
9999 mem: location 1195 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 354 -> 355
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 107 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 107 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 107 run: *column <- copy new-column
9999 mem: location 1223 is 0
9999 mem: location 1225 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 355 -> 354
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 354 -> 355
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1469
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 0
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 0 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1483
9999 mem: location 1472 is 1169
9999 mem: location 1191 is 1469
9999 mem: skipping refcount at 1469
9998 run: address to copy is 1470
9998 run: its type is character
9999 mem: location 1470 is 97
9999 mem: storing 97 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 97
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 97
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 97
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 97
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 0
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 97
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 355 -> 356
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 97
  90 print-character: 97 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 97
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 181 -> 182
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 97
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 10
9999 mem: storing 1040 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1248 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 97
9999 mem: location 1249 is 1040
9999 mem: storing 97 in location 1040
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1248 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1041
9999 mem: storing 7 in location 1041
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1469
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1732
9999 mem: incrementing refcount of 1469: 48 -> 49
 107 run: jump-if in, 1:offset
9999 mem: location 1732 is 1469
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1732 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1483
9999 mem: location 1472 is 1169
9999 mem: location 1732 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1483
9999 mem: storing 1483 in location 1733
9999 mem: incrementing refcount of 1483: 44 -> 45
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1733 is 1483
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1483
9999 mem: decrementing refcount of 1469: 49 -> 48
9999 mem: storing 1483 in location 1191
9999 mem: incrementing refcount of 1483: 45 -> 46
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1169
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1732
9999 mem: incrementing refcount of 1169: 52 -> 53
 107 run: jump-if in, 1:offset
9999 mem: location 1732 is 1169
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1732 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 1469
9999 mem: location 1172 is 0
9999 mem: location 1732 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 1469
9999 mem: storing 1469 in location 1733
9999 mem: incrementing refcount of 1469: 48 -> 49
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1733 is 1469
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1469
9999 mem: decrementing refcount of 1169: 53 -> 52
9999 mem: storing 1469 in location 1192
9999 mem: incrementing refcount of 1469: 49 -> 50
 106 run: column <- add column, 1
9999 mem: location 1195 is 0
9999 mem: storing 1 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1483
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 1
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 0 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1491
9999 mem: location 1486 is 1469
9999 mem: location 1191 is 1483
9999 mem: skipping refcount at 1483
9998 run: address to copy is 1484
9998 run: its type is character
9999 mem: location 1484 is 98
9999 mem: storing 98 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 98
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 98
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 98
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 98
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 1
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 98
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 356 -> 357
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 98
  90 print-character: 98 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 98
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 182 -> 183
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 98
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 11
9999 mem: storing 1042 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 98
9999 mem: location 1249 is 1042
9999 mem: storing 98 in location 1042
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1043
9999 mem: storing 7 in location 1043
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1483
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1732
9999 mem: incrementing refcount of 1483: 46 -> 47
 107 run: jump-if in, 1:offset
9999 mem: location 1732 is 1483
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1732 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1491
9999 mem: location 1486 is 1469
9999 mem: location 1732 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1485 is 1491
9999 mem: storing 1491 in location 1733
9999 mem: incrementing refcount of 1491: 55 -> 56
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1733 is 1491
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1491
9999 mem: decrementing refcount of 1483: 47 -> 46
9999 mem: storing 1491 in location 1191
9999 mem: incrementing refcount of 1491: 56 -> 57
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1469
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1732
9999 mem: incrementing refcount of 1469: 50 -> 51
 107 run: jump-if in, 1:offset
9999 mem: location 1732 is 1469
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1732 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1483
9999 mem: location 1472 is 1169
9999 mem: location 1732 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1483
9999 mem: storing 1483 in location 1733
9999 mem: incrementing refcount of 1483: 46 -> 47
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1733 is 1483
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1483
9999 mem: decrementing refcount of 1469: 51 -> 50
9999 mem: storing 1483 in location 1192
9999 mem: incrementing refcount of 1483: 47 -> 48
 106 run: column <- add column, 1
9999 mem: location 1195 is 1
9999 mem: storing 2 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1491
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 2
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 1 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1192 is 1483
9999 mem: location 1198 is 1151
9999 mem: decrementing refcount of 1483: 48 -> 47
9999 mem: storing 1483 in location 1151
9999 mem: incrementing refcount of 1483: 47 -> 48
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1483
9999 mem: location 1191 is 1491
9999 mem: skipping refcount at 1491
9998 run: address to copy is 1492
9998 run: its type is character
9999 mem: location 1492 is 100
9999 mem: storing 100 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 100
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 100
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 100
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 2
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 100
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 357 -> 358
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 100
  90 print-character: 100 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 100
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 183 -> 184
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 100
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 12
9999 mem: storing 1044 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 99
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 100
9999 mem: location 1249 is 1044
9999 mem: storing 100 in location 1044
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 100
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1045
9999 mem: storing 7 in location 1045
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1491
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1732
9999 mem: incrementing refcount of 1491: 57 -> 58
 107 run: jump-if in, 1:offset
9999 mem: location 1732 is 1491
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1732 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1483
9999 mem: location 1732 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1493 is 1495
9999 mem: storing 1495 in location 1733
9999 mem: incrementing refcount of 1495: 45 -> 46
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1733 is 1495
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1495
9999 mem: decrementing refcount of 1491: 58 -> 57
9999 mem: storing 1495 in location 1191
9999 mem: incrementing refcount of 1495: 46 -> 47
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1483
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1732
9999 mem: incrementing refcount of 1483: 48 -> 49
 107 run: jump-if in, 1:offset
9999 mem: location 1732 is 1483
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1732 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1491
9999 mem: location 1486 is 1469
9999 mem: location 1732 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1485 is 1491
9999 mem: storing 1491 in location 1733
9999 mem: incrementing refcount of 1491: 57 -> 58
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1733 is 1491
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1491
9999 mem: decrementing refcount of 1483: 49 -> 48
9999 mem: storing 1491 in location 1192
9999 mem: incrementing refcount of 1491: 58 -> 59
 106 run: column <- add column, 1
9999 mem: location 1195 is 2
9999 mem: storing 3 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1495
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 3
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 0 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1191 is 1495
9999 mem: skipping refcount at 1495
9998 run: address to copy is 1496
9998 run: its type is character
9999 mem: location 1496 is 101
9999 mem: storing 101 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 101
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 101
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 101
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 3
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 101
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 358 -> 359
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 101
  90 print-character: 101 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 184 -> 185
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1246
9990 schedule: print/render/editor-render/editor-event-loop/run1004/scenario-editor-can-undo-and-redo-delete
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 13
9999 mem: storing 1046 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1046
9999 mem: location 1046 is 100
9999 mem: location 1047 is 7
9999 mem: location 1248 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 101
9999 mem: location 1249 is 1046
9999 mem: storing 101 in location 1046
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1046
9999 mem: location 1046 is 101
9999 mem: location 1047 is 7
9999 mem: location 1248 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1047
9999 mem: storing 7 in location 1047
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1495
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1732
9999 mem: incrementing refcount of 1495: 47 -> 48
 107 run: jump-if in, 1:offset
9999 mem: location 1732 is 1495
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1732 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1732 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1497 is 1499
9999 mem: storing 1499 in location 1733
9999 mem: incrementing refcount of 1499: 34 -> 35
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1733 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1499
9999 mem: decrementing refcount of 1495: 48 -> 47
9999 mem: storing 1499 in location 1191
9999 mem: incrementing refcount of 1499: 35 -> 36
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1491
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1732
9999 mem: incrementing refcount of 1491: 59 -> 60
 107 run: jump-if in, 1:offset
9999 mem: location 1732 is 1491
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1732 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1483
9999 mem: location 1732 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1493 is 1495
9999 mem: storing 1495 in location 1733
9999 mem: incrementing refcount of 1495: 47 -> 48
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1733 is 1495
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1495
9999 mem: decrementing refcount of 1491: 60 -> 59
9999 mem: storing 1495 in location 1192
9999 mem: incrementing refcount of 1495: 48 -> 49
 106 run: column <- add column, 1
9999 mem: location 1195 is 3
9999 mem: storing 4 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1499
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 4
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 0 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1191 is 1499
9999 mem: skipping refcount at 1499
9998 run: address to copy is 1500
9998 run: its type is character
9999 mem: location 1500 is 102
9999 mem: storing 102 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 102
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 102
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 102
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 4
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 102
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 359 -> 360
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 102
  90 print-character: 102 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 185 -> 186
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 14
9999 mem: storing 1048 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1048
9999 mem: location 1048 is 101
9999 mem: location 1049 is 7
9999 mem: location 1248 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 102
9999 mem: location 1249 is 1048
9999 mem: storing 102 in location 1048
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1048
9999 mem: location 1048 is 102
9999 mem: location 1049 is 7
9999 mem: location 1248 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1049
9999 mem: storing 7 in location 1049
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1499
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1499 in location 1732
9999 mem: incrementing refcount of 1499: 36 -> 37
 107 run: jump-if in, 1:offset
9999 mem: location 1732 is 1499
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1732 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1732 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1501
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1501 is 0
9999 mem: storing 0 in location 1733
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1733 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1499: 37 -> 36
9999 mem: storing 0 in location 1191
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1495
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1732
9999 mem: incrementing refcount of 1495: 49 -> 50
 107 run: jump-if in, 1:offset
9999 mem: location 1732 is 1495
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1732 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1732 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1497 is 1499
9999 mem: storing 1499 in location 1733
9999 mem: incrementing refcount of 1499: 36 -> 37
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1733 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1499
9999 mem: decrementing refcount of 1495: 50 -> 49
9999 mem: storing 1499 in location 1192
9999 mem: incrementing refcount of 1499: 37 -> 38
 106 run: column <- add column, 1
9999 mem: location 1195 is 4
9999 mem: storing 5 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 0
9998 run: jumping to instruction 68
 106 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1207
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1191 is 0
9999 mem: location 1207 is 1150
9999 mem: storing 0 in location 1150
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1195 is 5
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 0 in location 1208
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1200 is 1
9999 mem: location 1208 is 0
9999 mem: storing 0 in location 1209
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 0 in location 1210
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: storing 0 in location 1211
 106 run: jump-unless before-cursor?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 81
 106 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1212
 106 run: *bottom <- copy row
9999 mem: location 1194 is 1
9999 mem: location 1212 is 1154
9999 mem: storing 1 in location 1154
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1194 is 1
9999 mem: location 1195 is 5
9999 mem: location 1186 is 1012
9999 mem: location 1187 is 1147
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1
9998 run: result 1 is 5
9999 mem: storing 1 in location 1167
9999 mem: storing 5 in location 1168
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1163 is 1012
9999 mem: location 1168 is 5
9999 mem: location 1166 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 360 -> 361
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1222
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1223
 106 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1224
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 5
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 361 -> 362
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 186 -> 187
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 15
9999 mem: storing 1050 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1050
9999 mem: location 1050 is 102
9999 mem: location 1051 is 7
9999 mem: location 1248 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1050
9999 mem: storing 32 in location 1050
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1248 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1051
9999 mem: storing 7 in location 1051
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 362 -> 361
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 361 -> 362
 106 run: column <- add column, 1
9999 mem: location 1222 is 5
9999 mem: storing 6 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 6
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 362 -> 363
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 187 -> 188
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 16
9999 mem: storing 1052 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1248 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1052
9999 mem: storing 32 in location 1052
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1248 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1053
9999 mem: storing 7 in location 1053
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 363 -> 362
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 362 -> 363
 106 run: column <- add column, 1
9999 mem: location 1222 is 6
9999 mem: storing 7 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 7
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 363 -> 364
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 188 -> 189
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 17
9999 mem: storing 1054 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1248 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1054
9999 mem: storing 32 in location 1054
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1248 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1055
9999 mem: storing 7 in location 1055
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 364 -> 363
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 363 -> 364
 106 run: column <- add column, 1
9999 mem: location 1222 is 7
9999 mem: storing 8 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 8
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 364 -> 365
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 189 -> 190
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 18
9999 mem: storing 1056 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1248 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1056
9999 mem: storing 32 in location 1056
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1248 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1057
9999 mem: storing 7 in location 1057
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 365 -> 364
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 364 -> 365
 106 run: column <- add column, 1
9999 mem: location 1222 is 8
9999 mem: storing 9 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 9
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 365 -> 366
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 190 -> 191
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 19
9999 mem: storing 1058 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1248 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1058
9999 mem: storing 32 in location 1058
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1248 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1059
9999 mem: storing 7 in location 1059
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 366 -> 365
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 365 -> 366
 106 run: column <- add column, 1
9999 mem: location 1222 is 9
9999 mem: storing 10 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 10
9999 mem: location 1223 is 9
9999 mem: storing 1 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 1
9998 run: jumping to instruction 11
 106 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1163 is 1012
9999 mem: location 1167 is 2
9999 mem: location 1165 is 0
9999 mem: location 1166 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 366 -> 367
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1257
 106 run: x:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1258
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1259
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1260
9999 mem: storing 1 in location 1261
 106 run: jump-if style-found?, 
9999 mem: location 1261 is 1
9998 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1262
9999 mem: storing 0 in location 1263
 106 run: jump-if color-found?, 
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1262
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 106 run: jump-if bg-color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1264
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1256 is 1012
9999 mem: location 1257 is 2
9999 mem: location 1258 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 367 -> 368
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1222
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 107 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 107 run: *row <- copy new-row
9999 mem: location 1222 is 2
9999 mem: location 1224 is 1015
9999 mem: storing 2 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 107 run: *column <- copy new-column
9999 mem: location 1223 is 0
9999 mem: location 1225 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 368 -> 367
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 367 -> 368
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 0
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 368 -> 369
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run1004/scenario-editor-can-undo-and-redo-delete
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 191 -> 192
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 20
9999 mem: storing 1060 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1248 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1060
9999 mem: storing 9480 in location 1060
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1248 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1061
9999 mem: storing 245 in location 1061
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 0
9999 mem: storing 1 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 1
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 369 -> 370
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 192 -> 193
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 21
9999 mem: storing 1062 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1248 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1062
9999 mem: storing 9480 in location 1062
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1248 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1063
9999 mem: storing 245 in location 1063
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 1
9999 mem: storing 2 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 2
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 370 -> 371
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 193 -> 194
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 22
9999 mem: storing 1064 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1248 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1064
9999 mem: storing 9480 in location 1064
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1248 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1065
9999 mem: storing 245 in location 1065
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 2
9999 mem: storing 3 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 3
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 371 -> 372
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 194 -> 195
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 23
9999 mem: storing 1066 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1248 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1066
9999 mem: storing 9480 in location 1066
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1248 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1067
9999 mem: storing 245 in location 1067
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 3
9999 mem: storing 4 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 4
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 372 -> 373
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 195 -> 196
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 24
9999 mem: storing 1068 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1248 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1068
9999 mem: storing 9480 in location 1068
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1248 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1069
9999 mem: storing 245 in location 1069
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 4
9999 mem: storing 5 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 5
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 373 -> 374
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 196 -> 197
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 25
9999 mem: storing 1070 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1248 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1070
9999 mem: storing 9480 in location 1070
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1248 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1071
9999 mem: storing 245 in location 1071
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 5
9999 mem: storing 6 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 6
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 374 -> 375
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 197 -> 198
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 26
9999 mem: storing 1072 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1248 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1072
9999 mem: storing 9480 in location 1072
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1248 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1073
9999 mem: storing 245 in location 1073
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 6
9999 mem: storing 7 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 7
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 375 -> 376
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 198 -> 199
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 27
9999 mem: storing 1074 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1248 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1074
9999 mem: storing 9480 in location 1074
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1248 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1075
9999 mem: storing 245 in location 1075
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 7
9999 mem: storing 8 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 8
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 376 -> 377
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 199 -> 200
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 28
9999 mem: storing 1076 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1076
9999 mem: location 1076 is 9480
9999 mem: location 1077 is 245
9999 mem: location 1248 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1076
9999 mem: storing 9480 in location 1076
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1076
9999 mem: location 1076 is 9480
9999 mem: location 1077 is 245
9999 mem: location 1248 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1077
9999 mem: storing 245 in location 1077
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 8
9999 mem: storing 9 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 9
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 377 -> 378
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run1004/scenario-editor-can-undo-and-redo-delete
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 200 -> 201
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 29
9999 mem: storing 1078 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1078
9999 mem: location 1078 is 9480
9999 mem: location 1079 is 245
9999 mem: location 1248 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1078
9999 mem: storing 9480 in location 1078
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1078
9999 mem: location 1078 is 9480
9999 mem: location 1079 is 245
9999 mem: location 1248 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1079
9999 mem: storing 245 in location 1079
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 9
9999 mem: storing 10 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 10
9999 mem: location 1259 is 9
9999 mem: storing 0 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 27
 106 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1163 is 1012
9999 mem: location 1167 is 3
9999 mem: location 1165 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 378 -> 379
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1222
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 106 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1224
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1225
 106 run: jump-if screen, 
9999 mem: location 1221 is 1012
9998 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1221 is 1012
9999 mem: location 1222 is 3
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 379 -> 380
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1271
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 107 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 107 run: *row <- copy new-row
9999 mem: location 1271 is 3
9999 mem: location 1273 is 1015
9999 mem: storing 3 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: *column <- copy new-column
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 380 -> 379
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 379 -> 380
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1221 is 1012
9999 mem: location 1223 is 0
9999 mem: location 1225 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 380 -> 381
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1271
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1272
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1273
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 0
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 381 -> 382
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 201 -> 202
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 30
9999 mem: storing 1080 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1248 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1080
9999 mem: storing 32 in location 1080
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1248 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1081
9999 mem: storing 7 in location 1081
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 382 -> 381
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 381 -> 382
 107 run: column <- add column, 1
9999 mem: location 1271 is 0
9999 mem: storing 1 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 1
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 382 -> 383
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 202 -> 203
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 31
9999 mem: storing 1082 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1248 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1082
9999 mem: storing 32 in location 1082
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1248 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1083
9999 mem: storing 7 in location 1083
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 383 -> 382
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 382 -> 383
 107 run: column <- add column, 1
9999 mem: location 1271 is 1
9999 mem: storing 2 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 2
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 383 -> 384
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 203 -> 204
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 32
9999 mem: storing 1084 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1248 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1084
9999 mem: storing 32 in location 1084
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1248 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1085
9999 mem: storing 7 in location 1085
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 384 -> 383
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 383 -> 384
 107 run: column <- add column, 1
9999 mem: location 1271 is 2
9999 mem: storing 3 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 3
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 384 -> 385
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 33 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 204 -> 205
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 33
9999 mem: storing 1086 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1248 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1086
9999 mem: storing 32 in location 1086
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1248 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1087
9999 mem: storing 7 in location 1087
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 385 -> 384
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 384 -> 385
 107 run: column <- add column, 1
9999 mem: location 1271 is 3
9999 mem: storing 4 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 4
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 385 -> 386
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 34 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 205 -> 206
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 34
9999 mem: storing 1088 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1248 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1088
9999 mem: storing 32 in location 1088
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1248 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1089
9999 mem: storing 7 in location 1089
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 386 -> 385
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 385 -> 386
 107 run: column <- add column, 1
9999 mem: location 1271 is 4
9999 mem: storing 5 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 5
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 386 -> 387
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 35 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 206 -> 207
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 35
9999 mem: storing 1090 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1248 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1090
9999 mem: storing 32 in location 1090
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1248 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1091
9999 mem: storing 7 in location 1091
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 387 -> 386
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 386 -> 387
 107 run: column <- add column, 1
9999 mem: location 1271 is 5
9999 mem: storing 6 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 6
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 387 -> 388
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 36 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 207 -> 208
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 36
9999 mem: storing 1092 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1248 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1092
9999 mem: storing 32 in location 1092
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1248 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1093
9999 mem: storing 7 in location 1093
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 388 -> 387
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 387 -> 388
 107 run: column <- add column, 1
9999 mem: location 1271 is 6
9999 mem: storing 7 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 7
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 388 -> 389
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run1004/scenario-editor-can-undo-and-redo-delete
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 37 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 208 -> 209
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 37
9999 mem: storing 1094 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1248 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1094
9999 mem: storing 32 in location 1094
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1248 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1095
9999 mem: storing 7 in location 1095
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 389 -> 388
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 388 -> 389
 107 run: column <- add column, 1
9999 mem: location 1271 is 7
9999 mem: storing 8 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 8
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 389 -> 390
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 38 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 209 -> 210
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 38
9999 mem: storing 1096 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1248 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1096
9999 mem: storing 32 in location 1096
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1248 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1097
9999 mem: storing 7 in location 1097
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 390 -> 389
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 389 -> 390
 107 run: column <- add column, 1
9999 mem: location 1271 is 8
9999 mem: storing 9 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 9
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 390 -> 391
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 39 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 210 -> 211
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 39
9999 mem: storing 1098 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1248 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1098
9999 mem: storing 32 in location 1098
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1248 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1099
9999 mem: storing 7 in location 1099
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 391 -> 390
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 390 -> 391
 107 run: column <- add column, 1
9999 mem: location 1271 is 9
9999 mem: storing 10 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 10
9999 mem: location 1272 is 9
9999 mem: storing 1 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 1
9998 run: jumping to instruction 11
 107 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1221 is 1012
9999 mem: location 1222 is 3
9999 mem: location 1224 is 0
9999 mem: location 1225 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 391 -> 392
 107 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1279
 107 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1280
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1281
 107 run: row <- add row, 1
9999 mem: location 1279 is 3
9999 mem: storing 4 in location 1279
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1278 is 1012
9999 mem: location 1279 is 4
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 392 -> 393
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1271
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 108 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 108 run: *row <- copy new-row
9999 mem: location 1271 is 4
9999 mem: location 1273 is 1015
9999 mem: storing 4 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: *column <- copy new-column
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 393 -> 392
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 392 -> 393
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1278 is 1012
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1732
9999 mem: incrementing refcount of 1012: 393 -> 394
 108 run: jump-unless screen, 
9999 mem: location 1732 is 1012
9998 run: jump-unless fell through
 108 run: height <- get *screen, num-rows:offset
9999 mem: location 1732 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1732 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1733
 108 run: reply height:number
9999 mem: location 1733 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1282
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1279 is 4
9999 mem: location 1282 is 5
9999 mem: storing 0 in location 1283
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1283 is 0
9998 run: jump-if fell through
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1278 is 1012
9999 mem: location 1279 is 4
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 394 -> 395
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1271
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 108 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 108 run: *row <- copy new-row
9999 mem: location 1271 is 4
9999 mem: location 1273 is 1015
9999 mem: storing 4 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: *column <- copy new-column
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 395 -> 394
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 394 -> 395
 107 run: clear-line-delimited screen, left, right
9999 mem: location 1278 is 1012
9999 mem: location 1280 is 0
9999 mem: location 1281 is 9
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 395 -> 396
 108 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1271
 108 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1272
 108 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1273
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 0
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 396 -> 397
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 40 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 211 -> 212
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 40
9999 mem: storing 1100 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1248 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1100
9999 mem: storing 32 in location 1100
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1248 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1101
9999 mem: storing 7 in location 1101
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 397 -> 396
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 396 -> 397
 108 run: column <- add column, 1
9999 mem: location 1271 is 0
9999 mem: storing 1 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 1
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 397 -> 398
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 41 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 212 -> 213
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 41
9999 mem: storing 1102 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1248 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1102
9999 mem: storing 32 in location 1102
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1248 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1103
9999 mem: storing 7 in location 1103
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 398 -> 397
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 397 -> 398
 108 run: column <- add column, 1
9999 mem: location 1271 is 1
9999 mem: storing 2 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 2
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 398 -> 399
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 42 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 213 -> 214
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 42
9999 mem: storing 1104 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1248 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1104
9999 mem: storing 32 in location 1104
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1248 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1105
9999 mem: storing 7 in location 1105
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 399 -> 398
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 398 -> 399
 108 run: column <- add column, 1
9999 mem: location 1271 is 2
9999 mem: storing 3 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 3
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 399 -> 400
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 43 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 214 -> 215
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 43
9999 mem: storing 1106 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1248 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1106
9999 mem: storing 32 in location 1106
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1248 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1107
9999 mem: storing 7 in location 1107
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 400 -> 399
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 399 -> 400
 108 run: column <- add column, 1
9999 mem: location 1271 is 3
9999 mem: storing 4 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 4
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 400 -> 401
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 44 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 215 -> 216
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 44
9999 mem: storing 1108 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1248 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1108
9999 mem: storing 32 in location 1108
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1248 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1109
9999 mem: storing 7 in location 1109
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 401 -> 400
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 400 -> 401
 108 run: column <- add column, 1
9999 mem: location 1271 is 4
9999 mem: storing 5 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 5
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 401 -> 402
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run1004/scenario-editor-can-undo-and-redo-delete
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 45 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 216 -> 217
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 45
9999 mem: storing 1110 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1248 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1110
9999 mem: storing 32 in location 1110
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1248 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1111
9999 mem: storing 7 in location 1111
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 402 -> 401
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 401 -> 402
 108 run: column <- add column, 1
9999 mem: location 1271 is 5
9999 mem: storing 6 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 6
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 402 -> 403
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 46 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 217 -> 218
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 46
9999 mem: storing 1112 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1248 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1112
9999 mem: storing 32 in location 1112
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1248 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1113
9999 mem: storing 7 in location 1113
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 403 -> 402
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 402 -> 403
 108 run: column <- add column, 1
9999 mem: location 1271 is 6
9999 mem: storing 7 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 7
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 403 -> 404
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 47 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 218 -> 219
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 47
9999 mem: storing 1114 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1248 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1114
9999 mem: storing 32 in location 1114
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1248 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1115
9999 mem: storing 7 in location 1115
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 404 -> 403
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 403 -> 404
 108 run: column <- add column, 1
9999 mem: location 1271 is 7
9999 mem: storing 8 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 8
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 404 -> 405
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 48 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 219 -> 220
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 48
9999 mem: storing 1116 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1248 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1116
9999 mem: storing 32 in location 1116
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1248 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1117
9999 mem: storing 7 in location 1117
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 405 -> 404
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 404 -> 405
 108 run: column <- add column, 1
9999 mem: location 1271 is 8
9999 mem: storing 9 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 9
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 405 -> 406
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 49 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 220 -> 221
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 49
9999 mem: storing 1118 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1248 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1118
9999 mem: storing 32 in location 1118
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1248 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1119
9999 mem: storing 7 in location 1119
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 406 -> 405
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 405 -> 406
 108 run: column <- add column, 1
9999 mem: location 1271 is 9
9999 mem: storing 10 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 10
9999 mem: location 1272 is 9
9999 mem: storing 1 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 1
9998 run: jumping to instruction 11
 108 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
 107 run: row <- add row, 1
9999 mem: location 1279 is 4
9999 mem: storing 5 in location 1279
 107 run: jump 
9998 run: jumping to instruction 9
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1279 is 5
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1283
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1283 is 1
9998 run: jumping to instruction 15
 107 run: reply screen:address:shared:screen
9999 mem: location 1278 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data
9999 mem: location 1163 is 1012
9999 mem: location 1164 is 1147
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 406 -> 405
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 405 -> 406
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1340
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 406 -> 407
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1223
 105 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 105 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 105 run: *column <- copy new-column
9999 mem: location 1223 is 2
9999 mem: location 1225 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 407 -> 406
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 406 -> 407
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1726
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1726 in location 1256
9999 mem: incrementing refcount of 1726: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1256 is 1726
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1726
9999 mem: skipping refcount at 1726
9999 mem: location 1727 is 1
9999 mem: location 1728 is 1720
9999 mem: location 1256 is 1726
9999 mem: skipping refcount at 1726
9998 run: address to copy is 1727
9999 mem: storing 1727 in location 1257
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1726
9999 mem: skipping refcount at 1726
9999 mem: location 1727 is 1
9999 mem: location 1728 is 1720
9999 mem: location 1256 is 1726
9999 mem: skipping refcount at 1726
9998 run: address to copy is 1728
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1728 is 1720
9999 mem: storing 1720 in location 1258
9999 mem: incrementing refcount of 1720: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1258 is 1720
9999 mem: skipping refcount at 1720
9999 mem: storing 1 in location 1259
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1727
9999 mem: location 1727 is 1
9999 mem: location 1259 is 1
9999 mem: storing 1 in location 1260
 105 run: jump-unless done?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1729 in location 1261
9999 mem: incrementing refcount of 1729: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1261 is 1729
9999 mem: skipping refcount at 1729
9999 mem: location 1730 is 0
9999 mem: location 1731 is 0
9999 mem: location 1732 is 0
9999 mem: location 1733 is 0
9999 mem: location 1256 is 1726
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1726
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1726: 3 -> 2
9999 mem: storing 1726 in location 1337
9999 mem: incrementing refcount of 1726: 2 -> 3
9999 mem: storing 1 in location 1345
9999 mem: storing 1 in location 1346
 104 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1346 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1336 is 1012
9999 mem: location 1337 is 1726
9999 mem: location 1338 is 1147
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 3
 102 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 4
 102 run: memory-should-contain [
    3 <- 1
    4 <- 2
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: screen-should-contain [
    .          .
    .abdef     .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: assume-console [
    press ctrl-y
  ]
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"ctrl-y": <>}
9992 load: after rewriting: press ctrl-y
9999 mem: storing 'press' event starting at 1739
9999 mem: storing console in 1743
9999 mem: storing console data in 1745
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9991 parse: --- defining run1005
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 parse: recipe run1005 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1005
9991 transform: --- deduce types for recipe run1005
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1005
9991 transform: --- transform names for recipe run1005
9991 transform: --- resolve ambiguous calls for recipe run1005
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1005
9991 transform: --- transform braces for recipe run1005
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1005
9991 transform: --- type-check 'call' instructions inside recipe run1005
9991 transform: --- type-check calls inside recipe run1005
9991 transform: --- convert 'new' to 'allocate' for recipe run1005
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1743
9999 mem: location 2 is 1147
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 407 -> 408
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1743 in location 1337
9999 mem: incrementing refcount of 1743: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 51 -> 52
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1340
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 408 -> 409
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1223
 105 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 105 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 105 run: *column <- copy new-column
9999 mem: location 1223 is 2
9999 mem: location 1225 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 409 -> 408
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 408 -> 409
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1743
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1743 in location 1256
9999 mem: incrementing refcount of 1743: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1256 is 1743
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1743
9999 mem: skipping refcount at 1743
9999 mem: location 1744 is 0
9999 mem: location 1745 is 1737
9999 mem: location 1256 is 1743
9999 mem: skipping refcount at 1743
9998 run: address to copy is 1744
9999 mem: storing 1744 in location 1257
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1743
9999 mem: skipping refcount at 1743
9999 mem: location 1744 is 0
9999 mem: location 1745 is 1737
9999 mem: location 1256 is 1743
9999 mem: skipping refcount at 1743
9998 run: address to copy is 1745
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1745 is 1737
9999 mem: storing 1737 in location 1258
9999 mem: incrementing refcount of 1737: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1258 is 1737
9999 mem: skipping refcount at 1737
9999 mem: storing 1 in location 1259
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1744
9999 mem: location 1744 is 0
9999 mem: location 1259 is 1
9999 mem: storing 0 in location 1260
 105 run: jump-unless done?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1258 is 1737
9999 mem: skipping refcount at 1737
9998 run: base address is 1738
9999 mem: location 1257 is 1744
9999 mem: location 1744 is 0
9998 run: address to copy is 1739
9998 run: its type is event
9999 mem: location 1739 is 0
9999 mem: location 1740 is 25
9999 mem: location 1741 is 0
9999 mem: location 1742 is 0
9999 mem: storing 0 in location 1262
9999 mem: storing 25 in location 1263
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1257 is 1744
9999 mem: location 1744 is 0
9999 mem: location 1257 is 1744
9999 mem: storing 1 in location 1744
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1262 is 0
9999 mem: location 1263 is 25
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1256 is 1743
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 25, 0, 0]
9998 run: result 1 is 1743
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1341
9999 mem: storing 25 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1743: 2 -> 1
9999 mem: storing 1743 in location 1337
9999 mem: incrementing refcount of 1743: 1 -> 2
9999 mem: storing 1 in location 1345
9999 mem: storing 0 in location 1346
 104 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1341 is 0
9999 mem: location 1342 is 25
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1347
 104 run: jump-unless t, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1347 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 mem: location 1341 is 0
9999 mem: location 1342 is 25
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 409 -> 410
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 52 -> 53
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1354
9999 mem: storing 25 in location 1355
9999 mem: storing 0 in location 1356
9999 mem: storing 0 in location 1357
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1358
 105 run: jump-if editor, 1:offset
9999 mem: location 1353 is 1147
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1746
9999 mem: storing 3 in location 1747
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1749
9999 mem: incrementing refcount of 1012: 410 -> 411
 106 run: jump-unless screen, 
9999 mem: location 1749 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1749 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1749 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1750
 106 run: reply width:number
9999 mem: location 1750 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1359
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1749
9999 mem: incrementing refcount of 1012: 411 -> 412
 106 run: jump-unless screen, 
9999 mem: location 1749 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1749 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1749 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1750
 106 run: reply height:number
9999 mem: location 1750 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1360
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1361
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1362
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1363
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1364
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1365
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1366
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1367
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1354 is 0
9999 mem: location 1355 is 25
9999 mem: location 1356 is 0
9999 mem: location 1357 is 0
9999 mem: storing 1355 in location 1368
 105 run: jump-unless c, 
9999 mem: location 1368 is 1355
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 25
9999 mem: storing 1 in location 1369
 105 run: jump-unless redo?, 
9999 mem: location 1369 is 1
9998 run: jump-unless fell through
 105 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1700
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1370
 105 run: jump-unless *redo, 
9999 mem: location 1370 is 1159
9999 mem: location 1159 is 1700
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *redo
9999 mem: location 1370 is 1159
9999 mem: location 1159 is 1700
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1700 in location 1749
9999 mem: incrementing refcount of 1700: 5 -> 6
 106 run: result <- get *in, value:offset
9999 mem: location 1749 is 1700
9999 mem: skipping refcount at 1700
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1701 is 1621
9999 mem: location 1702 is 1671
9999 mem: location 1749 is 1700
9999 mem: skipping refcount at 1700
9998 run: address to copy is 1701
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1701 is 1621
9999 mem: storing 1621 in location 1750
9999 mem: incrementing refcount of 1621: 9 -> 10
 106 run: reply result:_elem
9999 mem: location 1750 is 1621
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1621
9999 mem: storing 1621 in location 1371
9999 mem: incrementing refcount of 1621: 10 -> 11
 105 run: *redo <- rest_2 *redo
9999 mem: location 1370 is 1159
9999 mem: location 1159 is 1700
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1700 in location 1749
9999 mem: incrementing refcount of 1700: 6 -> 7
 106 run: result <- get *in, next:offset
9999 mem: location 1749 is 1700
9999 mem: skipping refcount at 1700
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1701 is 1621
9999 mem: location 1702 is 1671
9999 mem: location 1749 is 1700
9999 mem: skipping refcount at 1700
9999 type: type deduced to be address$
9998 run: address to copy is 1702
9998 run: its type is <address : <shared : <list : <address : <shared : <operation : <>>>>>>>
9999 mem: location 1702 is 1671
9999 mem: storing 1671 in location 1750
9999 mem: incrementing refcount of 1671: 3 -> 4
 106 run: reply result:address:shared:list:_elem/contained-in:in
9999 mem: location 1750 is 1671
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1671
9999 mem: location 1370 is 1159
9999 mem: decrementing refcount of 1700: 7 -> 6
9999 mem: storing 1671 in location 1159
9999 mem: incrementing refcount of 1671: 4 -> 5
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1734
9999 mem: location 1159 is 1671
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1372
 105 run: *undo <- push_4 op, *undo
9999 mem: location 1371 is 1621
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1734
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1621 in location 1221
9999 mem: incrementing refcount of 1621: 11 -> 12
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1734 in location 1222
9999 mem: incrementing refcount of 1734: 2 -> 3
 106 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1751
9999 mem: storing 1751 in location 1223
9999 mem: incrementing refcount of 1751: 0 -> 1
 106 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1223 is 1751
9999 mem: skipping refcount at 1751
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1752 is 0
9999 mem: location 1753 is 0
9999 mem: location 1223 is 1751
9999 mem: skipping refcount at 1751
9998 run: address to copy is 1752
9999 mem: storing 1752 in location 1224
 106 run: *val <- copy x
9999 mem: location 1221 is 1621
9999 mem: location 1224 is 1752
9999 mem: storing 1621 in location 1752
9999 mem: incrementing refcount of 1621: 12 -> 13
 106 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1223 is 1751
9999 mem: skipping refcount at 1751
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1752 is 1621
9999 mem: location 1753 is 0
9999 mem: location 1223 is 1751
9999 mem: skipping refcount at 1751
9999 type: type deduced to be address$
9998 run: address to copy is 1753
9999 mem: storing 1753 in location 1225
 106 run: *next <- copy in
9999 mem: location 1222 is 1734
9999 mem: location 1225 is 1753
9999 mem: storing 1734 in location 1753
9999 mem: incrementing refcount of 1734: 3 -> 4
 106 run: reply result
9999 mem: location 1223 is 1751
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1751
9999 mem: location 1372 is 1158
9999 mem: decrementing refcount of 1734: 4 -> 3
9999 mem: storing 1751 in location 1158
9999 mem: incrementing refcount of 1751: 1 -> 2
 105 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1371 is 1621
9999 mem: skipping refcount at 1621
9999 mem: location 1622 is 2
9999 mem: location 1623 is 1
9999 mem: location 1624 is 2
9999 mem: location 1625 is 1169
9999 mem: location 1626 is 1
9999 mem: location 1627 is 1
9999 mem: location 1628 is 1169
9999 mem: location 1629 is 1483
9999 mem: location 1630 is 1469
9999 mem: location 1631 is 1491
9999 mem: location 1632 is 1
9999 mem: location 1371 is 1621
9999 mem: skipping refcount at 1621
9999 mem: storing 1623 in location 1373
 105 run: jump-unless deletion, 
9999 mem: location 1373 is 1623
9998 run: jump-unless fell through
 105 run: start:address:shared:duplex-list:character <- get *deletion, delete-from:offset
9999 mem: location 1373 is 1623
9999 mem: location 1623 is 1
9999 mem: location 1624 is 2
9999 mem: location 1625 is 1169
9999 mem: location 1626 is 1
9999 mem: location 1627 is 1
9999 mem: location 1628 is 1169
9999 mem: location 1629 is 1483
9999 mem: location 1630 is 1469
9999 mem: location 1631 is 1491
9999 mem: location 1632 is 1
9999 mem: location 1373 is 1623
9998 run: address to copy is 1630
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1630 is 1469
9999 mem: storing 1469 in location 1374
9999 mem: incrementing refcount of 1469: 50 -> 51
 105 run: end:address:shared:duplex-list:character <- get *deletion, delete-until:offset
9999 mem: location 1373 is 1623
9999 mem: location 1623 is 1
9999 mem: location 1624 is 2
9999 mem: location 1625 is 1169
9999 mem: location 1626 is 1
9999 mem: location 1627 is 1
9999 mem: location 1628 is 1169
9999 mem: location 1629 is 1483
9999 mem: location 1630 is 1469
9999 mem: location 1631 is 1491
9999 mem: location 1632 is 1
9999 mem: location 1373 is 1623
9998 run: address to copy is 1631
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1631 is 1491
9999 mem: storing 1491 in location 1375
9999 mem: incrementing refcount of 1491: 59 -> 60
 105 run: remove-between_2 start, end
9999 mem: location 1374 is 1469
9999 mem: location 1375 is 1491
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: start:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1221
9999 mem: incrementing refcount of 1469: 51 -> 52
 106 run: end:address:shared:duplex-list:_elem/contained-in:start <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1222
9999 mem: incrementing refcount of 1491: 60 -> 61
 106 run: jump-if start, 1:offset
9999 mem: location 1221 is 1469
9998 run: jumping to instruction 5
 106 run: next:address:address:shared:duplex-list:_elem <- get-address *start, next:offset
9999 mem: location 1221 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1483
9999 mem: location 1472 is 1169
9999 mem: location 1221 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9999 mem: storing 1471 in location 1223
 106 run: nothing-to-delete?:boolean <- equal *next, end
9999 mem: location 1223 is 1471
9999 mem: location 1471 is 1483
9999 mem: location 1222 is 1491
9999 mem: storing 0 in location 1224
 106 run: jump-unless nothing-to-delete?, 1:offset
9999 mem: location 1224 is 0
9998 run: jumping to instruction 9
 106 run: prev:address:address:shared:duplex-list:_elem <- get-address **next, prev:offset
9999 mem: location 1223 is 1471
9999 mem: location 1471 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1491
9999 mem: location 1486 is 1469
9999 mem: location 1223 is 1471
9999 mem: location 1471 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1486
9999 mem: storing 1486 in location 1225
 106 run: *prev <- copy 0
9999 mem: location 1225 is 1486
9999 mem: decrementing refcount of 1469: 52 -> 51
9999 mem: storing 0 in location 1486
 106 run: *next <- copy end
9999 mem: location 1222 is 1491
9999 mem: location 1223 is 1471
9999 mem: decrementing refcount of 1483: 48 -> 47
9999 mem: storing 1491 in location 1471
9999 mem: incrementing refcount of 1491: 61 -> 62
 106 run: jump-if end, 1:offset
9999 mem: location 1222 is 1491
9998 run: jumping to instruction 14
 106 run: prev <- get-address *end, prev:offset
9999 mem: location 1222 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1483
9999 mem: location 1222 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1494
9999 mem: storing 1494 in location 1225
 106 run: next <- get-address **prev, next:offset
9999 mem: location 1225 is 1494
9999 mem: location 1494 is 1483
9999 mem: skipping refcount at 1483
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1484 is 98
9999 mem: location 1485 is 1491
9999 mem: location 1486 is 0
9999 mem: location 1225 is 1494
9999 mem: location 1494 is 1483
9999 mem: skipping refcount at 1483
9999 type: type deduced to be character$
9998 run: address to copy is 1485
9999 mem: storing 1485 in location 1223
 106 run: *next <- copy 0
9999 mem: location 1223 is 1485
9999 mem: decrementing refcount of 1491: 62 -> 61
9999 mem: storing 0 in location 1485
 106 run: *prev <- copy start
9999 mem: location 1221 is 1469
9999 mem: location 1225 is 1494
9999 mem: decrementing refcount of 1483: 47 -> 46
9999 mem: storing 1469 in location 1494
9999 mem: incrementing refcount of 1469: 51 -> 52
 106 run: reply start:address:shared:duplex-list:_elem
9999 mem: location 1221 is 1469
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: *cursor-row <- get *deletion, after-row:offset
9999 mem: location 1373 is 1623
9999 mem: location 1623 is 1
9999 mem: location 1624 is 2
9999 mem: location 1625 is 1169
9999 mem: location 1626 is 1
9999 mem: location 1627 is 1
9999 mem: location 1628 is 1169
9999 mem: location 1629 is 1483
9999 mem: location 1630 is 1469
9999 mem: location 1631 is 1491
9999 mem: location 1632 is 1
9999 mem: location 1373 is 1623
9998 run: address to copy is 1626
9998 run: its type is number
9999 mem: location 1626 is 1
9999 mem: location 1364 is 1155
9999 mem: storing 1 in location 1155
 105 run: *cursor-column <- get *deletion, after-column:offset
9999 mem: location 1373 is 1623
9999 mem: location 1623 is 1
9999 mem: location 1624 is 2
9999 mem: location 1625 is 1169
9999 mem: location 1626 is 1
9999 mem: location 1627 is 1
9999 mem: location 1628 is 1169
9999 mem: location 1629 is 1483
9999 mem: location 1630 is 1469
9999 mem: location 1631 is 1491
9999 mem: location 1632 is 1
9999 mem: location 1373 is 1623
9998 run: address to copy is 1627
9998 run: its type is number
9999 mem: location 1627 is 1
9999 mem: location 1365 is 1156
9999 mem: storing 1 in location 1156
 105 run: top:address:address:shared:duplex-list:character <- get-address *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1376
 105 run: *top <- get *deletion, after-top-of-screen:offset
9999 mem: location 1373 is 1623
9999 mem: location 1623 is 1
9999 mem: location 1624 is 2
9999 mem: location 1625 is 1169
9999 mem: location 1626 is 1
9999 mem: location 1627 is 1
9999 mem: location 1628 is 1169
9999 mem: location 1629 is 1483
9999 mem: location 1630 is 1469
9999 mem: location 1631 is 1491
9999 mem: location 1632 is 1
9999 mem: location 1373 is 1623
9998 run: address to copy is 1628
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1628 is 1169
9999 mem: location 1376 is 1149
9999 mem: decrementing refcount of 1169: 52 -> 51
9999 mem: storing 1169 in location 1149
9999 mem: incrementing refcount of 1169: 51 -> 52
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1371 is 1621
9999 mem: skipping refcount at 1621
9999 mem: location 1622 is 2
9999 mem: location 1623 is 1
9999 mem: location 1624 is 2
9999 mem: location 1625 is 1169
9999 mem: location 1626 is 1
9999 mem: location 1627 is 1
9999 mem: location 1628 is 1169
9999 mem: location 1629 is 1483
9999 mem: location 1630 is 1469
9999 mem: location 1631 is 1491
9999 mem: location 1632 is 1
9999 mem: location 1371 is 1621
9999 mem: skipping refcount at 1621
9999 mem: storing 0 in location 1377
 105 run: jump-unless move, 
9999 mem: location 1377 is 0
9998 run: jumping to instruction 49
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1371 is 1621
9999 mem: skipping refcount at 1621
9999 mem: location 1622 is 2
9999 mem: location 1623 is 1
9999 mem: location 1624 is 2
9999 mem: location 1625 is 1169
9999 mem: location 1626 is 1
9999 mem: location 1627 is 1
9999 mem: location 1628 is 1169
9999 mem: location 1629 is 1483
9999 mem: location 1630 is 1469
9999 mem: location 1631 is 1491
9999 mem: location 1632 is 1
9999 mem: location 1371 is 1621
9999 mem: skipping refcount at 1621
9999 mem: storing 0 in location 1378
 105 run: jump-unless typing, 
9999 mem: location 1378 is 0
9998 run: jumping to instruction 59
 105 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 1/go-render
9999 mem: location 1352 is 1012
9999 mem: location 1353 is 1147
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1012: 412 -> 411
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 411 -> 412
9999 mem: decrementing refcount of 1147: 53 -> 52
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 52 -> 53
9999 mem: storing 1 in location 1348
 104 run: jump-unless go-render?, 
9999 mem: location 1348 is 1
9998 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1163
9999 mem: incrementing refcount of 1012: 412 -> 413
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1164
9999 mem: incrementing refcount of 1147: 53 -> 54
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1165
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1166
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1163 is 1012
9999 mem: location 1164 is 1147
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 413 -> 414
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1187
9999 mem: incrementing refcount of 1147: 54 -> 55
 106 run: jump-if editor, 1:offset
9999 mem: location 1187 is 1147
9998 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1188
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1186 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1749
9999 mem: incrementing refcount of 1012: 414 -> 415
 107 run: jump-unless screen, 
9999 mem: location 1749 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1749 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1749 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1750
 107 run: reply height:number
9999 mem: location 1750 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1189
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1190
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1191
9999 mem: incrementing refcount of 1169: 52 -> 53
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1191 is 1169
9999 mem: storing 1169 in location 1192
9999 mem: incrementing refcount of 1169: 53 -> 54
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1169
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1749
9999 mem: incrementing refcount of 1169: 54 -> 55
 107 run: jump-if in, 1:offset
9999 mem: location 1749 is 1169
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1749 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 1469
9999 mem: location 1172 is 0
9999 mem: location 1749 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 1469
9999 mem: storing 1469 in location 1750
9999 mem: incrementing refcount of 1469: 52 -> 53
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1750 is 1469
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1469
9999 mem: decrementing refcount of 1169: 55 -> 54
9999 mem: storing 1469 in location 1191
9999 mem: incrementing refcount of 1469: 53 -> 54
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1193
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1194
 106 run: column:number <- copy left
9999 mem: location 1188 is 0
9999 mem: storing 0 in location 1195
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1196
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1197
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1483
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1198
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1186 is 1012
9999 mem: location 1194 is 1
9999 mem: location 1195 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 415 -> 416
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 107 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 107 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 107 run: *column <- copy new-column
9999 mem: location 1223 is 0
9999 mem: location 1225 is 1016
9999 mem: storing 0 in location 1016
9990 schedule: move-cursor/render/editor-render/editor-event-loop/run1005/scenario-editor-can-undo-and-redo-delete
 107 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 416 -> 415
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 415 -> 416
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1469
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 0
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 0 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1491
9999 mem: location 1472 is 1169
9999 mem: location 1191 is 1469
9999 mem: skipping refcount at 1469
9998 run: address to copy is 1470
9998 run: its type is character
9999 mem: location 1470 is 97
9999 mem: storing 97 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 97
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 97
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 97
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 97
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 0
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 97
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 416 -> 417
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 97
  90 print-character: 97 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 97
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 221 -> 222
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 97
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 10
9999 mem: storing 1040 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1248 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 97
9999 mem: location 1249 is 1040
9999 mem: storing 97 in location 1040
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1248 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1041
9999 mem: storing 7 in location 1041
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1469
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1749
9999 mem: incrementing refcount of 1469: 54 -> 55
 107 run: jump-if in, 1:offset
9999 mem: location 1749 is 1469
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1749 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1491
9999 mem: location 1472 is 1169
9999 mem: location 1749 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1491
9999 mem: storing 1491 in location 1750
9999 mem: incrementing refcount of 1491: 61 -> 62
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1750 is 1491
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1491
9999 mem: decrementing refcount of 1469: 55 -> 54
9999 mem: storing 1491 in location 1191
9999 mem: incrementing refcount of 1491: 62 -> 63
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1169
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1749
9999 mem: incrementing refcount of 1169: 54 -> 55
 107 run: jump-if in, 1:offset
9999 mem: location 1749 is 1169
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1749 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 1469
9999 mem: location 1172 is 0
9999 mem: location 1749 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 1469
9999 mem: storing 1469 in location 1750
9999 mem: incrementing refcount of 1469: 54 -> 55
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1750 is 1469
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1469
9999 mem: decrementing refcount of 1169: 55 -> 54
9999 mem: storing 1469 in location 1192
9999 mem: incrementing refcount of 1469: 55 -> 56
 106 run: column <- add column, 1
9999 mem: location 1195 is 0
9999 mem: storing 1 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1491
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 1
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1192 is 1469
9999 mem: location 1198 is 1151
9999 mem: decrementing refcount of 1483: 46 -> 45
9999 mem: storing 1469 in location 1151
9999 mem: incrementing refcount of 1469: 56 -> 57
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1469
9999 mem: location 1191 is 1491
9999 mem: skipping refcount at 1491
9998 run: address to copy is 1492
9998 run: its type is character
9999 mem: location 1492 is 100
9999 mem: storing 100 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 100
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 100
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 100
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 1
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 100
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 417 -> 418
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 100
  90 print-character: 100 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 100
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 222 -> 223
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 100
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 11
9999 mem: storing 1042 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 100
9999 mem: location 1249 is 1042
9999 mem: storing 100 in location 1042
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 100
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1043
9999 mem: storing 7 in location 1043
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1491
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1749
9999 mem: incrementing refcount of 1491: 63 -> 64
 107 run: jump-if in, 1:offset
9999 mem: location 1749 is 1491
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1749 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1469
9999 mem: location 1749 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1493 is 1495
9999 mem: storing 1495 in location 1750
9999 mem: incrementing refcount of 1495: 49 -> 50
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1750 is 1495
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1495
9999 mem: decrementing refcount of 1491: 64 -> 63
9999 mem: storing 1495 in location 1191
9999 mem: incrementing refcount of 1495: 50 -> 51
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1469
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1749
9999 mem: incrementing refcount of 1469: 57 -> 58
 107 run: jump-if in, 1:offset
9999 mem: location 1749 is 1469
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1749 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1491
9999 mem: location 1472 is 1169
9999 mem: location 1749 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1491
9999 mem: storing 1491 in location 1750
9999 mem: incrementing refcount of 1491: 63 -> 64
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1750 is 1491
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1491
9999 mem: decrementing refcount of 1469: 58 -> 57
9999 mem: storing 1491 in location 1192
9999 mem: incrementing refcount of 1491: 64 -> 65
 106 run: column <- add column, 1
9999 mem: location 1195 is 1
9999 mem: storing 2 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1495
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 2
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 0 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1191 is 1495
9999 mem: skipping refcount at 1495
9998 run: address to copy is 1496
9998 run: its type is character
9999 mem: location 1496 is 101
9999 mem: storing 101 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 101
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 101
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 101
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 2
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 101
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 418 -> 419
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 101
  90 print-character: 101 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 223 -> 224
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 12
9999 mem: storing 1044 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 100
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 101
9999 mem: location 1249 is 1044
9999 mem: storing 101 in location 1044
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 101
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1045
9999 mem: storing 7 in location 1045
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1495
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1749
9999 mem: incrementing refcount of 1495: 51 -> 52
 107 run: jump-if in, 1:offset
9999 mem: location 1749 is 1495
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1749 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1749 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1497 is 1499
9999 mem: storing 1499 in location 1750
9999 mem: incrementing refcount of 1499: 38 -> 39
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1750 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1499
9999 mem: decrementing refcount of 1495: 52 -> 51
9999 mem: storing 1499 in location 1191
9999 mem: incrementing refcount of 1499: 39 -> 40
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1491
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1749
9999 mem: incrementing refcount of 1491: 65 -> 66
 107 run: jump-if in, 1:offset
9999 mem: location 1749 is 1491
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1749 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1469
9999 mem: location 1749 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1493
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1493 is 1495
9999 mem: storing 1495 in location 1750
9999 mem: incrementing refcount of 1495: 51 -> 52
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1750 is 1495
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1495
9999 mem: decrementing refcount of 1491: 66 -> 65
9999 mem: storing 1495 in location 1192
9999 mem: incrementing refcount of 1495: 52 -> 53
 106 run: column <- add column, 1
9999 mem: location 1195 is 2
9999 mem: storing 3 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1499
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 3
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 0 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1191 is 1499
9999 mem: skipping refcount at 1499
9998 run: address to copy is 1500
9998 run: its type is character
9999 mem: location 1500 is 102
9999 mem: storing 102 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 102
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 102
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 102
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 3
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 102
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 419 -> 420
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 102
  90 print-character: 102 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 224 -> 225
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 13
9999 mem: storing 1046 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1046
9999 mem: location 1046 is 101
9999 mem: location 1047 is 7
9999 mem: location 1248 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 102
9999 mem: location 1249 is 1046
9999 mem: storing 102 in location 1046
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1046
9999 mem: location 1046 is 102
9999 mem: location 1047 is 7
9999 mem: location 1248 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1047
9999 mem: storing 7 in location 1047
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1499
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1499 in location 1749
9999 mem: incrementing refcount of 1499: 40 -> 41
 107 run: jump-if in, 1:offset
9999 mem: location 1749 is 1499
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1749 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1749 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1501
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1501 is 0
9999 mem: storing 0 in location 1750
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1750 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1499: 41 -> 40
9999 mem: storing 0 in location 1191
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1495
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1495 in location 1749
9999 mem: incrementing refcount of 1495: 53 -> 54
 107 run: jump-if in, 1:offset
9999 mem: location 1749 is 1495
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1749 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1749 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1497 is 1499
9999 mem: storing 1499 in location 1750
9999 mem: incrementing refcount of 1499: 40 -> 41
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1750 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1499
9999 mem: decrementing refcount of 1495: 54 -> 53
9999 mem: storing 1499 in location 1192
9999 mem: incrementing refcount of 1499: 41 -> 42
 106 run: column <- add column, 1
9999 mem: location 1195 is 3
9999 mem: storing 4 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 0
9998 run: jumping to instruction 68
 106 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1207
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1191 is 0
9999 mem: location 1207 is 1150
9999 mem: storing 0 in location 1150
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1195 is 4
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 0 in location 1208
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1200 is 1
9999 mem: location 1208 is 0
9999 mem: storing 0 in location 1209
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 0 in location 1210
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: storing 0 in location 1211
 106 run: jump-unless before-cursor?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 81
 106 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1212
 106 run: *bottom <- copy row
9999 mem: location 1194 is 1
9999 mem: location 1212 is 1154
9999 mem: storing 1 in location 1154
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1194 is 1
9999 mem: location 1195 is 4
9999 mem: location 1186 is 1012
9999 mem: location 1187 is 1147
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1
9998 run: result 1 is 4
9999 mem: storing 1 in location 1167
9999 mem: storing 4 in location 1168
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1163 is 1012
9999 mem: location 1168 is 4
9999 mem: location 1166 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 420 -> 421
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1222
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1223
 106 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1224
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 4
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 421 -> 422
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run1005/scenario-editor-can-undo-and-redo-delete
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 225 -> 226
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 14
9999 mem: storing 1048 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1048
9999 mem: location 1048 is 102
9999 mem: location 1049 is 7
9999 mem: location 1248 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1048
9999 mem: storing 32 in location 1048
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1248 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1049
9999 mem: storing 7 in location 1049
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 422 -> 421
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 421 -> 422
 106 run: column <- add column, 1
9999 mem: location 1222 is 4
9999 mem: storing 5 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 5
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 422 -> 423
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 226 -> 227
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 15
9999 mem: storing 1050 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1248 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1050
9999 mem: storing 32 in location 1050
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1248 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1051
9999 mem: storing 7 in location 1051
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 423 -> 422
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 422 -> 423
 106 run: column <- add column, 1
9999 mem: location 1222 is 5
9999 mem: storing 6 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 6
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 423 -> 424
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 227 -> 228
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 16
9999 mem: storing 1052 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1248 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1052
9999 mem: storing 32 in location 1052
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1248 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1053
9999 mem: storing 7 in location 1053
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 424 -> 423
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 423 -> 424
 106 run: column <- add column, 1
9999 mem: location 1222 is 6
9999 mem: storing 7 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 7
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 424 -> 425
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 228 -> 229
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 17
9999 mem: storing 1054 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1248 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1054
9999 mem: storing 32 in location 1054
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1248 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1055
9999 mem: storing 7 in location 1055
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 425 -> 424
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 424 -> 425
 106 run: column <- add column, 1
9999 mem: location 1222 is 7
9999 mem: storing 8 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 8
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 425 -> 426
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 229 -> 230
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 18
9999 mem: storing 1056 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1248 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1056
9999 mem: storing 32 in location 1056
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1248 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1057
9999 mem: storing 7 in location 1057
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 426 -> 425
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 425 -> 426
 106 run: column <- add column, 1
9999 mem: location 1222 is 8
9999 mem: storing 9 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 9
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 426 -> 427
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 230 -> 231
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 19
9999 mem: storing 1058 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1248 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1058
9999 mem: storing 32 in location 1058
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1248 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1059
9999 mem: storing 7 in location 1059
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 427 -> 426
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 426 -> 427
 106 run: column <- add column, 1
9999 mem: location 1222 is 9
9999 mem: storing 10 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 10
9999 mem: location 1223 is 9
9999 mem: storing 1 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 1
9998 run: jumping to instruction 11
 106 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1163 is 1012
9999 mem: location 1167 is 2
9999 mem: location 1165 is 0
9999 mem: location 1166 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 427 -> 428
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1257
 106 run: x:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1258
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1259
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1260
9999 mem: storing 1 in location 1261
 106 run: jump-if style-found?, 
9999 mem: location 1261 is 1
9998 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1262
9999 mem: storing 0 in location 1263
 106 run: jump-if color-found?, 
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1262
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 106 run: jump-if bg-color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1264
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1256 is 1012
9999 mem: location 1257 is 2
9999 mem: location 1258 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 428 -> 429
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1222
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 107 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 107 run: *row <- copy new-row
9999 mem: location 1222 is 2
9999 mem: location 1224 is 1015
9999 mem: storing 2 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 107 run: *column <- copy new-column
9999 mem: location 1223 is 0
9999 mem: location 1225 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 429 -> 428
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 428 -> 429
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 0
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 429 -> 430
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 231 -> 232
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 20
9999 mem: storing 1060 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1248 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1060
9999 mem: storing 9480 in location 1060
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1248 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1061
9999 mem: storing 245 in location 1061
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 0
9999 mem: storing 1 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 1
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 430 -> 431
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 232 -> 233
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 21
9999 mem: storing 1062 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1248 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1062
9999 mem: storing 9480 in location 1062
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1248 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1063
9999 mem: storing 245 in location 1063
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 1
9999 mem: storing 2 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 2
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 431 -> 432
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 233 -> 234
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run1005/scenario-editor-can-undo-and-redo-delete
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 22
9999 mem: storing 1064 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1248 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1064
9999 mem: storing 9480 in location 1064
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1248 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1065
9999 mem: storing 245 in location 1065
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 2
9999 mem: storing 3 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 3
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 432 -> 433
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 234 -> 235
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 23
9999 mem: storing 1066 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1248 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1066
9999 mem: storing 9480 in location 1066
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1248 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1067
9999 mem: storing 245 in location 1067
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 3
9999 mem: storing 4 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 4
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 433 -> 434
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 235 -> 236
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 24
9999 mem: storing 1068 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1248 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1068
9999 mem: storing 9480 in location 1068
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1248 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1069
9999 mem: storing 245 in location 1069
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 4
9999 mem: storing 5 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 5
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 434 -> 435
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 236 -> 237
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 25
9999 mem: storing 1070 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1248 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1070
9999 mem: storing 9480 in location 1070
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1248 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1071
9999 mem: storing 245 in location 1071
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 5
9999 mem: storing 6 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 6
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 435 -> 436
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 237 -> 238
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 26
9999 mem: storing 1072 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1248 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1072
9999 mem: storing 9480 in location 1072
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1248 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1073
9999 mem: storing 245 in location 1073
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 6
9999 mem: storing 7 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 7
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 436 -> 437
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 238 -> 239
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 27
9999 mem: storing 1074 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1248 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1074
9999 mem: storing 9480 in location 1074
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1248 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1075
9999 mem: storing 245 in location 1075
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 7
9999 mem: storing 8 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 8
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 437 -> 438
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 239 -> 240
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 28
9999 mem: storing 1076 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1076
9999 mem: location 1076 is 9480
9999 mem: location 1077 is 245
9999 mem: location 1248 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1076
9999 mem: storing 9480 in location 1076
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1076
9999 mem: location 1076 is 9480
9999 mem: location 1077 is 245
9999 mem: location 1248 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1077
9999 mem: storing 245 in location 1077
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 8
9999 mem: storing 9 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 9
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 438 -> 439
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 240 -> 241
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 29
9999 mem: storing 1078 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1078
9999 mem: location 1078 is 9480
9999 mem: location 1079 is 245
9999 mem: location 1248 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1078
9999 mem: storing 9480 in location 1078
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1078
9999 mem: location 1078 is 9480
9999 mem: location 1079 is 245
9999 mem: location 1248 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1079
9999 mem: storing 245 in location 1079
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 9
9999 mem: storing 10 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 10
9999 mem: location 1259 is 9
9999 mem: storing 0 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 27
 106 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1163 is 1012
9999 mem: location 1167 is 3
9999 mem: location 1165 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 439 -> 440
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1222
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 106 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1224
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1225
 106 run: jump-if screen, 
9999 mem: location 1221 is 1012
9998 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1221 is 1012
9999 mem: location 1222 is 3
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 440 -> 441
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1271
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 107 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 107 run: *row <- copy new-row
9999 mem: location 1271 is 3
9999 mem: location 1273 is 1015
9999 mem: storing 3 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: *column <- copy new-column
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 441 -> 440
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 440 -> 441
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1221 is 1012
9999 mem: location 1223 is 0
9999 mem: location 1225 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 441 -> 442
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1271
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1272
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1273
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 0
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 442 -> 443
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 241 -> 242
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 30
9999 mem: storing 1080 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1248 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1080
9999 mem: storing 32 in location 1080
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1248 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1081
9999 mem: storing 7 in location 1081
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 443 -> 442
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 442 -> 443
 107 run: column <- add column, 1
9999 mem: location 1271 is 0
9999 mem: storing 1 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 1
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 443 -> 444
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run1005/scenario-editor-can-undo-and-redo-delete
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 242 -> 243
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 31
9999 mem: storing 1082 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1248 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1082
9999 mem: storing 32 in location 1082
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1248 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1083
9999 mem: storing 7 in location 1083
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 444 -> 443
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 443 -> 444
 107 run: column <- add column, 1
9999 mem: location 1271 is 1
9999 mem: storing 2 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 2
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 444 -> 445
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 243 -> 244
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 32
9999 mem: storing 1084 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1248 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1084
9999 mem: storing 32 in location 1084
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1248 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1085
9999 mem: storing 7 in location 1085
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 445 -> 444
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 444 -> 445
 107 run: column <- add column, 1
9999 mem: location 1271 is 2
9999 mem: storing 3 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 3
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 445 -> 446
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 33 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 244 -> 245
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 33
9999 mem: storing 1086 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1248 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1086
9999 mem: storing 32 in location 1086
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1248 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1087
9999 mem: storing 7 in location 1087
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 446 -> 445
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 445 -> 446
 107 run: column <- add column, 1
9999 mem: location 1271 is 3
9999 mem: storing 4 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 4
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 446 -> 447
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 34 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 245 -> 246
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 34
9999 mem: storing 1088 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1248 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1088
9999 mem: storing 32 in location 1088
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1248 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1089
9999 mem: storing 7 in location 1089
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 447 -> 446
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 446 -> 447
 107 run: column <- add column, 1
9999 mem: location 1271 is 4
9999 mem: storing 5 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 5
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 447 -> 448
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 35 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 246 -> 247
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 35
9999 mem: storing 1090 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1248 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1090
9999 mem: storing 32 in location 1090
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1248 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1091
9999 mem: storing 7 in location 1091
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 448 -> 447
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 447 -> 448
 107 run: column <- add column, 1
9999 mem: location 1271 is 5
9999 mem: storing 6 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 6
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 448 -> 449
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 36 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 247 -> 248
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 36
9999 mem: storing 1092 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1248 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1092
9999 mem: storing 32 in location 1092
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1248 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1093
9999 mem: storing 7 in location 1093
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 449 -> 448
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 448 -> 449
 107 run: column <- add column, 1
9999 mem: location 1271 is 6
9999 mem: storing 7 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 7
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 449 -> 450
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 37 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 248 -> 249
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 37
9999 mem: storing 1094 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1248 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1094
9999 mem: storing 32 in location 1094
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1248 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1095
9999 mem: storing 7 in location 1095
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 450 -> 449
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 449 -> 450
 107 run: column <- add column, 1
9999 mem: location 1271 is 7
9999 mem: storing 8 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 8
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 450 -> 451
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 38 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 249 -> 250
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 38
9999 mem: storing 1096 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1248 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1096
9999 mem: storing 32 in location 1096
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1248 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1097
9999 mem: storing 7 in location 1097
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 451 -> 450
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 450 -> 451
 107 run: column <- add column, 1
9999 mem: location 1271 is 8
9999 mem: storing 9 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 9
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 451 -> 452
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 39 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 250 -> 251
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 39
9999 mem: storing 1098 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1248 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1098
9999 mem: storing 32 in location 1098
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1248 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1099
9999 mem: storing 7 in location 1099
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 452 -> 451
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 451 -> 452
 107 run: column <- add column, 1
9999 mem: location 1271 is 9
9999 mem: storing 10 in location 1271
9990 schedule: clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run1005/scenario-editor-can-undo-and-redo-delete
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 10
9999 mem: location 1272 is 9
9999 mem: storing 1 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 1
9998 run: jumping to instruction 11
 107 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1221 is 1012
9999 mem: location 1222 is 3
9999 mem: location 1224 is 0
9999 mem: location 1225 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 452 -> 453
 107 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1279
 107 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1280
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1281
 107 run: row <- add row, 1
9999 mem: location 1279 is 3
9999 mem: storing 4 in location 1279
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1278 is 1012
9999 mem: location 1279 is 4
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 453 -> 454
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1271
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 108 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 108 run: *row <- copy new-row
9999 mem: location 1271 is 4
9999 mem: location 1273 is 1015
9999 mem: storing 4 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: *column <- copy new-column
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 454 -> 453
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 453 -> 454
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1278 is 1012
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1749
9999 mem: incrementing refcount of 1012: 454 -> 455
 108 run: jump-unless screen, 
9999 mem: location 1749 is 1012
9998 run: jump-unless fell through
 108 run: height <- get *screen, num-rows:offset
9999 mem: location 1749 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1749 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1750
 108 run: reply height:number
9999 mem: location 1750 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1282
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1279 is 4
9999 mem: location 1282 is 5
9999 mem: storing 0 in location 1283
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1283 is 0
9998 run: jump-if fell through
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1278 is 1012
9999 mem: location 1279 is 4
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 455 -> 456
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1271
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 108 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 108 run: *row <- copy new-row
9999 mem: location 1271 is 4
9999 mem: location 1273 is 1015
9999 mem: storing 4 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: *column <- copy new-column
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 456 -> 455
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 455 -> 456
 107 run: clear-line-delimited screen, left, right
9999 mem: location 1278 is 1012
9999 mem: location 1280 is 0
9999 mem: location 1281 is 9
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 456 -> 457
 108 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1271
 108 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1272
 108 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1273
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 0
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 457 -> 458
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 40 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 251 -> 252
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 40
9999 mem: storing 1100 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1248 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1100
9999 mem: storing 32 in location 1100
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1248 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1101
9999 mem: storing 7 in location 1101
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 458 -> 457
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 457 -> 458
 108 run: column <- add column, 1
9999 mem: location 1271 is 0
9999 mem: storing 1 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 1
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 458 -> 459
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 41 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 252 -> 253
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 41
9999 mem: storing 1102 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1248 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1102
9999 mem: storing 32 in location 1102
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1248 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1103
9999 mem: storing 7 in location 1103
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 459 -> 458
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 458 -> 459
 108 run: column <- add column, 1
9999 mem: location 1271 is 1
9999 mem: storing 2 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 2
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 459 -> 460
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 42 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 253 -> 254
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 42
9999 mem: storing 1104 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1248 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1104
9999 mem: storing 32 in location 1104
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1248 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1105
9999 mem: storing 7 in location 1105
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 460 -> 459
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 459 -> 460
 108 run: column <- add column, 1
9999 mem: location 1271 is 2
9999 mem: storing 3 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 3
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 460 -> 461
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 43 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 254 -> 255
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 43
9999 mem: storing 1106 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1248 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1106
9999 mem: storing 32 in location 1106
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1248 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1107
9999 mem: storing 7 in location 1107
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 461 -> 460
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 460 -> 461
 108 run: column <- add column, 1
9999 mem: location 1271 is 3
9999 mem: storing 4 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 4
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 461 -> 462
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 44 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 255 -> 256
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 44
9999 mem: storing 1108 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1248 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1108
9999 mem: storing 32 in location 1108
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1248 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1109
9999 mem: storing 7 in location 1109
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 462 -> 461
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 461 -> 462
 108 run: column <- add column, 1
9999 mem: location 1271 is 4
9999 mem: storing 5 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 5
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 462 -> 463
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 45 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 256 -> 257
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 45
9999 mem: storing 1110 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1248 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1110
9999 mem: storing 32 in location 1110
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1248 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1111
9999 mem: storing 7 in location 1111
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 463 -> 462
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 462 -> 463
 108 run: column <- add column, 1
9999 mem: location 1271 is 5
9999 mem: storing 6 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 6
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 463 -> 464
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 46 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 257 -> 258
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 46
9999 mem: storing 1112 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1248 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1112
9999 mem: storing 32 in location 1112
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1248 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1113
9999 mem: storing 7 in location 1113
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 464 -> 463
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 463 -> 464
 108 run: column <- add column, 1
9999 mem: location 1271 is 6
9999 mem: storing 7 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 7
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 464 -> 465
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 47 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 258 -> 259
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 47
9999 mem: storing 1114 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1248 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1114
9999 mem: storing 32 in location 1114
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1248 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1115
9999 mem: storing 7 in location 1115
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run1005/scenario-editor-can-undo-and-redo-delete
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 465 -> 464
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 464 -> 465
 108 run: column <- add column, 1
9999 mem: location 1271 is 7
9999 mem: storing 8 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 8
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 465 -> 466
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 48 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 259 -> 260
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 48
9999 mem: storing 1116 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1248 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1116
9999 mem: storing 32 in location 1116
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1248 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1117
9999 mem: storing 7 in location 1117
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 466 -> 465
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 465 -> 466
 108 run: column <- add column, 1
9999 mem: location 1271 is 8
9999 mem: storing 9 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 9
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 466 -> 467
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 49 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 260 -> 261
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 49
9999 mem: storing 1118 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1248 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1118
9999 mem: storing 32 in location 1118
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1248 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1119
9999 mem: storing 7 in location 1119
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 467 -> 466
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 466 -> 467
 108 run: column <- add column, 1
9999 mem: location 1271 is 9
9999 mem: storing 10 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 10
9999 mem: location 1272 is 9
9999 mem: storing 1 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 1
9998 run: jumping to instruction 11
 108 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
 107 run: row <- add row, 1
9999 mem: location 1279 is 4
9999 mem: storing 5 in location 1279
 107 run: jump 
9998 run: jumping to instruction 9
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1279 is 5
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1283
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1283 is 1
9998 run: jumping to instruction 15
 107 run: reply screen:address:shared:screen
9999 mem: location 1278 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data
9999 mem: location 1163 is 1012
9999 mem: location 1164 is 1147
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 467 -> 466
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 466 -> 467
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1340
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 467 -> 468
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1223
 105 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 105 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 105 run: *column <- copy new-column
9999 mem: location 1223 is 1
9999 mem: location 1225 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 468 -> 467
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 467 -> 468
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1743
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1743 in location 1256
9999 mem: incrementing refcount of 1743: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1256 is 1743
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1743
9999 mem: skipping refcount at 1743
9999 mem: location 1744 is 1
9999 mem: location 1745 is 1737
9999 mem: location 1256 is 1743
9999 mem: skipping refcount at 1743
9998 run: address to copy is 1744
9999 mem: storing 1744 in location 1257
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1743
9999 mem: skipping refcount at 1743
9999 mem: location 1744 is 1
9999 mem: location 1745 is 1737
9999 mem: location 1256 is 1743
9999 mem: skipping refcount at 1743
9998 run: address to copy is 1745
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1745 is 1737
9999 mem: storing 1737 in location 1258
9999 mem: incrementing refcount of 1737: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1258 is 1737
9999 mem: skipping refcount at 1737
9999 mem: storing 1 in location 1259
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1744
9999 mem: location 1744 is 1
9999 mem: location 1259 is 1
9999 mem: storing 1 in location 1260
 105 run: jump-unless done?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1746 in location 1261
9999 mem: incrementing refcount of 1746: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1261 is 1746
9999 mem: skipping refcount at 1746
9999 mem: location 1747 is 0
9999 mem: location 1748 is 0
9999 mem: location 1749 is 0
9999 mem: location 1750 is 0
9999 mem: location 1256 is 1743
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1743
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1743: 3 -> 2
9999 mem: storing 1743 in location 1337
9999 mem: incrementing refcount of 1743: 2 -> 3
9999 mem: storing 1 in location 1345
9999 mem: storing 1 in location 1346
 104 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1346 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1336 is 1012
9999 mem: location 1337 is 1743
9999 mem: location 1338 is 1147
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 3
 102 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 4
 102 run: memory-should-contain [
    3 <- 1
    4 <- 1
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: screen-should-contain [
    .          .
    .adef      .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: assume-console [
    press ctrl-y
  ]
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"ctrl-y": <>}
9992 load: after rewriting: press ctrl-y
9999 mem: storing 'press' event starting at 1756
9999 mem: storing console in 1760
9999 mem: storing console data in 1762
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9991 parse: --- defining run1006
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 parse: recipe run1006 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1006
9991 transform: --- deduce types for recipe run1006
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1006
9991 transform: --- transform names for recipe run1006
9991 transform: --- resolve ambiguous calls for recipe run1006
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1006
9991 transform: --- transform braces for recipe run1006
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1006
9991 transform: --- type-check 'call' instructions inside recipe run1006
9991 transform: --- type-check calls inside recipe run1006
9991 transform: --- convert 'new' to 'allocate' for recipe run1006
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1760
9999 mem: location 2 is 1147
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 468 -> 469
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1760 in location 1337
9999 mem: incrementing refcount of 1760: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 55 -> 56
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1340
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 469 -> 470
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1223
 105 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 105 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 105 run: *column <- copy new-column
9999 mem: location 1223 is 1
9999 mem: location 1225 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 470 -> 469
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 469 -> 470
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1760
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1760 in location 1256
9999 mem: incrementing refcount of 1760: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1256 is 1760
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1761 is 0
9999 mem: location 1762 is 1754
9999 mem: location 1256 is 1760
9999 mem: skipping refcount at 1760
9998 run: address to copy is 1761
9999 mem: storing 1761 in location 1257
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1761 is 0
9999 mem: location 1762 is 1754
9999 mem: location 1256 is 1760
9999 mem: skipping refcount at 1760
9998 run: address to copy is 1762
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1762 is 1754
9999 mem: storing 1754 in location 1258
9999 mem: incrementing refcount of 1754: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1258 is 1754
9999 mem: skipping refcount at 1754
9999 mem: storing 1 in location 1259
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1761
9999 mem: location 1761 is 0
9999 mem: location 1259 is 1
9999 mem: storing 0 in location 1260
 105 run: jump-unless done?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1258 is 1754
9999 mem: skipping refcount at 1754
9998 run: base address is 1755
9999 mem: location 1257 is 1761
9999 mem: location 1761 is 0
9998 run: address to copy is 1756
9998 run: its type is event
9999 mem: location 1756 is 0
9999 mem: location 1757 is 25
9999 mem: location 1758 is 0
9999 mem: location 1759 is 0
9999 mem: storing 0 in location 1262
9999 mem: storing 25 in location 1263
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1257 is 1761
9999 mem: location 1761 is 0
9999 mem: location 1257 is 1761
9999 mem: storing 1 in location 1761
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1262 is 0
9999 mem: location 1263 is 25
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1256 is 1760
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 25, 0, 0]
9998 run: result 1 is 1760
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1341
9999 mem: storing 25 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1760: 2 -> 1
9999 mem: storing 1760 in location 1337
9999 mem: incrementing refcount of 1760: 1 -> 2
9999 mem: storing 1 in location 1345
9999 mem: storing 0 in location 1346
 104 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1341 is 0
9999 mem: location 1342 is 25
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1347
 104 run: jump-unless t, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1347 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 mem: location 1341 is 0
9999 mem: location 1342 is 25
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1352
9999 mem: incrementing refcount of 1012: 470 -> 471
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1353
9999 mem: incrementing refcount of 1147: 56 -> 57
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1354
9999 mem: storing 25 in location 1355
9999 mem: storing 0 in location 1356
9999 mem: storing 0 in location 1357
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1358
 105 run: jump-if editor, 1:offset
9999 mem: location 1353 is 1147
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1763
9999 mem: storing 3 in location 1764
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1766
9999 mem: incrementing refcount of 1012: 471 -> 472
 106 run: jump-unless screen, 
9999 mem: location 1766 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1766 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1766 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1767
 106 run: reply width:number
9999 mem: location 1767 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1359
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1352 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1766
9999 mem: incrementing refcount of 1012: 472 -> 473
 106 run: jump-unless screen, 
9999 mem: location 1766 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1766 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1766 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1767
 106 run: reply height:number
9999 mem: location 1767 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1360
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1361
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1362
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1363
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1364
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1365
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1364 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1366
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1365 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1367
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1354 is 0
9999 mem: location 1355 is 25
9999 mem: location 1356 is 0
9999 mem: location 1357 is 0
9999 mem: storing 1355 in location 1368
 105 run: jump-unless c, 
9999 mem: location 1368 is 1355
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1368 is 1355
9999 mem: location 1355 is 25
9999 mem: storing 1 in location 1369
 105 run: jump-unless redo?, 
9999 mem: location 1369 is 1
9998 run: jump-unless fell through
 105 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 1671
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1370
 105 run: jump-unless *redo, 
9999 mem: location 1370 is 1159
9999 mem: location 1159 is 1671
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *redo
9999 mem: location 1370 is 1159
9999 mem: location 1159 is 1671
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1671 in location 1766
9999 mem: incrementing refcount of 1671: 5 -> 6
 106 run: result <- get *in, value:offset
9999 mem: location 1766 is 1671
9999 mem: skipping refcount at 1671
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1672 is 1636
9999 mem: location 1673 is 0
9999 mem: location 1766 is 1671
9999 mem: skipping refcount at 1671
9998 run: address to copy is 1672
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1672 is 1636
9999 mem: storing 1636 in location 1767
9999 mem: incrementing refcount of 1636: 10 -> 11
 106 run: reply result:_elem
9999 mem: location 1767 is 1636
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1636
9999 mem: storing 1636 in location 1371
9999 mem: incrementing refcount of 1636: 11 -> 12
 105 run: *redo <- rest_2 *redo
9999 mem: location 1370 is 1159
9999 mem: location 1159 is 1671
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1671 in location 1766
9999 mem: incrementing refcount of 1671: 6 -> 7
 106 run: result <- get *in, next:offset
9999 mem: location 1766 is 1671
9999 mem: skipping refcount at 1671
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1672 is 1636
9999 mem: location 1673 is 0
9999 mem: location 1766 is 1671
9999 mem: skipping refcount at 1671
9999 type: type deduced to be address$
9998 run: address to copy is 1673
9998 run: its type is <address : <shared : <list : <address : <shared : <operation : <>>>>>>>
9999 mem: location 1673 is 0
9999 mem: storing 0 in location 1767
 106 run: reply result:address:shared:list:_elem/contained-in:in
9999 mem: location 1767 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: location 1370 is 1159
9999 mem: decrementing refcount of 1671: 7 -> 6
9999 mem: storing 0 in location 1159
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1751
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1372
 105 run: *undo <- push_4 op, *undo
9999 mem: location 1371 is 1636
9999 mem: location 1372 is 1158
9999 mem: location 1158 is 1751
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1636 in location 1221
9999 mem: incrementing refcount of 1636: 12 -> 13
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1751 in location 1222
9999 mem: incrementing refcount of 1751: 2 -> 3
 106 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1768
9999 mem: storing 1768 in location 1223
9999 mem: incrementing refcount of 1768: 0 -> 1
 106 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1223 is 1768
9999 mem: skipping refcount at 1768
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1769 is 0
9999 mem: location 1770 is 0
9999 mem: location 1223 is 1768
9999 mem: skipping refcount at 1768
9998 run: address to copy is 1769
9999 mem: storing 1769 in location 1224
 106 run: *val <- copy x
9999 mem: location 1221 is 1636
9999 mem: location 1224 is 1769
9999 mem: storing 1636 in location 1769
9999 mem: incrementing refcount of 1636: 13 -> 14
 106 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1223 is 1768
9999 mem: skipping refcount at 1768
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1769 is 1636
9999 mem: location 1770 is 0
9999 mem: location 1223 is 1768
9999 mem: skipping refcount at 1768
9999 type: type deduced to be address$
9998 run: address to copy is 1770
9999 mem: storing 1770 in location 1225
 106 run: *next <- copy in
9999 mem: location 1222 is 1751
9999 mem: location 1225 is 1770
9999 mem: storing 1751 in location 1770
9999 mem: incrementing refcount of 1751: 3 -> 4
 106 run: reply result
9999 mem: location 1223 is 1768
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1768
9999 mem: location 1372 is 1158
9999 mem: decrementing refcount of 1751: 4 -> 3
9999 mem: storing 1768 in location 1158
9999 mem: incrementing refcount of 1768: 1 -> 2
 105 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1371 is 1636
9999 mem: skipping refcount at 1636
9999 mem: location 1637 is 2
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1499
9999 mem: location 1647 is 2
9999 mem: location 1371 is 1636
9999 mem: skipping refcount at 1636
9999 mem: storing 1638 in location 1373
 105 run: jump-unless deletion, 
9999 mem: location 1373 is 1638
9998 run: jump-unless fell through
 105 run: start:address:shared:duplex-list:character <- get *deletion, delete-from:offset
9999 mem: location 1373 is 1638
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1499
9999 mem: location 1647 is 2
9999 mem: location 1373 is 1638
9998 run: address to copy is 1645
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1645 is 1469
9999 mem: storing 1469 in location 1374
9999 mem: incrementing refcount of 1469: 57 -> 58
 105 run: end:address:shared:duplex-list:character <- get *deletion, delete-until:offset
9999 mem: location 1373 is 1638
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1499
9999 mem: location 1647 is 2
9999 mem: location 1373 is 1638
9998 run: address to copy is 1646
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1646 is 1499
9999 mem: storing 1499 in location 1375
9999 mem: incrementing refcount of 1499: 42 -> 43
 105 run: remove-between_2 start, end
9999 mem: location 1374 is 1469
9999 mem: location 1375 is 1499
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: start:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1221
9999 mem: incrementing refcount of 1469: 58 -> 59
 106 run: end:address:shared:duplex-list:_elem/contained-in:start <- next-ingredient-without-typechecking 
9999 mem: storing 1499 in location 1222
9999 mem: incrementing refcount of 1499: 43 -> 44
 106 run: jump-if start, 1:offset
9999 mem: location 1221 is 1469
9998 run: jumping to instruction 5
 106 run: next:address:address:shared:duplex-list:_elem <- get-address *start, next:offset
9999 mem: location 1221 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1491
9999 mem: location 1472 is 1169
9999 mem: location 1221 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9999 mem: storing 1471 in location 1223
 106 run: nothing-to-delete?:boolean <- equal *next, end
9999 mem: location 1223 is 1471
9999 mem: location 1471 is 1491
9999 mem: location 1222 is 1499
9999 mem: storing 0 in location 1224
 106 run: jump-unless nothing-to-delete?, 1:offset
9999 mem: location 1224 is 0
9998 run: jumping to instruction 9
 106 run: prev:address:address:shared:duplex-list:_elem <- get-address **next, prev:offset
9999 mem: location 1223 is 1471
9999 mem: location 1471 is 1491
9999 mem: skipping refcount at 1491
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1492 is 100
9999 mem: location 1493 is 1495
9999 mem: location 1494 is 1469
9999 mem: location 1223 is 1471
9999 mem: location 1471 is 1491
9999 mem: skipping refcount at 1491
9999 type: type deduced to be character$
9998 run: address to copy is 1494
9999 mem: storing 1494 in location 1225
 106 run: *prev <- copy 0
9999 mem: location 1225 is 1494
9999 mem: decrementing refcount of 1469: 59 -> 58
9999 mem: storing 0 in location 1494
 106 run: *next <- copy end
9999 mem: location 1222 is 1499
9999 mem: location 1223 is 1471
9999 mem: decrementing refcount of 1491: 65 -> 64
9999 mem: storing 1499 in location 1471
9999 mem: incrementing refcount of 1499: 44 -> 45
 106 run: jump-if end, 1:offset
9999 mem: location 1222 is 1499
9998 run: jumping to instruction 14
 106 run: prev <- get-address *end, prev:offset
9999 mem: location 1222 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1495
9999 mem: location 1222 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1502
9999 mem: storing 1502 in location 1225
 106 run: next <- get-address **prev, next:offset
9999 mem: location 1225 is 1502
9999 mem: location 1502 is 1495
9999 mem: skipping refcount at 1495
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1496 is 101
9999 mem: location 1497 is 1499
9999 mem: location 1498 is 1491
9999 mem: location 1225 is 1502
9999 mem: location 1502 is 1495
9999 mem: skipping refcount at 1495
9999 type: type deduced to be character$
9998 run: address to copy is 1497
9999 mem: storing 1497 in location 1223
 106 run: *next <- copy 0
9999 mem: location 1223 is 1497
9999 mem: decrementing refcount of 1499: 45 -> 44
9999 mem: storing 0 in location 1497
 106 run: *prev <- copy start
9999 mem: location 1221 is 1469
9999 mem: location 1225 is 1502
9999 mem: decrementing refcount of 1495: 53 -> 52
9999 mem: storing 1469 in location 1502
9999 mem: incrementing refcount of 1469: 58 -> 59
 106 run: reply start:address:shared:duplex-list:_elem
9999 mem: location 1221 is 1469
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: *cursor-row <- get *deletion, after-row:offset
9999 mem: location 1373 is 1638
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1499
9999 mem: location 1647 is 2
9999 mem: location 1373 is 1638
9998 run: address to copy is 1641
9998 run: its type is number
9999 mem: location 1641 is 1
9999 mem: location 1364 is 1155
9999 mem: storing 1 in location 1155
 105 run: *cursor-column <- get *deletion, after-column:offset
9999 mem: location 1373 is 1638
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1499
9999 mem: location 1647 is 2
9999 mem: location 1373 is 1638
9998 run: address to copy is 1642
9998 run: its type is number
9999 mem: location 1642 is 1
9999 mem: location 1365 is 1156
9999 mem: storing 1 in location 1156
 105 run: top:address:address:shared:duplex-list:character <- get-address *editor, top-of-screen:offset
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1768
9999 mem: location 1159 is 0
9999 mem: location 1353 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1376
 105 run: *top <- get *deletion, after-top-of-screen:offset
9999 mem: location 1373 is 1638
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1499
9999 mem: location 1647 is 2
9999 mem: location 1373 is 1638
9998 run: address to copy is 1643
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1643 is 1169
9999 mem: location 1376 is 1149
9999 mem: decrementing refcount of 1169: 54 -> 53
9999 mem: storing 1169 in location 1149
9999 mem: incrementing refcount of 1169: 53 -> 54
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1371 is 1636
9999 mem: skipping refcount at 1636
9999 mem: location 1637 is 2
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1499
9999 mem: location 1647 is 2
9999 mem: location 1371 is 1636
9999 mem: skipping refcount at 1636
9999 mem: storing 0 in location 1377
 105 run: jump-unless move, 
9999 mem: location 1377 is 0
9998 run: jumping to instruction 49
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1371 is 1636
9999 mem: skipping refcount at 1636
9999 mem: location 1637 is 2
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1169
9999 mem: location 1641 is 1
9999 mem: location 1642 is 1
9999 mem: location 1643 is 1169
9999 mem: location 1644 is 1491
9999 mem: location 1645 is 1469
9999 mem: location 1646 is 1499
9999 mem: location 1647 is 2
9999 mem: location 1371 is 1636
9999 mem: skipping refcount at 1636
9999 mem: storing 0 in location 1378
 105 run: jump-unless typing, 
9999 mem: location 1378 is 0
9998 run: jumping to instruction 59
 105 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 1/go-render
9999 mem: location 1352 is 1012
9999 mem: location 1353 is 1147
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1012: 473 -> 472
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 472 -> 473
9999 mem: decrementing refcount of 1147: 57 -> 56
9999 mem: storing 1147 in location 1338
9999 mem: incrementing refcount of 1147: 56 -> 57
9999 mem: storing 1 in location 1348
 104 run: jump-unless go-render?, 
9999 mem: location 1348 is 1
9998 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1336 is 1012
9999 mem: location 1338 is 1147
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1163
9999 mem: incrementing refcount of 1012: 473 -> 474
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1164
9999 mem: incrementing refcount of 1147: 57 -> 58
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1768
9999 mem: location 1159 is 0
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1165
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1768
9999 mem: location 1159 is 0
9999 mem: location 1164 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1166
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1163 is 1012
9999 mem: location 1164 is 1147
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 474 -> 475
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1187
9999 mem: incrementing refcount of 1147: 58 -> 59
 106 run: jump-if editor, 1:offset
9999 mem: location 1187 is 1147
9998 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1768
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1188
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1186 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1766
9999 mem: incrementing refcount of 1012: 475 -> 476
 107 run: jump-unless screen, 
9999 mem: location 1766 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1766 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1766 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1767
 107 run: reply height:number
9999 mem: location 1767 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1189
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1768
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1190
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1768
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1191
9999 mem: incrementing refcount of 1169: 54 -> 55
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1191 is 1169
9999 mem: storing 1169 in location 1192
9999 mem: incrementing refcount of 1169: 55 -> 56
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1169
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1766
9999 mem: incrementing refcount of 1169: 56 -> 57
 107 run: jump-if in, 1:offset
9999 mem: location 1766 is 1169
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1766 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 1469
9999 mem: location 1172 is 0
9999 mem: location 1766 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 1469
9999 mem: storing 1469 in location 1767
9999 mem: incrementing refcount of 1469: 59 -> 60
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1767 is 1469
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1469
9999 mem: decrementing refcount of 1169: 57 -> 56
9999 mem: storing 1469 in location 1191
9999 mem: incrementing refcount of 1469: 60 -> 61
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1193
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1194
 106 run: column:number <- copy left
9999 mem: location 1188 is 0
9999 mem: storing 0 in location 1195
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1768
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1196
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1768
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1197
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1768
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1198
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1186 is 1012
9999 mem: location 1194 is 1
9999 mem: location 1195 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 476 -> 477
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 107 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 107 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 107 run: *column <- copy new-column
9999 mem: location 1223 is 0
9999 mem: location 1225 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 477 -> 476
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 476 -> 477
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1469
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 0
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 0 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1499
9999 mem: location 1472 is 1169
9999 mem: location 1191 is 1469
9999 mem: skipping refcount at 1469
9998 run: address to copy is 1470
9998 run: its type is character
9999 mem: location 1470 is 97
9999 mem: storing 97 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 97
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 97
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 97
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 97
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 0
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 97
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 477 -> 478
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 97
  90 print-character: 97 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 97
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 261 -> 262
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 97
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 10
9999 mem: storing 1040 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1248 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 97
9999 mem: location 1249 is 1040
9999 mem: storing 97 in location 1040
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1248 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1041
9999 mem: storing 7 in location 1041
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1469
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1766
9999 mem: incrementing refcount of 1469: 61 -> 62
 107 run: jump-if in, 1:offset
9999 mem: location 1766 is 1469
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1766 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1499
9999 mem: location 1472 is 1169
9999 mem: location 1766 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1499
9999 mem: storing 1499 in location 1767
9999 mem: incrementing refcount of 1499: 44 -> 45
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1767 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1499
9999 mem: decrementing refcount of 1469: 62 -> 61
9999 mem: storing 1499 in location 1191
9999 mem: incrementing refcount of 1499: 45 -> 46
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1169
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1766
9999 mem: incrementing refcount of 1169: 56 -> 57
 107 run: jump-if in, 1:offset
9999 mem: location 1766 is 1169
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1766 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 1469
9999 mem: location 1172 is 0
9999 mem: location 1766 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 1469
9999 mem: storing 1469 in location 1767
9999 mem: incrementing refcount of 1469: 61 -> 62
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1767 is 1469
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1469
9999 mem: decrementing refcount of 1169: 57 -> 56
9999 mem: storing 1469 in location 1192
9999 mem: incrementing refcount of 1469: 62 -> 63
 106 run: column <- add column, 1
9999 mem: location 1195 is 0
9999 mem: storing 1 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 1499
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1189 is 5
9999 mem: storing 0 in location 1199
 106 run: jump-if off-screen?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 1
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1201
 106 run: jump-unless at-cursor?, 
9999 mem: location 1201 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1192 is 1469
9999 mem: location 1198 is 1151
9999 mem: decrementing refcount of 1469: 63 -> 62
9999 mem: storing 1469 in location 1151
9999 mem: incrementing refcount of 1469: 62 -> 63
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1469
9999 mem: location 1191 is 1499
9999 mem: skipping refcount at 1499
9998 run: address to copy is 1500
9998 run: its type is character
9999 mem: location 1500 is 102
9999 mem: storing 102 in location 1202
 106 run: color <- get-color color, c
9999 mem: location 1193 is 7
9999 mem: location 1202 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1677
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1678
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1677 is 7
9999 mem: storing 1 in location 1679
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1678 is 102
9999 mem: storing 0 in location 1680
 107 run: jump-unless starting-comment?, 
9999 mem: location 1680 is 0
9998 run: jumping to instruction 11
9990 schedule: get-color/render/editor-render/editor-event-loop/run1006/scenario-editor-can-undo-and-redo-delete
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1681
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1681 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1679 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1678 is 102
9999 mem: storing 0 in location 1683
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1683 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1677 is 7
9999 mem: storing 0 in location 1684
 107 run: jump-unless color-is-red?, 
9999 mem: location 1684 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1677 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1193
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 102
9999 mem: storing 0 in location 1203
 106 run: jump-unless newline?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 1
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 106 run: jump-unless at-right?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1186 is 1012
9999 mem: location 1202 is 102
9999 mem: location 1193 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 478 -> 479
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 102
  90 print-character: 102 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 262 -> 263
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 11
9999 mem: storing 1042 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 100
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 102
9999 mem: location 1249 is 1042
9999 mem: storing 102 in location 1042
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 102
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1043
9999 mem: storing 7 in location 1043
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1191 is 1499
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1499 in location 1766
9999 mem: incrementing refcount of 1499: 46 -> 47
 107 run: jump-if in, 1:offset
9999 mem: location 1766 is 1499
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1766 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 102
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1469
9999 mem: location 1766 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1501
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1501 is 0
9999 mem: storing 0 in location 1767
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1767 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1499: 47 -> 46
9999 mem: storing 0 in location 1191
 106 run: prev <- next_2 prev
9999 mem: location 1192 is 1469
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1766
9999 mem: incrementing refcount of 1469: 63 -> 64
 107 run: jump-if in, 1:offset
9999 mem: location 1766 is 1469
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1766 is 1469
9999 mem: skipping refcount at 1469
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1470 is 97
9999 mem: location 1471 is 1499
9999 mem: location 1472 is 1169
9999 mem: location 1766 is 1469
9999 mem: skipping refcount at 1469
9999 type: type deduced to be character$
9998 run: address to copy is 1471
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1471 is 1499
9999 mem: storing 1499 in location 1767
9999 mem: incrementing refcount of 1499: 46 -> 47
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1767 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1499
9999 mem: decrementing refcount of 1469: 64 -> 63
9999 mem: storing 1499 in location 1192
9999 mem: incrementing refcount of 1499: 47 -> 48
 106 run: column <- add column, 1
9999 mem: location 1195 is 1
9999 mem: storing 2 in location 1195
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1191 is 0
9998 run: jumping to instruction 68
 106 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1768
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1207
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1191 is 0
9999 mem: location 1207 is 1150
9999 mem: storing 0 in location 1150
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1200
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1195 is 2
9999 mem: location 1197 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 0 in location 1208
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1200 is 1
9999 mem: location 1208 is 0
9999 mem: storing 0 in location 1209
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 0 in location 1210
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: storing 0 in location 1211
 106 run: jump-unless before-cursor?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 81
 106 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1768
9999 mem: location 1159 is 0
9999 mem: location 1187 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1212
 106 run: *bottom <- copy row
9999 mem: location 1194 is 1
9999 mem: location 1212 is 1154
9999 mem: storing 1 in location 1154
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1194 is 1
9999 mem: location 1195 is 2
9999 mem: location 1186 is 1012
9999 mem: location 1187 is 1147
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1
9998 run: result 1 is 2
9999 mem: storing 1 in location 1167
9999 mem: storing 2 in location 1168
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1163 is 1012
9999 mem: location 1168 is 2
9999 mem: location 1166 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 479 -> 480
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1222
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1223
 106 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1224
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 2
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 480 -> 481
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 263 -> 264
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 12
9999 mem: storing 1044 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 101
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1044
9999 mem: storing 32 in location 1044
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1045
9999 mem: storing 7 in location 1045
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 481 -> 480
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 480 -> 481
 106 run: column <- add column, 1
9999 mem: location 1222 is 2
9999 mem: storing 3 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 3
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 481 -> 482
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 264 -> 265
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 13
9999 mem: storing 1046 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1046
9999 mem: location 1046 is 102
9999 mem: location 1047 is 7
9999 mem: location 1248 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1046
9999 mem: storing 32 in location 1046
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1248 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1047
9999 mem: storing 7 in location 1047
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 482 -> 481
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 481 -> 482
 106 run: column <- add column, 1
9999 mem: location 1222 is 3
9999 mem: storing 4 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 4
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 482 -> 483
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 265 -> 266
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 14
9999 mem: storing 1048 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1248 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1048
9999 mem: storing 32 in location 1048
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1248 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1049
9999 mem: storing 7 in location 1049
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 483 -> 482
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 482 -> 483
 106 run: column <- add column, 1
9999 mem: location 1222 is 4
9999 mem: storing 5 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 5
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 483 -> 484
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 266 -> 267
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 15
9999 mem: storing 1050 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1248 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1050
9999 mem: storing 32 in location 1050
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1248 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1051
9999 mem: storing 7 in location 1051
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 484 -> 483
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 483 -> 484
 106 run: column <- add column, 1
9999 mem: location 1222 is 5
9999 mem: storing 6 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 6
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 484 -> 485
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 267 -> 268
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 16
9999 mem: storing 1052 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1248 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1052
9999 mem: storing 32 in location 1052
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1248 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1053
9999 mem: storing 7 in location 1053
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 485 -> 484
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 484 -> 485
 106 run: column <- add column, 1
9999 mem: location 1222 is 6
9999 mem: storing 7 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 7
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 485 -> 486
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 268 -> 269
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 17
9999 mem: storing 1054 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1248 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1054
9999 mem: storing 32 in location 1054
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1248 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1055
9999 mem: storing 7 in location 1055
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 486 -> 485
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 485 -> 486
 106 run: column <- add column, 1
9999 mem: location 1222 is 7
9999 mem: storing 8 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 8
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 486 -> 487
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 269 -> 270
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 18
9999 mem: storing 1056 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1248 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1249
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run1006/scenario-editor-can-undo-and-redo-delete
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1056
9999 mem: storing 32 in location 1056
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1248 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1057
9999 mem: storing 7 in location 1057
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 487 -> 486
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 486 -> 487
 106 run: column <- add column, 1
9999 mem: location 1222 is 8
9999 mem: storing 9 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 9
9999 mem: location 1223 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1221 is 1012
9999 mem: location 1224 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 487 -> 488
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 270 -> 271
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 19
9999 mem: storing 1058 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1248 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1058
9999 mem: storing 32 in location 1058
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1248 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1059
9999 mem: storing 7 in location 1059
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 488 -> 487
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 487 -> 488
 106 run: column <- add column, 1
9999 mem: location 1222 is 9
9999 mem: storing 10 in location 1222
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1222 is 10
9999 mem: location 1223 is 9
9999 mem: storing 1 in location 1225
 106 run: jump-if done?, 
9999 mem: location 1225 is 1
9998 run: jumping to instruction 11
 106 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1163 is 1012
9999 mem: location 1167 is 2
9999 mem: location 1165 is 0
9999 mem: location 1166 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 488 -> 489
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1257
 106 run: x:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1258
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1259
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1260
9999 mem: storing 1 in location 1261
 106 run: jump-if style-found?, 
9999 mem: location 1261 is 1
9998 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1262
9999 mem: storing 0 in location 1263
 106 run: jump-if color-found?, 
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1262
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 106 run: jump-if bg-color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1264
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1256 is 1012
9999 mem: location 1257 is 2
9999 mem: location 1258 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 489 -> 490
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1222
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 107 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 107 run: *row <- copy new-row
9999 mem: location 1222 is 2
9999 mem: location 1224 is 1015
9999 mem: storing 2 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 107 run: *column <- copy new-column
9999 mem: location 1223 is 0
9999 mem: location 1225 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 490 -> 489
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 489 -> 490
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 0
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 490 -> 491
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 271 -> 272
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 20
9999 mem: storing 1060 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1248 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1060
9999 mem: storing 9480 in location 1060
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1248 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1061
9999 mem: storing 245 in location 1061
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 0
9999 mem: storing 1 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 1
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 491 -> 492
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 272 -> 273
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 21
9999 mem: storing 1062 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1248 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1062
9999 mem: storing 9480 in location 1062
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1248 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1063
9999 mem: storing 245 in location 1063
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 1
9999 mem: storing 2 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 2
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 492 -> 493
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 273 -> 274
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 22
9999 mem: storing 1064 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1248 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1064
9999 mem: storing 9480 in location 1064
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1248 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1065
9999 mem: storing 245 in location 1065
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 2
9999 mem: storing 3 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 3
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 493 -> 494
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 274 -> 275
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 23
9999 mem: storing 1066 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1248 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1066
9999 mem: storing 9480 in location 1066
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1248 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1067
9999 mem: storing 245 in location 1067
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 3
9999 mem: storing 4 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 4
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 494 -> 495
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 275 -> 276
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 24
9999 mem: storing 1068 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1248 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1068
9999 mem: storing 9480 in location 1068
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1248 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1069
9999 mem: storing 245 in location 1069
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 4
9999 mem: storing 5 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 5
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 495 -> 496
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 276 -> 277
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 25
9999 mem: storing 1070 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1248 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1070
9999 mem: storing 9480 in location 1070
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1248 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1071
9999 mem: storing 245 in location 1071
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 5
9999 mem: storing 6 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 6
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 496 -> 497
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 277 -> 278
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 26
9999 mem: storing 1072 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1248 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1072
9999 mem: storing 9480 in location 1072
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1248 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1073
9999 mem: storing 245 in location 1073
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 6
9999 mem: storing 7 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 7
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 497 -> 498
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run1006/scenario-editor-can-undo-and-redo-delete
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 278 -> 279
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 27
9999 mem: storing 1074 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1248 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1074
9999 mem: storing 9480 in location 1074
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1248 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1075
9999 mem: storing 245 in location 1075
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 7
9999 mem: storing 8 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 8
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 498 -> 499
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 279 -> 280
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 28
9999 mem: storing 1076 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1076
9999 mem: location 1076 is 9480
9999 mem: location 1077 is 245
9999 mem: location 1248 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1076
9999 mem: storing 9480 in location 1076
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1076
9999 mem: location 1076 is 9480
9999 mem: location 1077 is 245
9999 mem: location 1248 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1077
9999 mem: storing 245 in location 1077
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 8
9999 mem: storing 9 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 9
9999 mem: location 1259 is 9
9999 mem: storing 1 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1256 is 1012
9999 mem: location 1260 is 9480
9999 mem: location 1262 is 245
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 499 -> 500
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 280 -> 281
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 29
9999 mem: storing 1078 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1078
9999 mem: location 1078 is 9480
9999 mem: location 1079 is 245
9999 mem: location 1248 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 9480
9999 mem: location 1249 is 1078
9999 mem: storing 9480 in location 1078
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1078
9999 mem: location 1078 is 9480
9999 mem: location 1079 is 245
9999 mem: location 1248 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1079
9999 mem: storing 245 in location 1079
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1258 is 9
9999 mem: storing 10 in location 1258
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1258 is 10
9999 mem: location 1259 is 9
9999 mem: storing 0 in location 1266
 106 run: jump-unless continue?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 27
 106 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1163 is 1012
9999 mem: location 1167 is 3
9999 mem: location 1165 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 500 -> 501
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1222
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 106 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1224
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1225
 106 run: jump-if screen, 
9999 mem: location 1221 is 1012
9998 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1221 is 1012
9999 mem: location 1222 is 3
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 501 -> 502
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1271
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 107 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 107 run: *row <- copy new-row
9999 mem: location 1271 is 3
9999 mem: location 1273 is 1015
9999 mem: storing 3 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: *column <- copy new-column
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 502 -> 501
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 501 -> 502
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1221 is 1012
9999 mem: location 1223 is 0
9999 mem: location 1225 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 502 -> 503
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1271
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1272
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1273
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 0
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 503 -> 504
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 281 -> 282
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 30
9999 mem: storing 1080 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1248 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1080
9999 mem: storing 32 in location 1080
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1248 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1081
9999 mem: storing 7 in location 1081
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 504 -> 503
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 503 -> 504
 107 run: column <- add column, 1
9999 mem: location 1271 is 0
9999 mem: storing 1 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 1
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 504 -> 505
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 282 -> 283
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 31
9999 mem: storing 1082 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1248 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1082
9999 mem: storing 32 in location 1082
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1248 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1083
9999 mem: storing 7 in location 1083
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 505 -> 504
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 504 -> 505
 107 run: column <- add column, 1
9999 mem: location 1271 is 1
9999 mem: storing 2 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 2
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 505 -> 506
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 283 -> 284
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 32
9999 mem: storing 1084 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1248 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1084
9999 mem: storing 32 in location 1084
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1248 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1085
9999 mem: storing 7 in location 1085
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 506 -> 505
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 505 -> 506
 107 run: column <- add column, 1
9999 mem: location 1271 is 2
9999 mem: storing 3 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 3
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 506 -> 507
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 33 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 284 -> 285
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 33
9999 mem: storing 1086 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1248 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1086
9999 mem: storing 32 in location 1086
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1248 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1087
9999 mem: storing 7 in location 1087
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 507 -> 506
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 506 -> 507
 107 run: column <- add column, 1
9999 mem: location 1271 is 3
9999 mem: storing 4 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 4
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 507 -> 508
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 34 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 285 -> 286
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 34
9999 mem: storing 1088 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1248 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1088
9999 mem: storing 32 in location 1088
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1248 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1089
9999 mem: storing 7 in location 1089
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 508 -> 507
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 507 -> 508
 107 run: column <- add column, 1
9999 mem: location 1271 is 4
9999 mem: storing 5 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 5
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 508 -> 509
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run1006/scenario-editor-can-undo-and-redo-delete
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 35 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 286 -> 287
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 35
9999 mem: storing 1090 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1248 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1090
9999 mem: storing 32 in location 1090
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1248 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1091
9999 mem: storing 7 in location 1091
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 509 -> 508
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 508 -> 509
 107 run: column <- add column, 1
9999 mem: location 1271 is 5
9999 mem: storing 6 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 6
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 509 -> 510
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 36 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 287 -> 288
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 36
9999 mem: storing 1092 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1248 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1092
9999 mem: storing 32 in location 1092
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1248 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1093
9999 mem: storing 7 in location 1093
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 510 -> 509
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 509 -> 510
 107 run: column <- add column, 1
9999 mem: location 1271 is 6
9999 mem: storing 7 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 7
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 510 -> 511
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 37 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 288 -> 289
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 37
9999 mem: storing 1094 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1248 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1094
9999 mem: storing 32 in location 1094
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1248 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1095
9999 mem: storing 7 in location 1095
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 511 -> 510
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 510 -> 511
 107 run: column <- add column, 1
9999 mem: location 1271 is 7
9999 mem: storing 8 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 8
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 511 -> 512
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 38 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 289 -> 290
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 38
9999 mem: storing 1096 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1248 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1096
9999 mem: storing 32 in location 1096
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1248 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1097
9999 mem: storing 7 in location 1097
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 512 -> 511
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 511 -> 512
 107 run: column <- add column, 1
9999 mem: location 1271 is 8
9999 mem: storing 9 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 9
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 512 -> 513
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 39 in location 1243
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 290 -> 291
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 39
9999 mem: storing 1098 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1248 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1098
9999 mem: storing 32 in location 1098
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1248 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1099
9999 mem: storing 7 in location 1099
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 513 -> 512
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 512 -> 513
 107 run: column <- add column, 1
9999 mem: location 1271 is 9
9999 mem: storing 10 in location 1271
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 10
9999 mem: location 1272 is 9
9999 mem: storing 1 in location 1274
 107 run: jump-if done?, 
9999 mem: location 1274 is 1
9998 run: jumping to instruction 11
 107 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1221 is 1012
9999 mem: location 1222 is 3
9999 mem: location 1224 is 0
9999 mem: location 1225 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 513 -> 514
 107 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1279
 107 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1280
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1281
 107 run: row <- add row, 1
9999 mem: location 1279 is 3
9999 mem: storing 4 in location 1279
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1278 is 1012
9999 mem: location 1279 is 4
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 514 -> 515
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1271
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 108 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 108 run: *row <- copy new-row
9999 mem: location 1271 is 4
9999 mem: location 1273 is 1015
9999 mem: storing 4 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: *column <- copy new-column
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 515 -> 514
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 514 -> 515
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1278 is 1012
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1766
9999 mem: incrementing refcount of 1012: 515 -> 516
 108 run: jump-unless screen, 
9999 mem: location 1766 is 1012
9998 run: jump-unless fell through
 108 run: height <- get *screen, num-rows:offset
9999 mem: location 1766 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1766 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1767
 108 run: reply height:number
9999 mem: location 1767 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1282
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1279 is 4
9999 mem: location 1282 is 5
9999 mem: storing 0 in location 1283
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1283 is 0
9998 run: jump-if fell through
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1278 is 1012
9999 mem: location 1279 is 4
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 516 -> 517
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1271
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 108 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 108 run: *row <- copy new-row
9999 mem: location 1271 is 4
9999 mem: location 1273 is 1015
9999 mem: storing 4 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: *column <- copy new-column
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 517 -> 516
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 516 -> 517
 107 run: clear-line-delimited screen, left, right
9999 mem: location 1278 is 1012
9999 mem: location 1280 is 0
9999 mem: location 1281 is 9
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 517 -> 518
 108 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1271
 108 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1272
 108 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1273
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 0
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 518 -> 519
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 40 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 291 -> 292
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 40
9999 mem: storing 1100 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1248 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1100
9999 mem: storing 32 in location 1100
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1248 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1101
9999 mem: storing 7 in location 1101
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 519 -> 518
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 518 -> 519
 108 run: column <- add column, 1
9999 mem: location 1271 is 0
9999 mem: storing 1 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 1
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 519 -> 520
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 41 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 292 -> 293
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 41
9999 mem: storing 1102 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1248 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1102
9999 mem: storing 32 in location 1102
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1248 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1103
9999 mem: storing 7 in location 1103
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 520 -> 519
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 519 -> 520
 108 run: column <- add column, 1
9999 mem: location 1271 is 1
9999 mem: storing 2 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 2
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 520 -> 521
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 42 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 293 -> 294
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 42
9999 mem: storing 1104 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1248 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1104
9999 mem: storing 32 in location 1104
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1248 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1105
9999 mem: storing 7 in location 1105
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 521 -> 520
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 520 -> 521
 108 run: column <- add column, 1
9999 mem: location 1271 is 2
9999 mem: storing 3 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 3
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 521 -> 522
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run1006/scenario-editor-can-undo-and-redo-delete
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 43 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 294 -> 295
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 43
9999 mem: storing 1106 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1248 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1106
9999 mem: storing 32 in location 1106
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1248 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1107
9999 mem: storing 7 in location 1107
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1239 is 1016
9999 mem: storing 4 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 522 -> 521
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 521 -> 522
 108 run: column <- add column, 1
9999 mem: location 1271 is 3
9999 mem: storing 4 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 4
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 522 -> 523
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 44 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 295 -> 296
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 44
9999 mem: storing 1108 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1248 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1108
9999 mem: storing 32 in location 1108
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1248 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1109
9999 mem: storing 7 in location 1109
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1239 is 1016
9999 mem: storing 5 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 523 -> 522
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 522 -> 523
 108 run: column <- add column, 1
9999 mem: location 1271 is 4
9999 mem: storing 5 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 5
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 523 -> 524
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 45 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 296 -> 297
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 45
9999 mem: storing 1110 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1248 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1110
9999 mem: storing 32 in location 1110
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1248 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1111
9999 mem: storing 7 in location 1111
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1239 is 1016
9999 mem: storing 6 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 524 -> 523
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 523 -> 524
 108 run: column <- add column, 1
9999 mem: location 1271 is 5
9999 mem: storing 6 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 6
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 524 -> 525
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 46 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 297 -> 298
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 46
9999 mem: storing 1112 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1248 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1112
9999 mem: storing 32 in location 1112
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1248 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1113
9999 mem: storing 7 in location 1113
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1239 is 1016
9999 mem: storing 7 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 525 -> 524
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 524 -> 525
 108 run: column <- add column, 1
9999 mem: location 1271 is 6
9999 mem: storing 7 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 7
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 525 -> 526
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 47 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 298 -> 299
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 47
9999 mem: storing 1114 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1248 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1114
9999 mem: storing 32 in location 1114
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1248 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1115
9999 mem: storing 7 in location 1115
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1239 is 1016
9999 mem: storing 8 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 526 -> 525
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 525 -> 526
 108 run: column <- add column, 1
9999 mem: location 1271 is 7
9999 mem: storing 8 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 8
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 526 -> 527
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 48 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 299 -> 300
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 48
9999 mem: storing 1116 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1248 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1116
9999 mem: storing 32 in location 1116
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1248 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1117
9999 mem: storing 7 in location 1117
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1239 is 1016
9999 mem: storing 9 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 527 -> 526
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 526 -> 527
 108 run: column <- add column, 1
9999 mem: location 1271 is 8
9999 mem: storing 9 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 9
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space
9999 mem: location 1270 is 1012
9999 mem: location 1273 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 527 -> 528
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1230
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 109 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 109 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 109 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 109 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 109 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1235 is 10
9999 mem: storing 40 in location 1243
 109 run: index <- add index, *column
9999 mem: location 1243 is 40
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 49 in location 1243
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 300 -> 301
 109 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 49
9999 mem: storing 1118 in location 1248
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1248 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1249
 109 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1118
9999 mem: storing 32 in location 1118
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1248 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1250
 109 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1119
9999 mem: storing 7 in location 1119
 109 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1251 is 9
9999 mem: storing 1 in location 1252
 109 run: jump-if at-right?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 74
 109 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 528 -> 527
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 527 -> 528
 108 run: column <- add column, 1
9999 mem: location 1271 is 9
9999 mem: storing 10 in location 1271
 108 run: jump 
9998 run: jumping to instruction 6
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1271 is 10
9999 mem: location 1272 is 9
9999 mem: storing 1 in location 1274
 108 run: jump-if done?, 
9999 mem: location 1274 is 1
9998 run: jumping to instruction 11
 108 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
 107 run: row <- add row, 1
9999 mem: location 1279 is 4
9999 mem: storing 5 in location 1279
 107 run: jump 
9998 run: jumping to instruction 9
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1279 is 5
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1283
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1283 is 1
9998 run: jumping to instruction 15
 107 run: reply screen:address:shared:screen
9999 mem: location 1278 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data
9999 mem: location 1163 is 1012
9999 mem: location 1164 is 1147
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 528 -> 527
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 527 -> 528
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1768
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1339
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1768
9999 mem: location 1159 is 0
9999 mem: location 1338 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1340
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1336 is 1012
9999 mem: location 1339 is 1
9999 mem: location 1340 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 528 -> 529
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1223
 105 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 105 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 105 run: *column <- copy new-column
9999 mem: location 1223 is 1
9999 mem: location 1225 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 529 -> 528
9999 mem: storing 1012 in location 1336
9999 mem: incrementing refcount of 1012: 528 -> 529
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1337 is 1760
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1760 in location 1256
9999 mem: incrementing refcount of 1760: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1256 is 1760
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1761 is 1
9999 mem: location 1762 is 1754
9999 mem: location 1256 is 1760
9999 mem: skipping refcount at 1760
9998 run: address to copy is 1761
9999 mem: storing 1761 in location 1257
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1761 is 1
9999 mem: location 1762 is 1754
9999 mem: location 1256 is 1760
9999 mem: skipping refcount at 1760
9998 run: address to copy is 1762
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1762 is 1754
9999 mem: storing 1754 in location 1258
9999 mem: incrementing refcount of 1754: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1258 is 1754
9999 mem: skipping refcount at 1754
9999 mem: storing 1 in location 1259
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1761
9999 mem: location 1761 is 1
9999 mem: location 1259 is 1
9999 mem: storing 1 in location 1260
 105 run: jump-unless done?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1763 in location 1261
9999 mem: incrementing refcount of 1763: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1261 is 1763
9999 mem: skipping refcount at 1763
9999 mem: location 1764 is 0
9999 mem: location 1765 is 0
9999 mem: location 1766 is 0
9999 mem: location 1767 is 0
9999 mem: location 1256 is 1760
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1760
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: decrementing refcount of 1760: 3 -> 2
9999 mem: storing 1760 in location 1337
9999 mem: incrementing refcount of 1760: 2 -> 3
9999 mem: storing 1 in location 1345
9999 mem: storing 1 in location 1346
 104 run: jump-unless found?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1346 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1336 is 1012
9999 mem: location 1337 is 1760
9999 mem: location 1338 is 1147
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1768
9999 mem: location 1159 is 0
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 3
 102 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1768
9999 mem: location 1159 is 0
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 4
 102 run: memory-should-contain [
    3 <- 1
    4 <- 1
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: screen-should-contain [
    .          .
    .af        .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
