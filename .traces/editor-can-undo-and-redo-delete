9999 parse: instruction: assume-screen
9999 parse:   ingredient: {"10": "literal", "width": <>}
9999 parse:   ingredient: {"5": "literal", "height": <>}
9999 parse: instruction: new
9999 parse:   ingredient: {"": "literal-string"}
9999 parse:   product: {"1": <"address" : <"array" : "character">>}
9999 parse: instruction: new-editor
9999 parse:   ingredient: {"1": <"address" : <"array" : "character">>}
9999 parse:   ingredient: {"screen": "address"}
9999 parse:   ingredient: {"0": "literal", "left": <>}
9999 parse:   ingredient: {"10": "literal", "right": <>}
9999 parse:   product: {"2": <"address" : "editor-data">}
9999 parse: instruction: editor-render
9999 parse:   ingredient: {"screen": <>}
9999 parse:   ingredient: {"2": <"address" : "editor-data">}
9999 parse: instruction: assume-console
9999 parse:   ingredient: {"\n    type [abcdef]\n    left-click 1, 2\n    press delete\n    press backspace\n    press delete\n    press delete\n  ": "literal-string"}
9999 parse: instruction: editor-event-loop
9999 parse:   ingredient: {"screen": "address"}
9999 parse:   ingredient: {"console": "address"}
9999 parse:   ingredient: {"2": <"address" : "editor-data">}
9999 parse: instruction: screen-should-contain
9999 parse:   ingredient: {"\n    .          .\n    .af        .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9999 parse: instruction: get
9999 parse:   ingredient: {"*2": <"address" : "editor-data">, "lookup": <>}
9999 parse:   ingredient: {"cursor-row": "offset"}
9999 parse:   product: {"3": "number"}
9999 parse: instruction: get
9999 parse:   ingredient: {"*2": <"address" : "editor-data">, "lookup": <>}
9999 parse:   ingredient: {"cursor-column": "offset"}
9999 parse:   product: {"4": "number"}
9999 parse: instruction: memory-should-contain
9999 parse:   ingredient: {"\n    3 <- 1\n    4 <- 1\n  ": "literal-string"}
9999 parse: instruction: assume-console
9999 parse:   ingredient: {"\n    press ctrl-z\n  ": "literal-string"}
9999 parse: instruction: run
9999 parse:   ingredient: {"\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ": "literal-string"}
9999 parse: instruction: get
9999 parse:   ingredient: {"*2": <"address" : "editor-data">, "lookup": <>}
9999 parse:   ingredient: {"cursor-row": "offset"}
9999 parse:   product: {"3": "number"}
9999 parse: instruction: get
9999 parse:   ingredient: {"*2": <"address" : "editor-data">, "lookup": <>}
9999 parse:   ingredient: {"cursor-column": "offset"}
9999 parse:   product: {"4": "number"}
9999 parse: instruction: memory-should-contain
9999 parse:   ingredient: {"\n    3 <- 1\n    4 <- 1\n  ": "literal-string"}
9999 parse: instruction: screen-should-contain
9999 parse:   ingredient: {"\n    .          .\n    .adef      .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9999 parse: instruction: assume-console
9999 parse:   ingredient: {"\n    press ctrl-z\n  ": "literal-string"}
9999 parse: instruction: run
9999 parse:   ingredient: {"\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ": "literal-string"}
9999 parse: instruction: get
9999 parse:   ingredient: {"*2": <"address" : "editor-data">, "lookup": <>}
9999 parse:   ingredient: {"cursor-row": "offset"}
9999 parse:   product: {"3": "number"}
9999 parse: instruction: get
9999 parse:   ingredient: {"*2": <"address" : "editor-data">, "lookup": <>}
9999 parse:   ingredient: {"cursor-column": "offset"}
9999 parse:   product: {"4": "number"}
9999 parse: instruction: memory-should-contain
9999 parse:   ingredient: {"\n    3 <- 1\n    4 <- 2\n  ": "literal-string"}
9999 parse: instruction: screen-should-contain
9999 parse:   ingredient: {"\n    .          .\n    .abdef     .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9999 parse: instruction: assume-console
9999 parse:   ingredient: {"\n    press ctrl-z\n  ": "literal-string"}
9999 parse: instruction: run
9999 parse:   ingredient: {"\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ": "literal-string"}
9999 parse: instruction: get
9999 parse:   ingredient: {"*2": <"address" : "editor-data">, "lookup": <>}
9999 parse:   ingredient: {"cursor-row": "offset"}
9999 parse:   product: {"3": "number"}
9999 parse: instruction: get
9999 parse:   ingredient: {"*2": <"address" : "editor-data">, "lookup": <>}
9999 parse:   ingredient: {"cursor-column": "offset"}
9999 parse:   product: {"4": "number"}
9999 parse: instruction: memory-should-contain
9999 parse:   ingredient: {"\n    3 <- 1\n    4 <- 2\n  ": "literal-string"}
9999 parse: instruction: screen-should-contain
9999 parse:   ingredient: {"\n    .          .\n    .abcdef    .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9999 parse: instruction: assume-console
9999 parse:   ingredient: {"\n    press ctrl-y\n  ": "literal-string"}
9999 parse: instruction: run
9999 parse:   ingredient: {"\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ": "literal-string"}
9999 parse: instruction: get
9999 parse:   ingredient: {"*2": <"address" : "editor-data">, "lookup": <>}
9999 parse:   ingredient: {"cursor-row": "offset"}
9999 parse:   product: {"3": "number"}
9999 parse: instruction: get
9999 parse:   ingredient: {"*2": <"address" : "editor-data">, "lookup": <>}
9999 parse:   ingredient: {"cursor-column": "offset"}
9999 parse:   product: {"4": "number"}
9999 parse: instruction: memory-should-contain
9999 parse:   ingredient: {"\n    3 <- 1\n    4 <- 2\n  ": "literal-string"}
9999 parse: instruction: screen-should-contain
9999 parse:   ingredient: {"\n    .          .\n    .abdef     .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9999 parse: instruction: assume-console
9999 parse:   ingredient: {"\n    press ctrl-y\n  ": "literal-string"}
9999 parse: instruction: run
9999 parse:   ingredient: {"\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ": "literal-string"}
9999 parse: instruction: get
9999 parse:   ingredient: {"*2": <"address" : "editor-data">, "lookup": <>}
9999 parse:   ingredient: {"cursor-row": "offset"}
9999 parse:   product: {"3": "number"}
9999 parse: instruction: get
9999 parse:   ingredient: {"*2": <"address" : "editor-data">, "lookup": <>}
9999 parse:   ingredient: {"cursor-column": "offset"}
9999 parse:   product: {"4": "number"}
9999 parse: instruction: memory-should-contain
9999 parse:   ingredient: {"\n    3 <- 1\n    4 <- 1\n  ": "literal-string"}
9999 parse: instruction: screen-should-contain
9999 parse:   ingredient: {"\n    .          .\n    .adef      .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9999 parse: instruction: assume-console
9999 parse:   ingredient: {"\n    press ctrl-y\n  ": "literal-string"}
9999 parse: instruction: run
9999 parse:   ingredient: {"\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ": "literal-string"}
9999 parse: instruction: get
9999 parse:   ingredient: {"*2": <"address" : "editor-data">, "lookup": <>}
9999 parse:   ingredient: {"cursor-row": "offset"}
9999 parse:   product: {"3": "number"}
9999 parse: instruction: get
9999 parse:   ingredient: {"*2": <"address" : "editor-data">, "lookup": <>}
9999 parse:   ingredient: {"cursor-column": "offset"}
9999 parse:   product: {"4": "number"}
9999 parse: instruction: memory-should-contain
9999 parse:   ingredient: {"\n    3 <- 1\n    4 <- 1\n  ": "literal-string"}
9999 parse: instruction: screen-should-contain
9999 parse:   ingredient: {"\n    .          .\n    .af        .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9999 name: element cursor-row of type editor-data is at offset 6
9999 name: element cursor-column of type editor-data is at offset 7
9999 name: element cursor-row of type editor-data is at offset 6
9999 name: element cursor-column of type editor-data is at offset 7
9999 name: element cursor-row of type editor-data is at offset 6
9999 name: element cursor-column of type editor-data is at offset 7
9999 name: element cursor-row of type editor-data is at offset 6
9999 name: element cursor-column of type editor-data is at offset 7
9999 name: element cursor-row of type editor-data is at offset 6
9999 name: element cursor-column of type editor-data is at offset 7
9999 name: element cursor-row of type editor-data is at offset 6
9999 name: element cursor-column of type editor-data is at offset 7
9999 name: element cursor-row of type editor-data is at offset 6
9999 name: element cursor-column of type editor-data is at offset 7
9999 after-brace: recipe scenario-editor-can-undo-and-redo-delete
9999 after-brace: new-fake-screen ...
9999 after-brace: new ...
9999 after-brace: new-editor ...
9999 after-brace: editor-render ...
9999 after-brace: assume-console ...
9999 after-brace: editor-event-loop ...
9999 after-brace: screen-should-contain ...
9999 after-brace: get ...
9999 after-brace: get ...
9999 after-brace: memory-should-contain ...
9999 after-brace: assume-console ...
9999 after-brace: run ...
9999 after-brace: get ...
9999 after-brace: get ...
9999 after-brace: memory-should-contain ...
9999 after-brace: screen-should-contain ...
9999 after-brace: assume-console ...
9999 after-brace: run ...
9999 after-brace: get ...
9999 after-brace: get ...
9999 after-brace: memory-should-contain ...
9999 after-brace: screen-should-contain ...
9999 after-brace: assume-console ...
9999 after-brace: run ...
9999 after-brace: get ...
9999 after-brace: get ...
9999 after-brace: memory-should-contain ...
9999 after-brace: screen-should-contain ...
9999 after-brace: assume-console ...
9999 after-brace: run ...
9999 after-brace: get ...
9999 after-brace: get ...
9999 after-brace: memory-should-contain ...
9999 after-brace: screen-should-contain ...
9999 after-brace: assume-console ...
9999 after-brace: run ...
9999 after-brace: get ...
9999 after-brace: get ...
9999 after-brace: memory-should-contain ...
9999 after-brace: screen-should-contain ...
9999 after-brace: assume-console ...
9999 after-brace: run ...
9999 after-brace: get ...
9999 after-brace: get ...
9999 after-brace: memory-should-contain ...
9999 after-brace: screen-should-contain ...
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9999 schedule: scenario-editor-can-undo-and-redo-delete
 102 run: screen:address <- new-fake-screen 10/width, 5/height
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: new alloc: 1000
 103 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1009
9999 mem: storing 1009 in location 1002
 103 run: width:address:number <- get-address *result, num-columns:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1010
9999 mem: storing 1010 in location 1003
 103 run: *width <- next-ingredient 
9999 mem: location 1003 is 1010
9999 mem: storing 10 in location 1010
 103 run: height:address:number <- get-address *result, num-rows:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1009
9999 mem: storing 1009 in location 1004
 103 run: *height <- next-ingredient 
9999 mem: location 1004 is 1009
9999 mem: storing 5 in location 1009
 103 run: row:address:number <- get-address *result, cursor-row:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1005
 103 run: *row <- copy 0
9999 mem: location 1005 is 1011
9999 mem: storing 0 in location 1011
 103 run: column:address:number <- get-address *result, cursor-column:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1006
 103 run: *column <- copy 0
9999 mem: location 1006 is 1012
9999 mem: storing 0 in location 1012
 103 run: bufsize:number <- multiply *width, *height
9999 mem: location 1003 is 1010
9999 mem: location 1010 is 10
9999 mem: location 1004 is 1009
9999 mem: location 1009 is 5
9999 mem: storing 50 in location 1007
 103 run: buf:address:address:array:screen-cell <- get-address *result, data:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1013
9999 mem: storing 1013 in location 1008
 103 run: *buf <- new screen-cell:type, bufsize
9999 mem: location 1007 is 50
9999 mem: array size is 50
9999 mem: new alloc: 1014
9999 mem: location 1008 is 1013
9999 mem: storing 1014 in location 1013
 103 run: clear-screen result
9999 mem: location 1002 is 1009
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1115
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1117
 104 run: break-unless sc, 
9999 mem: location 1117 is 1009
9999 run: jump-unless fell through
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1117 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1117 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1118
 104 run: max:number <- length *buf
9999 mem: location 1118 is 1014
9999 mem: storing 50 in location 1119
 104 run: i:number <- copy 0
9999 mem: storing 0 in location 1120
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 0
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 0
9999 mem: storing 1015 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1122 is 1015
9999 run: address to copy is 1015
9999 mem: storing 1015 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1015
9999 mem: storing 0 in location 1015
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1122 is 1015
9999 run: address to copy is 1016
9999 mem: storing 1016 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1016
9999 mem: storing 7 in location 1016
 104 run: i <- add i, 1
9999 mem: location 1120 is 0
9999 mem: storing 1 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 1
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 1
9999 mem: storing 1017 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1122 is 1017
9999 run: address to copy is 1017
9999 mem: storing 1017 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1017
9999 mem: storing 0 in location 1017
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1122 is 1017
9999 run: address to copy is 1018
9999 mem: storing 1018 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1018
9999 mem: storing 7 in location 1018
 104 run: i <- add i, 1
9999 mem: location 1120 is 1
9999 mem: storing 2 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 2
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 2
9999 mem: storing 1019 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1122 is 1019
9999 run: address to copy is 1019
9999 mem: storing 1019 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1019
9999 mem: storing 0 in location 1019
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1122 is 1019
9999 run: address to copy is 1020
9999 mem: storing 1020 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1020
9999 mem: storing 7 in location 1020
 104 run: i <- add i, 1
9999 mem: location 1120 is 2
9999 mem: storing 3 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 3
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 3
9999 mem: storing 1021 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1122 is 1021
9999 run: address to copy is 1021
9999 mem: storing 1021 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1021
9999 mem: storing 0 in location 1021
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1122 is 1021
9999 run: address to copy is 1022
9999 mem: storing 1022 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1022
9999 mem: storing 7 in location 1022
 104 run: i <- add i, 1
9999 mem: location 1120 is 3
9999 mem: storing 4 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 4
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 4
9999 mem: storing 1023 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1122 is 1023
9999 run: address to copy is 1023
9999 mem: storing 1023 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1023
9999 mem: storing 0 in location 1023
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1122 is 1023
9999 run: address to copy is 1024
9999 mem: storing 1024 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1024
9999 mem: storing 7 in location 1024
 104 run: i <- add i, 1
9999 mem: location 1120 is 4
9999 mem: storing 5 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 5
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 5
9999 mem: storing 1025 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1122 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1025
9999 mem: storing 0 in location 1025
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1122 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1026
9999 mem: storing 7 in location 1026
 104 run: i <- add i, 1
9999 mem: location 1120 is 5
9999 mem: storing 6 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 6
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 6
9999 mem: storing 1027 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1122 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1027
9999 mem: storing 0 in location 1027
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1122 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1028
9999 mem: storing 7 in location 1028
 104 run: i <- add i, 1
9999 mem: location 1120 is 6
9999 mem: storing 7 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 7
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 7
9999 mem: storing 1029 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1122 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1029
9999 mem: storing 0 in location 1029
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1122 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1030
9999 mem: storing 7 in location 1030
 104 run: i <- add i, 1
9999 mem: location 1120 is 7
9999 mem: storing 8 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 8
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 8
9999 mem: storing 1031 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1122 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1031
9999 mem: storing 0 in location 1031
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1122 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1032
9999 mem: storing 7 in location 1032
 104 run: i <- add i, 1
9999 mem: location 1120 is 8
9999 mem: storing 9 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 9
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 9
9999 mem: storing 1033 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1122 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1033
9999 mem: storing 0 in location 1033
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1122 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1034
9999 mem: storing 7 in location 1034
 104 run: i <- add i, 1
9999 mem: location 1120 is 9
9999 mem: storing 10 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 10
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 10
9999 mem: storing 1035 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1122 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1035
9999 mem: storing 0 in location 1035
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1122 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1036
9999 mem: storing 7 in location 1036
 104 run: i <- add i, 1
9999 mem: location 1120 is 10
9999 mem: storing 11 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 11
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 11
9999 mem: storing 1037 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1122 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1037
9999 mem: storing 0 in location 1037
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1122 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1038
9999 mem: storing 7 in location 1038
 104 run: i <- add i, 1
9999 mem: location 1120 is 11
9999 mem: storing 12 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 12
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 12
9999 mem: storing 1039 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1122 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1039
9999 mem: storing 0 in location 1039
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1122 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1040
9999 mem: storing 7 in location 1040
 104 run: i <- add i, 1
9999 mem: location 1120 is 12
9999 mem: storing 13 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 13
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 13
9999 mem: storing 1041 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1122 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1041
9999 mem: storing 0 in location 1041
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1122 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1042
9999 mem: storing 7 in location 1042
 104 run: i <- add i, 1
9999 mem: location 1120 is 13
9999 mem: storing 14 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 14
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 14
9999 mem: storing 1043 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1122 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1043
9999 mem: storing 0 in location 1043
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1122 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1044
9999 mem: storing 7 in location 1044
 104 run: i <- add i, 1
9999 mem: location 1120 is 14
9999 mem: storing 15 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 15
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 15
9999 mem: storing 1045 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1122 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1045
9999 mem: storing 0 in location 1045
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1122 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1046
9999 mem: storing 7 in location 1046
 104 run: i <- add i, 1
9999 mem: location 1120 is 15
9999 mem: storing 16 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 16
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 16
9999 mem: storing 1047 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1122 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1047
9999 mem: storing 0 in location 1047
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1122 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1048
9999 mem: storing 7 in location 1048
 104 run: i <- add i, 1
9999 mem: location 1120 is 16
9999 mem: storing 17 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 17
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 17
9999 mem: storing 1049 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1122 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1049
9999 mem: storing 0 in location 1049
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1122 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1050
9999 mem: storing 7 in location 1050
 104 run: i <- add i, 1
9999 mem: location 1120 is 17
9999 mem: storing 18 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 18
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 18
9999 mem: storing 1051 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1122 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1051
9999 mem: storing 0 in location 1051
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1122 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1052
9999 mem: storing 7 in location 1052
 104 run: i <- add i, 1
9999 mem: location 1120 is 18
9999 mem: storing 19 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 19
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 19
9999 mem: storing 1053 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1122 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1053
9999 mem: storing 0 in location 1053
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1122 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1054
9999 mem: storing 7 in location 1054
 104 run: i <- add i, 1
9999 mem: location 1120 is 19
9999 mem: storing 20 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 20
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 20
9999 mem: storing 1055 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1122 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1055
9999 mem: storing 0 in location 1055
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1122 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1056
9999 mem: storing 7 in location 1056
 104 run: i <- add i, 1
9999 mem: location 1120 is 20
9999 mem: storing 21 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 21
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 21
9999 mem: storing 1057 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1122 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1057
9999 mem: storing 0 in location 1057
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1122 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1058
9999 mem: storing 7 in location 1058
 104 run: i <- add i, 1
9999 mem: location 1120 is 21
9999 mem: storing 22 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 22
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 22
9999 mem: storing 1059 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1122 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1059
9999 mem: storing 0 in location 1059
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1122 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1060
9999 mem: storing 7 in location 1060
 104 run: i <- add i, 1
9999 mem: location 1120 is 22
9999 mem: storing 23 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 23
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 23
9999 mem: storing 1061 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1122 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1061
9999 mem: storing 0 in location 1061
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1122 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1062
9999 mem: storing 7 in location 1062
 104 run: i <- add i, 1
9999 mem: location 1120 is 23
9999 mem: storing 24 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 24
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 24
9999 mem: storing 1063 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1122 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1063
9999 mem: storing 0 in location 1063
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1122 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1064
9999 mem: storing 7 in location 1064
 104 run: i <- add i, 1
9999 mem: location 1120 is 24
9999 mem: storing 25 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 25
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 25
9999 mem: storing 1065 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1122 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1065
9999 mem: storing 0 in location 1065
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1122 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1066
9999 mem: storing 7 in location 1066
 104 run: i <- add i, 1
9999 mem: location 1120 is 25
9999 mem: storing 26 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 26
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 26
9999 mem: storing 1067 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1122 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1067
9999 mem: storing 0 in location 1067
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1122 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1068
9999 mem: storing 7 in location 1068
 104 run: i <- add i, 1
9999 mem: location 1120 is 26
9999 mem: storing 27 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 27
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 27
9999 mem: storing 1069 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1122 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1069
9999 mem: storing 0 in location 1069
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1122 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1070
9999 mem: storing 7 in location 1070
 104 run: i <- add i, 1
9999 mem: location 1120 is 27
9999 mem: storing 28 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 28
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 28
9999 mem: storing 1071 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1122 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1071
9999 mem: storing 0 in location 1071
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1122 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1072
9999 mem: storing 7 in location 1072
 104 run: i <- add i, 1
9999 mem: location 1120 is 28
9999 mem: storing 29 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 29
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 29
9999 mem: storing 1073 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1122 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1073
9999 mem: storing 0 in location 1073
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1122 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1074
9999 mem: storing 7 in location 1074
 104 run: i <- add i, 1
9999 mem: location 1120 is 29
9999 mem: storing 30 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 30
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 30
9999 mem: storing 1075 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1122 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1075
9999 mem: storing 0 in location 1075
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1122 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1076
9999 mem: storing 7 in location 1076
 104 run: i <- add i, 1
9999 mem: location 1120 is 30
9999 mem: storing 31 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 31
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 31
9999 mem: storing 1077 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1122 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1077
9999 mem: storing 0 in location 1077
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1122 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1078
9999 mem: storing 7 in location 1078
 104 run: i <- add i, 1
9999 mem: location 1120 is 31
9999 mem: storing 32 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 32
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 32
9999 mem: storing 1079 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1122 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1079
9999 mem: storing 0 in location 1079
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1122 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1080
9999 mem: storing 7 in location 1080
 104 run: i <- add i, 1
9999 mem: location 1120 is 32
9999 mem: storing 33 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 33
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 33
9999 mem: storing 1081 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1122 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1081
9999 mem: storing 0 in location 1081
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1122 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1082
9999 mem: storing 7 in location 1082
 104 run: i <- add i, 1
9999 mem: location 1120 is 33
9999 mem: storing 34 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 34
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 34
9999 mem: storing 1083 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1122 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1083
9999 mem: storing 0 in location 1083
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1122 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1084
9999 mem: storing 7 in location 1084
 104 run: i <- add i, 1
9999 mem: location 1120 is 34
9999 mem: storing 35 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 35
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 35
9999 mem: storing 1085 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1122 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1085
9999 mem: storing 0 in location 1085
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1122 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1086
9999 mem: storing 7 in location 1086
 104 run: i <- add i, 1
9999 mem: location 1120 is 35
9999 mem: storing 36 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 36
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 36
9999 mem: storing 1087 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1122 is 1087
9999 run: address to copy is 1087
9999 mem: storing 1087 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1087
9999 mem: storing 0 in location 1087
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1122 is 1087
9999 run: address to copy is 1088
9999 mem: storing 1088 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1088
9999 mem: storing 7 in location 1088
 104 run: i <- add i, 1
9999 mem: location 1120 is 36
9999 mem: storing 37 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 37
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 37
9999 mem: storing 1089 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1122 is 1089
9999 run: address to copy is 1089
9999 mem: storing 1089 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1089
9999 mem: storing 0 in location 1089
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1122 is 1089
9999 run: address to copy is 1090
9999 mem: storing 1090 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1090
9999 mem: storing 7 in location 1090
 104 run: i <- add i, 1
9999 mem: location 1120 is 37
9999 mem: storing 38 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 38
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 38
9999 mem: storing 1091 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1122 is 1091
9999 run: address to copy is 1091
9999 mem: storing 1091 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1091
9999 mem: storing 0 in location 1091
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1122 is 1091
9999 run: address to copy is 1092
9999 mem: storing 1092 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1092
9999 mem: storing 7 in location 1092
 104 run: i <- add i, 1
9999 mem: location 1120 is 38
9999 mem: storing 39 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 39
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 39
9999 mem: storing 1093 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1122 is 1093
9999 run: address to copy is 1093
9999 mem: storing 1093 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1093
9999 mem: storing 0 in location 1093
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1122 is 1093
9999 run: address to copy is 1094
9999 mem: storing 1094 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1094
9999 mem: storing 7 in location 1094
 104 run: i <- add i, 1
9999 mem: location 1120 is 39
9999 mem: storing 40 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 40
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 40
9999 mem: storing 1095 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1122 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1095
9999 mem: storing 0 in location 1095
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1122 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1096
9999 mem: storing 7 in location 1096
 104 run: i <- add i, 1
9999 mem: location 1120 is 40
9999 mem: storing 41 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 41
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 41
9999 mem: storing 1097 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1122 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1097
9999 mem: storing 0 in location 1097
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1122 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1098
9999 mem: storing 7 in location 1098
 104 run: i <- add i, 1
9999 mem: location 1120 is 41
9999 mem: storing 42 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 42
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 42
9999 mem: storing 1099 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1122 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1099
9999 mem: storing 0 in location 1099
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1122 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1100
9999 mem: storing 7 in location 1100
 104 run: i <- add i, 1
9999 mem: location 1120 is 42
9999 mem: storing 43 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 43
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 43
9999 mem: storing 1101 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1122 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1101
9999 mem: storing 0 in location 1101
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1122 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1102
9999 mem: storing 7 in location 1102
 104 run: i <- add i, 1
9999 mem: location 1120 is 43
9999 mem: storing 44 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 44
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 44
9999 mem: storing 1103 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1122 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1103
9999 mem: storing 0 in location 1103
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1122 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1104
9999 mem: storing 7 in location 1104
 104 run: i <- add i, 1
9999 mem: location 1120 is 44
9999 mem: storing 45 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 45
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 45
9999 mem: storing 1105 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1122 is 1105
9999 run: address to copy is 1105
9999 mem: storing 1105 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1105
9999 mem: storing 0 in location 1105
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1122 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1106
9999 mem: storing 7 in location 1106
 104 run: i <- add i, 1
9999 mem: location 1120 is 45
9999 mem: storing 46 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 46
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 46
9999 mem: storing 1107 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1122 is 1107
9999 run: address to copy is 1107
9999 mem: storing 1107 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1107
9999 mem: storing 0 in location 1107
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1122 is 1107
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1108
9999 mem: storing 7 in location 1108
 104 run: i <- add i, 1
9999 mem: location 1120 is 46
9999 mem: storing 47 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 47
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 47
9999 mem: storing 1109 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1122 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1109
9999 mem: storing 0 in location 1109
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1122 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1110
9999 mem: storing 7 in location 1110
 104 run: i <- add i, 1
9999 mem: location 1120 is 47
9999 mem: storing 48 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 48
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 48
9999 mem: storing 1111 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1122 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1111
9999 mem: storing 0 in location 1111
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1122 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1112
9999 mem: storing 7 in location 1112
 104 run: i <- add i, 1
9999 mem: location 1120 is 48
9999 mem: storing 49 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 49
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 49
9999 mem: storing 1113 in location 1122
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1122 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1123
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1123 is 1113
9999 mem: storing 0 in location 1113
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1122 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1122 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1124
 104 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1114
9999 mem: storing 7 in location 1114
 104 run: i <- add i, 1
9999 mem: location 1120 is 49
9999 mem: storing 50 in location 1120
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 50
9999 mem: location 1119 is 50
9999 mem: storing 1 in location 1121
 104 run: break-if done?, 
9999 mem: location 1121 is 1
9999 run: jumping to instruction 17
 104 run: x:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1117 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1117 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1125
 104 run: *x <- copy 0
9999 mem: location 1125 is 1011
9999 mem: storing 0 in location 1011
 104 run: x <- get-address *sc, cursor-column:offset
9999 mem: location 1117 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1117 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1125
 104 run: *x <- copy 0
9999 mem: location 1125 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1117 is 1009
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply result
9999 mem: location 1002 is 1009
9999 trace: reply: decrementing callstack depth from 2
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 900
 102 run: 1:address:array:character <- new []
9999 mem: storing 1126 in location 1
 102 run: 2:address:editor-data <- new-editor 1:address:array:character, screen:address, 0/left, 10/right
9999 mem: location 1 is 1126
9999 mem: location 900 is 1009
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: new alloc: 1127
 103 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1126 in location 1129
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1130
 103 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1131
 103 run: right:number <- next-ingredient 
9999 mem: storing 10 in location 1132
 103 run: right <- subtract right, 1
9999 mem: location 1132 is 10
9999 mem: storing 9 in location 1132
 103 run: result:address:editor-data <- new editor-data:type
9999 mem: storing 1115 in location 1133
 103 run: x:address:number <- get-address *result, left:offset
9999 mem: location 1133 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1133 is 1115
9999 run: address to copy is 1119
9999 mem: storing 1119 in location 1134
 103 run: *x <- copy left
9999 mem: location 1131 is 0
9999 mem: location 1134 is 1119
9999 mem: storing 0 in location 1119
 103 run: x <- get-address *result, right:offset
9999 mem: location 1133 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1133 is 1115
9999 run: address to copy is 1120
9999 mem: storing 1120 in location 1134
 103 run: *x <- copy right
9999 mem: location 1132 is 9
9999 mem: location 1134 is 1120
9999 mem: storing 9 in location 1120
 103 run: x <- get-address *result, cursor-row:offset
9999 mem: location 1133 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 0
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1133 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1134
 103 run: *x <- copy 1/top
9999 mem: location 1134 is 1121
9999 mem: storing 1 in location 1121
 103 run: x <- get-address *result, cursor-column:offset
9999 mem: location 1133 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1133 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1134
 103 run: *x <- copy left
9999 mem: location 1131 is 0
9999 mem: location 1134 is 1122
9999 mem: storing 0 in location 1122
 103 run: init:address:address:duplex-list <- get-address *result, data:offset
9999 mem: location 1133 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1133 is 1115
9999 run: address to copy is 1115
9999 mem: storing 1115 in location 1135
9999 schedule: new-editor/scenario-editor-can-undo-and-redo-delete
 103 run: *init <- push-duplex 167/§, 0/tail
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1139
 104 run: x:character <- next-ingredient 
9999 mem: storing 167 in location 1141
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1142
 104 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1147
9999 mem: storing 1147 in location 1143
 104 run: val:address:character <- get-address *result, value:offset
9999 mem: location 1143 is 1147
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1143 is 1147
9999 run: address to copy is 1147
9999 mem: storing 1147 in location 1144
 104 run: *val <- copy x
9999 mem: location 1141 is 167
9999 mem: location 1144 is 1147
9999 mem: storing 167 in location 1147
 104 run: next:address:address:duplex-list <- get-address *result, next:offset
9999 mem: location 1143 is 1147
9999 mem: location 1147 is 167
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1143 is 1147
9999 run: address to copy is 1148
9999 mem: storing 1148 in location 1145
 104 run: *next <- copy in
9999 mem: location 1142 is 0
9999 mem: location 1145 is 1148
9999 mem: storing 0 in location 1148
 104 run: jump-if in, 1:offset
9999 mem: location 1142 is 0
9999 run: jump-if fell through
 104 run: reply result
9999 mem: location 1143 is 1147
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1147
9999 mem: location 1135 is 1115
9999 mem: storing 1147 in location 1115
 103 run: top-of-screen:address:address:duplex-list <- get-address *result, top-of-screen:offset
9999 mem: location 1133 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1133 is 1115
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1136
 103 run: *top-of-screen <- copy *init
9999 mem: location 1135 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1136 is 1116
9999 mem: storing 1147 in location 1116
 103 run: y:address:address:duplex-list <- get-address *result, before-cursor:offset
9999 mem: location 1133 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1133 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1137
 103 run: *y <- copy *init
9999 mem: location 1135 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1137 is 1118
9999 mem: storing 1147 in location 1118
 103 run: result <- insert-text result, s
9999 mem: location 1133 is 1115
9999 mem: location 1129 is 1126
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1002
 104 run: text:address:array:character <- next-ingredient 
9999 mem: storing 1126 in location 1003
 104 run: jump-if text, 1:offset
9999 mem: location 1003 is 1126
9999 run: jumping to instruction 5
 104 run: len:number <- length *text
9999 mem: location 1003 is 1126
9999 mem: storing 0 in location 1004
 104 run: jump-if len, 1:offset
9999 mem: location 1004 is 0
9999 run: jump-if fell through
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1002 is 1115
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1133
 103 run: y <- get-address *result, before-cursor:offset
9999 mem: location 1133 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1133 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1137
 103 run: *y <- copy *init
9999 mem: location 1135 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1137 is 1118
9999 mem: storing 1147 in location 1118
 103 run: _, _, screen, result <- render screen, result
9999 mem: location 1130 is 1009
9999 mem: location 1133 is 1115
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: new alloc: 1150
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1152
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1153
 104 run: jump-if editor, 1:offset
9999 mem: location 1153 is 1115
9999 run: jumping to instruction 5
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1154
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1152 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1177
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 105 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 105 run: reply height
9999 mem: location 1180 is 5
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 5
9999 mem: storing 5 in location 1155
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1156
 104 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1157
 104 run: prev:address:duplex-list <- copy curr
9999 mem: location 1157 is 1147
9999 mem: storing 1147 in location 1158
 104 run: curr <- next-duplex curr
9999 mem: location 1157 is 1147
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1147 in location 1179
 105 run: jump-if in, 1:offset
9999 mem: location 1179 is 1147
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1147
9999 mem: location 1147 is 167
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1179 is 1147
9999 run: address to copy is 1148
9999 run: its type is address
9999 mem: location 1148 is 0
9999 mem: storing 0 in location 1180
 105 run: reply result
9999 mem: location 1180 is 0
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 0
9999 mem: storing 0 in location 1157
 104 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1159
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1160
 104 run: column:number <- copy left
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1161
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1162
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1163
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1164
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1152 is 1009
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1181
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 105 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 105 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 105 run: *column <- copy new-column
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1152
 104 run: break-unless curr, 
9999 mem: location 1157 is 0
9999 run: jumping to instruction 67
 104 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1117
9999 mem: storing 1117 in location 1172
 104 run: *bottom-of-screen <- copy curr
9999 mem: location 1157 is 0
9999 mem: location 1172 is 1117
9999 mem: storing 0 in location 1117
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1161 is 0
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1173
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1166 is 1
9999 mem: location 1173 is 1
9999 mem: storing 1 in location 1174
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1175
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1174 is 1
9999 mem: location 1175 is 0
9999 mem: storing 1 in location 1176
 104 run: break-unless before-cursor?, 
9999 mem: location 1176 is 1
9999 run: jump-unless fell through
 104 run: *cursor-row <- copy row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: storing 1 in location 1121
 104 run: *cursor-column <- copy column
9999 mem: location 1161 is 0
9999 mem: location 1163 is 1122
9999 mem: storing 0 in location 1122
 104 run: *before-cursor <- copy prev
9999 mem: location 1158 is 1147
9999 mem: location 1164 is 1118
9999 mem: storing 1147 in location 1118
 104 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1152 is 1009
9999 mem: location 1153 is 1115
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1
9999 run: result 1 is 0
9999 run: result 2 is 1009
9999 run: result 3 is 1115
9999 mem: storing 1009 in location 1130
9999 mem: storing 1115 in location 1133
 103 run: indent?:address:boolean <- get-address *result, indent?:offset
9999 mem: location 1133 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1133 is 1115
9999 run: address to copy is 1123
9999 mem: storing 1123 in location 1138
 103 run: *indent? <- copy 1/true
9999 mem: location 1138 is 1123
9999 mem: storing 1 in location 1123
 103 run: reply result
9999 mem: location 1133 is 1115
9999 trace: reply: decrementing callstack depth from 2
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 2
 102 run: editor-render screen, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 2 is 1115
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1141
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1142
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1142 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1142 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1143
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1142 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1142 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1144
 103 run: row:number, column:number <- render screen, editor
9999 mem: location 1141 is 1009
9999 mem: location 1142 is 1115
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1152
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1153
 104 run: jump-if editor, 1:offset
9999 mem: location 1153 is 1115
9999 run: jumping to instruction 5
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1154
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1152 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 105 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 105 run: reply height
9999 mem: location 1180 is 5
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 5
9999 mem: storing 5 in location 1155
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1156
 104 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1157
 104 run: prev:address:duplex-list <- copy curr
9999 mem: location 1157 is 1147
9999 mem: storing 1147 in location 1158
 104 run: curr <- next-duplex curr
9999 mem: location 1157 is 1147
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1147 in location 1179
 105 run: jump-if in, 1:offset
9999 mem: location 1179 is 1147
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1147
9999 mem: location 1147 is 167
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1179 is 1147
9999 run: address to copy is 1148
9999 run: its type is address
9999 mem: location 1148 is 0
9999 mem: storing 0 in location 1180
 105 run: reply result
9999 mem: location 1180 is 0
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 0
9999 mem: storing 0 in location 1157
 104 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1159
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1160
 104 run: column:number <- copy left
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1161
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1162
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1163
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1164
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1152 is 1009
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 105 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 105 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 105 run: *column <- copy new-column
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1152
 104 run: break-unless curr, 
9999 mem: location 1157 is 0
9999 run: jumping to instruction 67
 104 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1117
9999 mem: storing 1117 in location 1172
 104 run: *bottom-of-screen <- copy curr
9999 mem: location 1157 is 0
9999 mem: location 1172 is 1117
9999 mem: storing 0 in location 1117
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1161 is 0
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1173
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1166 is 1
9999 mem: location 1173 is 1
9999 mem: storing 1 in location 1174
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1175
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1174 is 1
9999 mem: location 1175 is 0
9999 mem: storing 1 in location 1176
 104 run: break-unless before-cursor?, 
9999 mem: location 1176 is 1
9999 run: jump-unless fell through
 104 run: *cursor-row <- copy row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: storing 1 in location 1121
 104 run: *cursor-column <- copy column
9999 mem: location 1161 is 0
9999 mem: location 1163 is 1122
9999 mem: storing 0 in location 1122
 104 run: *before-cursor <- copy prev
9999 mem: location 1158 is 1147
9999 mem: location 1164 is 1118
9999 mem: storing 1147 in location 1118
 104 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1152 is 1009
9999 mem: location 1153 is 1115
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1
9999 run: result 1 is 0
9999 mem: storing 1 in location 1145
9999 mem: storing 0 in location 1146
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1141 is 1009
9999 mem: location 1146 is 0
9999 mem: location 1144 is 9
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: new alloc: 1188
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1190
 104 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1191
 104 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1192
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 0
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 104 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: new alloc: 1194
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 105 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 105 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 105 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 105 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 105 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1210
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 105 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 105 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 10
9999 mem: storing 1035 in location 1215
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1215 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1216
 105 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1035
9999 mem: storing 32 in location 1035
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1035
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1215 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1217
 105 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1036
9999 mem: storing 7 in location 1036
 105 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 105 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: column <- add column, 1
9999 mem: location 1191 is 0
9999 mem: storing 1 in location 1191
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 1
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 104 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 105 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 105 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 105 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 105 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 105 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1210
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 105 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 105 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 11
9999 mem: storing 1037 in location 1215
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1215 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1216
 105 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1037
9999 mem: storing 32 in location 1037
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1215 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1217
 105 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1038
9999 mem: storing 7 in location 1038
 105 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 105 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: column <- add column, 1
9999 mem: location 1191 is 1
9999 mem: storing 2 in location 1191
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 2
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 104 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 105 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 105 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 105 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 105 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 105 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1210
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 105 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 105 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 12
9999 mem: storing 1039 in location 1215
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1216
 105 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1039
9999 mem: storing 32 in location 1039
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1217
 105 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1040
9999 mem: storing 7 in location 1040
 105 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 105 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: column <- add column, 1
9999 mem: location 1191 is 2
9999 mem: storing 3 in location 1191
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 3
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 104 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 105 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 105 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 105 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 105 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 105 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1210
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 105 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 105 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 13
9999 mem: storing 1041 in location 1215
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1215 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1216
 105 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1041
9999 mem: storing 32 in location 1041
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1215 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1217
 105 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1042
9999 mem: storing 7 in location 1042
 105 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 105 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: column <- add column, 1
9999 mem: location 1191 is 3
9999 mem: storing 4 in location 1191
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 4
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 104 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 105 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 105 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 105 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 105 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 105 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1210
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 105 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 105 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 14
9999 mem: storing 1043 in location 1215
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1215 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1216
 105 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1043
9999 mem: storing 32 in location 1043
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1215 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1217
 105 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1044
9999 mem: storing 7 in location 1044
 105 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 105 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: column <- add column, 1
9999 mem: location 1191 is 4
9999 mem: storing 5 in location 1191
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 5
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 104 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 105 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 105 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 105 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 105 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 105 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1210
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 105 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 105 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 15
9999 mem: storing 1045 in location 1215
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1215 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1216
 105 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1045
9999 mem: storing 32 in location 1045
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1215 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1217
 105 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1046
9999 mem: storing 7 in location 1046
 105 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 105 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: column <- add column, 1
9999 mem: location 1191 is 5
9999 mem: storing 6 in location 1191
9999 schedule: clear-line-delimited/editor-render/scenario-editor-can-undo-and-redo-delete
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 6
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 104 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 105 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 105 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 105 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 105 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 105 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1210
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 105 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 105 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 16
9999 mem: storing 1047 in location 1215
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1215 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1216
 105 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1047
9999 mem: storing 32 in location 1047
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1215 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1217
 105 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1048
9999 mem: storing 7 in location 1048
 105 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 105 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: column <- add column, 1
9999 mem: location 1191 is 6
9999 mem: storing 7 in location 1191
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 7
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 104 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 105 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 105 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 105 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 105 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 105 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 17 in location 1210
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 105 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 105 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 17
9999 mem: storing 1049 in location 1215
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1215 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1216
 105 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1049
9999 mem: storing 32 in location 1049
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1215 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1217
 105 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1050
9999 mem: storing 7 in location 1050
 105 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 105 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: column <- add column, 1
9999 mem: location 1191 is 7
9999 mem: storing 8 in location 1191
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 8
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 104 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 105 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 105 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 105 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 105 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 105 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 18 in location 1210
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 105 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 105 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 18
9999 mem: storing 1051 in location 1215
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1215 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1216
 105 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1051
9999 mem: storing 32 in location 1051
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1215 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1217
 105 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1052
9999 mem: storing 7 in location 1052
 105 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 105 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: column <- add column, 1
9999 mem: location 1191 is 8
9999 mem: storing 9 in location 1191
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 9
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 104 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 105 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 105 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 105 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 105 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 105 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 19 in location 1210
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 105 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 105 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 19
9999 mem: storing 1053 in location 1215
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1215 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1216
 105 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1053
9999 mem: storing 32 in location 1053
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1215 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1217
 105 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1054
9999 mem: storing 7 in location 1054
 105 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 105 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: column <- add column, 1
9999 mem: location 1191 is 9
9999 mem: storing 10 in location 1191
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 10
9999 mem: location 1192 is 9
9999 mem: storing 1 in location 1193
 104 run: break-if done?, 
9999 mem: location 1193 is 1
9999 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 3
 103 run: row <- add row, 1
9999 mem: location 1145 is 1
9999 mem: storing 2 in location 1145
 103 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1141 is 1009
9999 mem: location 1145 is 2
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1220
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1222
 104 run: row:number <- next-ingredient 
9999 mem: storing 2 in location 1223
 104 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 1224
 104 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1225
 104 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1226
9999 mem: storing 1 in location 1227
 104 run: break-if style-found?, 
9999 mem: location 1227 is 1
9999 run: jumping to instruction 9
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1228
9999 mem: storing 0 in location 1229
 104 run: break-if color-found?, 
9999 mem: location 1229 is 0
9999 run: jump-if fell through
 104 run: color <- copy 245/grey
9999 mem: storing 245 in location 1228
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 104 run: break-if bg-color-found?, 
9999 mem: location 1231 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1230
 104 run: screen <- move-cursor screen, row, x
9999 mem: location 1222 is 1009
9999 mem: location 1223 is 2
9999 mem: location 1224 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1184
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 105 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 105 run: *row <- copy new-row
9999 mem: location 1184 is 2
9999 mem: location 1186 is 1011
9999 mem: storing 2 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 105 run: *column <- copy new-column
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1222
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 0
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 104 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 105 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 105 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 105 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 105 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1210
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 105 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 105 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 20
9999 mem: storing 1055 in location 1215
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1215 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1216
 105 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1055
9999 mem: storing 9480 in location 1055
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1055
9999 mem: location 1055 is 9480
9999 mem: location 1056 is 7
9999 mem: location 1215 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1217
 105 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1056
9999 mem: storing 245 in location 1056
 105 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 105 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1224 is 0
9999 mem: storing 1 in location 1224
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 1
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 104 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 105 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 105 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 105 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 105 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1210
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 105 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 105 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 21
9999 mem: storing 1057 in location 1215
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1215 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1216
 105 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1057
9999 mem: storing 9480 in location 1057
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1057
9999 mem: location 1057 is 9480
9999 mem: location 1058 is 7
9999 mem: location 1215 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1217
 105 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1058
9999 mem: storing 245 in location 1058
 105 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 105 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1224 is 1
9999 mem: storing 2 in location 1224
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 2
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 104 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 105 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 105 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 105 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 105 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1210
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 105 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 105 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 22
9999 mem: storing 1059 in location 1215
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1215 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1216
 105 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1059
9999 mem: storing 9480 in location 1059
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1059
9999 mem: location 1059 is 9480
9999 mem: location 1060 is 7
9999 mem: location 1215 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1217
 105 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1060
9999 mem: storing 245 in location 1060
 105 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 105 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1224 is 2
9999 mem: storing 3 in location 1224
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 3
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 104 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 105 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 105 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 105 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 105 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1210
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 105 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 105 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 23
9999 mem: storing 1061 in location 1215
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1215 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1216
 105 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1061
9999 mem: storing 9480 in location 1061
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1061
9999 mem: location 1061 is 9480
9999 mem: location 1062 is 7
9999 mem: location 1215 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1217
 105 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1062
9999 mem: storing 245 in location 1062
 105 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 105 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1224 is 3
9999 mem: storing 4 in location 1224
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 4
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 104 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 105 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 105 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
9999 schedule: print-character/draw-horizontal/editor-render/scenario-editor-can-undo-and-redo-delete
 105 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 105 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 105 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1210
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 105 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 105 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 24
9999 mem: storing 1063 in location 1215
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1215 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1216
 105 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1063
9999 mem: storing 9480 in location 1063
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1063
9999 mem: location 1063 is 9480
9999 mem: location 1064 is 7
9999 mem: location 1215 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1217
 105 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1064
9999 mem: storing 245 in location 1064
 105 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 105 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1224 is 4
9999 mem: storing 5 in location 1224
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 5
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 104 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 105 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 105 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 105 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 105 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 25 in location 1210
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 105 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 105 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 25
9999 mem: storing 1065 in location 1215
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1215 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1216
 105 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1065
9999 mem: storing 9480 in location 1065
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1065
9999 mem: location 1065 is 9480
9999 mem: location 1066 is 7
9999 mem: location 1215 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1217
 105 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1066
9999 mem: storing 245 in location 1066
 105 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 105 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1224 is 5
9999 mem: storing 6 in location 1224
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 6
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 104 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 105 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 105 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 105 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 105 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 26 in location 1210
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 105 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 105 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 26
9999 mem: storing 1067 in location 1215
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1215 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1216
 105 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1067
9999 mem: storing 9480 in location 1067
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1067
9999 mem: location 1067 is 9480
9999 mem: location 1068 is 7
9999 mem: location 1215 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1217
 105 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1068
9999 mem: storing 245 in location 1068
 105 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 105 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1224 is 6
9999 mem: storing 7 in location 1224
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 7
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 104 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 105 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 105 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 105 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 105 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 27 in location 1210
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 105 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 105 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 27
9999 mem: storing 1069 in location 1215
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1215 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1216
 105 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1069
9999 mem: storing 9480 in location 1069
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1069
9999 mem: location 1069 is 9480
9999 mem: location 1070 is 7
9999 mem: location 1215 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1217
 105 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1070
9999 mem: storing 245 in location 1070
 105 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 105 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1224 is 7
9999 mem: storing 8 in location 1224
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 8
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 104 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 105 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 105 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 105 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 105 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 28 in location 1210
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 105 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 105 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 28
9999 mem: storing 1071 in location 1215
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1215 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1216
 105 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1071
9999 mem: storing 9480 in location 1071
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1071
9999 mem: location 1071 is 9480
9999 mem: location 1072 is 7
9999 mem: location 1215 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1217
 105 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1072
9999 mem: storing 245 in location 1072
 105 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 105 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1224 is 8
9999 mem: storing 9 in location 1224
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 9
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 104 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 105 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 105 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 105 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 105 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 105 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 29 in location 1210
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 105 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 105 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 29
9999 mem: storing 1073 in location 1215
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1215 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1216
 105 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1073
9999 mem: storing 9480 in location 1073
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1073
9999 mem: location 1073 is 9480
9999 mem: location 1074 is 7
9999 mem: location 1215 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1217
 105 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1074
9999 mem: storing 245 in location 1074
 105 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 105 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1224 is 9
9999 mem: storing 10 in location 1224
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 10
9999 mem: location 1225 is 9
9999 mem: storing 0 in location 1232
 104 run: break-unless continue?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 27
9999 trace: fall-through: exiting draw-horizontal; decrementing callstack depth from 3
 103 run: row <- add row, 1
9999 mem: location 1145 is 2
9999 mem: storing 3 in location 1145
 103 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1141 is 1009
9999 mem: location 1145 is 3
9999 mem: location 1143 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1183
 104 run: row:number <- next-ingredient 
9999 mem: storing 3 in location 1184
 104 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 104 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1186
 104 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1187
 104 run: break-if screen, 
9999 mem: location 1183 is 1009
9999 run: jumping to instruction 10
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1183 is 1009
9999 mem: location 1184 is 3
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1233
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1236
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1237
 105 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1238
 105 run: *row <- copy new-row
9999 mem: location 1236 is 3
9999 mem: location 1238 is 1011
9999 mem: storing 3 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 105 run: *column <- copy new-column
9999 mem: location 1237 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1183
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1183 is 1009
9999 mem: location 1185 is 0
9999 mem: location 1187 is 9
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1190
 105 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1191
 105 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1192
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 0
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 105 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 30
9999 mem: storing 1075 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1215 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1075
9999 mem: storing 32 in location 1075
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1075
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1215 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1076
9999 mem: storing 7 in location 1076
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1191 is 0
9999 mem: storing 1 in location 1191
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 1
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 105 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 31
9999 mem: storing 1077 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1215 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1077
9999 mem: storing 32 in location 1077
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1215 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1078
9999 mem: storing 7 in location 1078
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1191 is 1
9999 mem: storing 2 in location 1191
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 2
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 105 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
9999 schedule: print-character/clear-line-delimited/clear-screen-from/editor-render/scenario-editor-can-undo-and-redo-delete
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 32
9999 mem: storing 1079 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1215 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1079
9999 mem: storing 32 in location 1079
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1215 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1080
9999 mem: storing 7 in location 1080
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1191 is 2
9999 mem: storing 3 in location 1191
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 3
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 105 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 33
9999 mem: storing 1081 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1215 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1081
9999 mem: storing 32 in location 1081
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1215 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1082
9999 mem: storing 7 in location 1082
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1191 is 3
9999 mem: storing 4 in location 1191
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 4
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 105 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 34
9999 mem: storing 1083 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1215 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1083
9999 mem: storing 32 in location 1083
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1215 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1084
9999 mem: storing 7 in location 1084
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1191 is 4
9999 mem: storing 5 in location 1191
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 5
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 105 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 35 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 35
9999 mem: storing 1085 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1215 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1085
9999 mem: storing 32 in location 1085
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1085
9999 mem: location 1085 is 32
9999 mem: location 1086 is 7
9999 mem: location 1215 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1086
9999 mem: storing 7 in location 1086
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1191 is 5
9999 mem: storing 6 in location 1191
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 6
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 105 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 36 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 36
9999 mem: storing 1087 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1215 is 1087
9999 run: address to copy is 1087
9999 mem: storing 1087 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1087
9999 mem: storing 32 in location 1087
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1087
9999 mem: location 1087 is 32
9999 mem: location 1088 is 7
9999 mem: location 1215 is 1087
9999 run: address to copy is 1088
9999 mem: storing 1088 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1088
9999 mem: storing 7 in location 1088
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1191 is 6
9999 mem: storing 7 in location 1191
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 7
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 105 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 37 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 37
9999 mem: storing 1089 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1215 is 1089
9999 run: address to copy is 1089
9999 mem: storing 1089 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1089
9999 mem: storing 32 in location 1089
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1089
9999 mem: location 1089 is 32
9999 mem: location 1090 is 7
9999 mem: location 1215 is 1089
9999 run: address to copy is 1090
9999 mem: storing 1090 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1090
9999 mem: storing 7 in location 1090
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1191 is 7
9999 mem: storing 8 in location 1191
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 8
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 105 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 38 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 38
9999 mem: storing 1091 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1215 is 1091
9999 run: address to copy is 1091
9999 mem: storing 1091 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1091
9999 mem: storing 32 in location 1091
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1091
9999 mem: location 1091 is 32
9999 mem: location 1092 is 7
9999 mem: location 1215 is 1091
9999 run: address to copy is 1092
9999 mem: storing 1092 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1092
9999 mem: storing 7 in location 1092
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1191 is 8
9999 mem: storing 9 in location 1191
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 9
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 105 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 39 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 39
9999 mem: storing 1093 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1215 is 1093
9999 run: address to copy is 1093
9999 mem: storing 1093 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1093
9999 mem: storing 32 in location 1093
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1093
9999 mem: location 1093 is 32
9999 mem: location 1094 is 7
9999 mem: location 1215 is 1093
9999 run: address to copy is 1094
9999 mem: storing 1094 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1094
9999 mem: storing 7 in location 1094
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1191 is 9
9999 mem: storing 10 in location 1191
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 10
9999 mem: location 1192 is 9
9999 mem: storing 1 in location 1193
 105 run: break-if done?, 
9999 mem: location 1193 is 1
9999 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 4
 104 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1183 is 1009
9999 mem: location 1184 is 3
9999 mem: location 1186 is 0
9999 mem: location 1187 is 9
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1240
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1242
 105 run: row:number <- next-ingredient 
9999 mem: storing 3 in location 1243
 105 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1244
 105 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1245
 105 run: row <- add row, 1
9999 mem: location 1243 is 3
9999 mem: storing 4 in location 1243
 105 run: screen <- move-cursor screen, row, left
9999 mem: location 1242 is 1009
9999 mem: location 1243 is 4
9999 mem: location 1244 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 106 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1236
 106 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1237
 106 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1238
 106 run: *row <- copy new-row
9999 mem: location 1236 is 4
9999 mem: location 1238 is 1011
9999 mem: storing 4 in location 1011
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 106 run: *column <- copy new-column
9999 mem: location 1237 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 0 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1242
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1242 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 106 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 106 run: reply height
9999 mem: location 1180 is 5
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1246
 105 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1243 is 4
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1247
 105 run: break-if at-bottom-of-screen?, 
9999 mem: location 1247 is 0
9999 run: jump-if fell through
 105 run: screen <- move-cursor screen, row, left
9999 mem: location 1242 is 1009
9999 mem: location 1243 is 4
9999 mem: location 1244 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 106 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1236
 106 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1237
 106 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1238
 106 run: *row <- copy new-row
9999 mem: location 1236 is 4
9999 mem: location 1238 is 1011
9999 mem: storing 4 in location 1011
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 106 run: *column <- copy new-column
9999 mem: location 1237 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 0 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1242
 105 run: clear-line-delimited screen, left, right
9999 mem: location 1242 is 1009
9999 mem: location 1244 is 0
9999 mem: location 1245 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1190
 106 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1191
 106 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1192
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 0
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
9999 schedule: print-character/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/scenario-editor-can-undo-and-redo-delete
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 40
9999 mem: storing 1095 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1215 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1095
9999 mem: storing 32 in location 1095
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1095
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1215 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1096
9999 mem: storing 7 in location 1096
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 0
9999 mem: storing 1 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 1
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 41
9999 mem: storing 1097 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1215 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1097
9999 mem: storing 32 in location 1097
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1215 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1098
9999 mem: storing 7 in location 1098
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 1
9999 mem: storing 2 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 2
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 42
9999 mem: storing 1099 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1215 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1099
9999 mem: storing 32 in location 1099
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1215 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1100
9999 mem: storing 7 in location 1100
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 2
9999 mem: storing 3 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 3
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 43
9999 mem: storing 1101 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1215 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1101
9999 mem: storing 32 in location 1101
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1215 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1102
9999 mem: storing 7 in location 1102
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 3
9999 mem: storing 4 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 4
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 44
9999 mem: storing 1103 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1215 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1103
9999 mem: storing 32 in location 1103
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1215 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1104
9999 mem: storing 7 in location 1104
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 4
9999 mem: storing 5 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 5
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 45 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 45
9999 mem: storing 1105 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1215 is 1105
9999 run: address to copy is 1105
9999 mem: storing 1105 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1105
9999 mem: storing 32 in location 1105
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1105
9999 mem: location 1105 is 32
9999 mem: location 1106 is 7
9999 mem: location 1215 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1106
9999 mem: storing 7 in location 1106
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 5
9999 mem: storing 6 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 6
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 46 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 46
9999 mem: storing 1107 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1215 is 1107
9999 run: address to copy is 1107
9999 mem: storing 1107 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1107
9999 mem: storing 32 in location 1107
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1107
9999 mem: location 1107 is 32
9999 mem: location 1108 is 7
9999 mem: location 1215 is 1107
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1108
9999 mem: storing 7 in location 1108
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 6
9999 mem: storing 7 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 7
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 47 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 47
9999 mem: storing 1109 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1215 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1109
9999 mem: storing 32 in location 1109
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1109
9999 mem: location 1109 is 32
9999 mem: location 1110 is 7
9999 mem: location 1215 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1110
9999 mem: storing 7 in location 1110
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 7
9999 mem: storing 8 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 8
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 48 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 48
9999 mem: storing 1111 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1215 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1111
9999 mem: storing 32 in location 1111
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1111
9999 mem: location 1111 is 32
9999 mem: location 1112 is 7
9999 mem: location 1215 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1112
9999 mem: storing 7 in location 1112
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 8
9999 mem: storing 9 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 9
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
9999 schedule: print-character/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/scenario-editor-can-undo-and-redo-delete
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 49 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 49
9999 mem: storing 1113 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1215 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1113
9999 mem: storing 32 in location 1113
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1113
9999 mem: location 1113 is 32
9999 mem: location 1114 is 7
9999 mem: location 1215 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1114
9999 mem: storing 7 in location 1114
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 9
9999 mem: storing 10 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 10
9999 mem: location 1192 is 9
9999 mem: storing 1 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 1
9999 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1243 is 4
9999 mem: storing 5 in location 1243
 105 run: loop 
9999 run: jumping to instruction 9
 105 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1243 is 5
9999 mem: location 1246 is 5
9999 mem: storing 1 in location 1247
 105 run: break-if at-bottom-of-screen?, 
9999 mem: location 1247 is 1
9999 run: jumping to instruction 15
9999 trace: fall-through: exiting clear-rest-of-screen; decrementing callstack depth from 4
 104 run: reply screen/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 3
9999 trace: fall-through: exiting editor-render; decrementing callstack depth from 2
 102 run: assume-console [
    type [abcdef]
    left-click 1, 2
    press delete
    press backspace
    press delete
    press delete
  ]
9999 parse: instruction: type
9999 parse:   ingredient: {"abcdef": "literal-string"}
9999 parse: instruction: left-click
9999 parse:   ingredient: {"1": "literal"}
9999 parse:   ingredient: {"2": "literal"}
9999 parse: instruction: press
9999 parse:   ingredient: {"delete": <>}
9999 parse: instruction: press
9999 parse:   ingredient: {"backspace": <>}
9999 parse: instruction: press
9999 parse:   ingredient: {"delete": <>}
9999 parse: instruction: press
9999 parse:   ingredient: {"delete": <>}
 102 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1293
9999 mem: location 2 is 1115
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1295
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1297
 103 run: console:address <- next-ingredient 
9999 mem: storing 1293 in location 1298
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1299
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1301
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 104 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 104 run: *column <- copy new-column
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 103 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1293
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 104 run: x:address:console <- next-ingredient 
9999 mem: storing 1293 in location 1222
 104 run: break-unless x, 
9999 mem: location 1222 is 1293
9999 run: jump-unless fell through
 104 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 0
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1293
9999 mem: storing 1293 in location 1223
 104 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 0
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1248
9999 mem: storing 1248 in location 1224
 104 run: max:number <- length *buf
9999 mem: location 1224 is 1248
9999 mem: storing 11 in location 1225
 104 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 0
9999 mem: location 1225 is 11
9999 mem: storing 0 in location 1226
 104 run: break-unless done?, 
9999 mem: location 1226 is 0
9999 run: jumping to instruction 12
 104 run: result:event <- index *buf, *idx
9999 mem: location 1224 is 1248
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 0
9999 run: address to copy is 1249
9999 run: its type is event
9999 mem: location 1249 is 0
9999 mem: location 1250 is 97
9999 mem: location 1251 is 0
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1228
9999 mem: storing 97 in location 1229
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 104 run: *idx <- add *idx, 1
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 0
9999 mem: location 1223 is 1293
9999 mem: storing 1 in location 1293
 104 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1228 is 0
9999 mem: location 1229 is 97
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1222 is 1293
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is [0, 97, 0, 0]
9999 run: result 1 is 1293
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1302
9999 mem: storing 97 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1293 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 0 in location 1307
 103 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 103 run: break-if quit?, 
9999 mem: location 1307 is 0
9999 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1302 is 0
9999 mem: location 1303 is 97
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: storing 0 in location 1308
 103 run: break-unless t, 
9999 mem: location 1308 is 0
9999 run: jumping to instruction 18
 103 run: break-if t, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 mem: location 1302 is 0
9999 mem: location 1303 is 97
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: new alloc: 1310
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1312
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1313
 104 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1314
9999 mem: storing 97 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
 104 run: jump-if editor, 1:offset
9999 mem: location 1313 is 1115
9999 run: jumping to instruction 6
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 105 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 105 run: reply width
9999 mem: location 1180 is 10
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 10
9999 mem: storing 10 in location 1318
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 105 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 105 run: reply height
9999 mem: location 1180 is 5
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 5
9999 mem: storing 5 in location 1319
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1320
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1321
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1322
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1323
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1324
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1325
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1326
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1314 is 0
9999 mem: location 1315 is 97
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 1315 in location 1327
 104 run: break-unless c, 
9999 mem: location 1327 is 1315
9999 run: jump-unless fell through
 104 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 104 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 97
9999 mem: storing 0 in location 1328
 104 run: break-unless redo?, 
9999 mem: location 1328 is 0
9999 run: jumping to instruction 60
 104 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 97
9999 mem: storing 0 in location 1339
 104 run: break-unless undo?, 
9999 mem: location 1339 is 0
9999 run: jumping to instruction 107
 104 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 97
9999 mem: storing 0 in location 1344
 104 run: break-unless page-up?, 
9999 mem: location 1344 is 0
9999 run: jumping to instruction 149
 104 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 97
9999 mem: storing 0 in location 1360
 104 run: break-unless page-down?, 
9999 mem: location 1360 is 0
9999 run: jumping to instruction 191
 104 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 97
9999 mem: storing 0 in location 1361
 104 run: break-unless delete-to-end-of-line?, 
9999 mem: location 1361 is 0
9999 run: jumping to instruction 210
 104 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 97
9999 mem: storing 0 in location 1366
 104 run: break-unless delete-to-start-of-line?, 
9999 mem: location 1366 is 0
9999 run: jumping to instruction 229
 104 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 97
9999 mem: storing 0 in location 1367
 104 run: break-unless move-to-end-of-line?, 
9999 mem: location 1367 is 0
9999 run: jumping to instruction 266
 104 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 97
9999 mem: storing 0 in location 1368
 104 run: break-unless move-to-start-of-line?, 
9999 mem: location 1368 is 0
9999 run: jumping to instruction 303
 104 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 97
9999 mem: storing 0 in location 1369
 104 run: break-unless delete-previous-character?, 
9999 mem: location 1369 is 0
9999 run: jumping to instruction 343
 104 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 97
9999 mem: storing 0 in location 1374
 104 run: break-unless tab?, 
9999 mem: location 1374 is 0
9999 run: jumping to instruction 379
 104 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 97
9999 mem: storing 0 in location 1378
 104 run: break-unless newline?, 
9999 mem: location 1378 is 0
9999 run: jumping to instruction 397
 104 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 97
9999 mem: storing 1 in location 1381
 104 run: jump-if regular-character?, 1:offset
9999 mem: location 1381 is 1
9999 run: jumping to instruction 401
 104 run: top-before:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1362
 104 run: cursor-before:address:duplex-list <- copy *before-cursor
9999 mem: location 1322 is 1118
9999 mem: location 1118 is 1147
9999 mem: storing 1147 in location 1375
 104 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1313 is 1115
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 97
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 30
9999 mem: new alloc: 1396
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1398
 105 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1399
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1400
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1147
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1401
 105 run: insert-duplex c, *before-cursor
9999 mem: location 1399 is 97
9999 mem: location 1401 is 1118
9999 mem: location 1118 is 1147
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 106 run: x:character <- next-ingredient 
9999 mem: storing 97 in location 1141
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1147 in location 1142
 106 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1427
9999 mem: storing 1427 in location 1143
 106 run: val:address:character <- get-address *new-node, value:offset
9999 mem: location 1143 is 1427
9999 mem: location 1427 is 0
9999 mem: location 1428 is 0
9999 mem: location 1429 is 0
9999 mem: location 1143 is 1427
9999 run: address to copy is 1427
9999 mem: storing 1427 in location 1144
 106 run: *val <- copy x
9999 mem: location 1141 is 97
9999 mem: location 1144 is 1427
9999 mem: storing 97 in location 1427
 106 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1142 is 1147
9999 mem: location 1147 is 167
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1142 is 1147
9999 run: address to copy is 1148
9999 run: its type is address
9999 mem: location 1148 is 0
9999 mem: storing 0 in location 1145
 106 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1142 is 1147
9999 mem: location 1147 is 167
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1142 is 1147
9999 run: address to copy is 1148
9999 mem: storing 1148 in location 1146
 106 run: *y <- copy new-node
9999 mem: location 1143 is 1427
9999 mem: location 1146 is 1148
9999 mem: storing 1427 in location 1148
 106 run: y <- get-address *new-node, prev:offset
9999 mem: location 1143 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 0
9999 mem: location 1429 is 0
9999 mem: location 1143 is 1427
9999 run: address to copy is 1429
9999 mem: storing 1429 in location 1146
 106 run: *y <- copy in
9999 mem: location 1142 is 1147
9999 mem: location 1146 is 1429
9999 mem: storing 1147 in location 1429
 106 run: y <- get-address *new-node, next:offset
9999 mem: location 1143 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 0
9999 mem: location 1429 is 1147
9999 mem: location 1143 is 1427
9999 run: address to copy is 1428
9999 mem: storing 1428 in location 1146
 106 run: *y <- copy next-node
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1428
9999 mem: storing 0 in location 1428
 106 run: jump-if next-node, 1:offset
9999 mem: location 1145 is 0
9999 run: jump-if fell through
 106 run: reply new-node
9999 mem: location 1143 is 1427
9999 trace: reply: decrementing callstack depth from 5
 105 run: *before-cursor <- next-duplex *before-cursor
9999 mem: location 1401 is 1118
9999 mem: location 1118 is 1147
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1147 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1147
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1147
9999 mem: location 1147 is 167
9999 mem: location 1148 is 1427
9999 mem: location 1149 is 0
9999 mem: location 1179 is 1147
9999 run: address to copy is 1148
9999 run: its type is address
9999 mem: location 1148 is 1427
9999 mem: storing 1427 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1427
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1427
9999 mem: location 1401 is 1118
9999 mem: storing 1427 in location 1118
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1402
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1403
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1404
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1405
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1402 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1406
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1403 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1407
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1400 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 106 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 106 run: reply width
9999 mem: location 1180 is 10
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 10
9999 mem: storing 10 in location 1408
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1400 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 106 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 106 run: reply height
9999 mem: location 1180 is 5
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1409
 105 run: wrap-column:number <- subtract right, 1
9999 mem: location 1405 is 9
9999 mem: storing 8 in location 1410
 105 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1403 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1410 is 8
9999 mem: storing 0 in location 1411
 105 run: break-unless at-wrap?, 
9999 mem: location 1411 is 0
9999 run: jumping to instruction 39
 105 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1403 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1403 is 1122
9999 mem: storing 1 in location 1122
 105 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1401 is 1118
9999 mem: location 1118 is 1427
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1427
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 0
9999 mem: location 1429 is 1147
9999 mem: location 1179 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 0
9999 mem: storing 0 in location 1180
 106 run: reply result
9999 mem: location 1180 is 0
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 0
9999 mem: storing 0 in location 1417
 105 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1417 is 0
9999 mem: storing 1 in location 1418
 105 run: break-unless at-end?, 
9999 mem: location 1418 is 1
9999 run: jump-unless fell through
 105 run: bottom:number <- subtract screen-height, 1
9999 mem: location 1409 is 5
9999 mem: storing 4 in location 1419
 105 run: at-bottom?:boolean <- equal save-row, bottom
9999 mem: location 1406 is 1
9999 mem: location 1419 is 4
9999 mem: storing 0 in location 1420
 105 run: at-right?:boolean <- equal save-column, right
9999 mem: location 1407 is 0
9999 mem: location 1405 is 9
9999 mem: storing 0 in location 1421
 105 run: overflow?:boolean <- and at-bottom?, at-right?
9999 mem: location 1420 is 0
9999 mem: location 1421 is 0
9999 mem: storing 0 in location 1422
 105 run: break-if overflow?, 
9999 mem: location 1422 is 0
9999 run: jump-if fell through
 105 run: move-cursor screen, save-row, save-column
9999 mem: location 1400 is 1009
9999 mem: location 1406 is 1
9999 mem: location 1407 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 106 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 106 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 106 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 106 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 106 run: *column <- copy new-column
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1012
9999 mem: storing 0 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: print-character screen, c
9999 mem: location 1400 is 1009
9999 mem: location 1399 is 97
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 97
  90 print-character: 97 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 97
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 97
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 10
9999 mem: storing 1035 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1035
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1215 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 97
9999 mem: location 1216 is 1035
9999 mem: storing 97 in location 1035
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1215 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1036
9999 mem: storing 7 in location 1036
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply editor/same-as-ingredient:0, screen/same-as-ingredient:2, 0/no-more-render
9999 mem: location 1398 is 1115
9999 mem: location 1400 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1115
9999 run: result 1 is 1009
9999 run: result 2 is 0
9999 mem: storing 1115 in location 1313
9999 mem: storing 1009 in location 1312
9999 mem: storing 0 in location 1370
 104 run: top-after:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1364
 104 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1331
 104 run: break-unless *undo, 
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 0
9999 run: jumping to instruction 423
 104 run: insert-from:address:duplex-list <- next-duplex cursor-before
9999 mem: location 1375 is 1147
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1147 in location 1179
 105 run: jump-if in, 1:offset
9999 mem: location 1179 is 1147
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1147
9999 mem: location 1147 is 167
9999 mem: location 1148 is 1427
9999 mem: location 1149 is 0
9999 mem: location 1179 is 1147
9999 run: address to copy is 1148
9999 run: its type is address
9999 mem: location 1148 is 1427
9999 mem: storing 1427 in location 1180
 105 run: reply result
9999 mem: location 1180 is 1427
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1427
9999 mem: storing 1427 in location 1338
 104 run: insert-to:address:duplex-list <- next-duplex insert-from
9999 mem: location 1338 is 1427
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1179
 105 run: jump-if in, 1:offset
9999 mem: location 1179 is 1427
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 0
9999 mem: location 1429 is 1147
9999 mem: location 1179 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 0
9999 mem: storing 0 in location 1180
 105 run: reply result
9999 mem: location 1180 is 0
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 0
9999 mem: storing 0 in location 1377
 104 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1430
9999 mem: storing 1430 in location 1330
 104 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 1/coalesce
9999 mem: location 1325 is 1
9999 mem: location 1326 is 0
9999 mem: location 1362 is 1147
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1364 is 1147
9999 mem: location 1338 is 1427
9999 mem: location 1377 is 0
9999 mem: location 1330 is 1430
9999 mem: location 1330 is 1430
9999 mem: storing 0 in location 1430
9999 mem: storing 1 in location 1431
9999 mem: storing 0 in location 1432
9999 mem: storing 1147 in location 1433
9999 mem: storing 1 in location 1434
9999 mem: storing 1 in location 1435
9999 mem: storing 1147 in location 1436
9999 mem: storing 1427 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 1 in location 1439
 104 run: editor <- add-operation editor, op
9999 mem: location 1313 is 1115
9999 mem: location 1330 is 1430
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1190
 105 run: op:address:operation <- next-ingredient 
9999 mem: storing 1430 in location 1191
 105 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1190 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1190 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1192
 105 run: *undo/skiptypecheck <- push op, *undo
9999 mem: location 1191 is 1430
9999 mem: location 1192 is 1124
9999 mem: location 1124 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: x:location <- next-ingredient 
9999 mem: storing 1430 in location 1183
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 0 in location 1184
 106 run: result:address:list <- new list:type
9999 mem: new alloc: 1441
9999 mem: storing 1441 in location 1185
 106 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1185 is 1441
9999 mem: location 1441 is 0
9999 mem: location 1442 is 0
9999 mem: location 1185 is 1441
9999 run: address to copy is 1441
9999 mem: storing 1441 in location 1186
 106 run: *val <- copy x
9999 mem: location 1183 is 1430
9999 mem: location 1186 is 1441
9999 mem: storing 1430 in location 1441
 106 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1185 is 1441
9999 mem: location 1441 is 1430
9999 mem: location 1442 is 0
9999 mem: location 1185 is 1441
9999 run: address to copy is 1442
9999 mem: storing 1442 in location 1187
 106 run: *next <- copy in
9999 mem: location 1184 is 0
9999 mem: location 1187 is 1442
9999 mem: storing 0 in location 1442
 106 run: reply result
9999 mem: location 1185 is 1441
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1441
9999 mem: location 1192 is 1124
9999 mem: storing 1441 in location 1124
 105 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1190 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1190 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1193
 105 run: *redo <- copy 0
9999 mem: location 1193 is 1125
9999 mem: storing 0 in location 1125
 105 run: reply editor/same-as-ingredient:0
9999 mem: location 1190 is 1115
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1313
 104 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1312 is 1009
9999 mem: location 1313 is 1115
9999 mem: location 1370 is 0
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1297
9999 mem: storing 1115 in location 1299
9999 mem: storing 0 in location 1309
 103 run: break-unless go-render?, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 25
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1301
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 1
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1185
 104 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 104 run: *column <- copy new-column
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 103 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1293
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 104 run: x:address:console <- next-ingredient 
9999 mem: storing 1293 in location 1222
 104 run: break-unless x, 
9999 mem: location 1222 is 1293
9999 run: jump-unless fell through
 104 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 1
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1293
9999 mem: storing 1293 in location 1223
 104 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 1
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1248
9999 mem: storing 1248 in location 1224
 104 run: max:number <- length *buf
9999 mem: location 1224 is 1248
9999 mem: storing 11 in location 1225
 104 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 1
9999 mem: location 1225 is 11
9999 mem: storing 0 in location 1226
 104 run: break-unless done?, 
9999 mem: location 1226 is 0
9999 run: jumping to instruction 12
 104 run: result:event <- index *buf, *idx
9999 mem: location 1224 is 1248
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 1
9999 run: address to copy is 1253
9999 run: its type is event
9999 mem: location 1253 is 0
9999 mem: location 1254 is 98
9999 mem: location 1255 is 0
9999 mem: location 1256 is 0
9999 mem: storing 0 in location 1228
9999 mem: storing 98 in location 1229
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 104 run: *idx <- add *idx, 1
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 1
9999 mem: location 1223 is 1293
9999 mem: storing 2 in location 1293
 104 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1228 is 0
9999 mem: location 1229 is 98
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1222 is 1293
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is [0, 98, 0, 0]
9999 run: result 1 is 1293
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1302
9999 mem: storing 98 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1293 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 0 in location 1307
 103 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 103 run: break-if quit?, 
9999 mem: location 1307 is 0
9999 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1302 is 0
9999 mem: location 1303 is 98
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: storing 0 in location 1308
 103 run: break-unless t, 
9999 mem: location 1308 is 0
9999 run: jumping to instruction 18
 103 run: break-if t, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 mem: location 1302 is 0
9999 mem: location 1303 is 98
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1312
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1313
 104 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1314
9999 mem: storing 98 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
 104 run: jump-if editor, 1:offset
9999 mem: location 1313 is 1115
9999 run: jumping to instruction 6
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 105 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 105 run: reply width
9999 mem: location 1180 is 10
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 10
9999 mem: storing 10 in location 1318
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 105 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 105 run: reply height
9999 mem: location 1180 is 5
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 5
9999 mem: storing 5 in location 1319
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1320
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1321
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1322
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1323
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1324
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1325
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1326
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1314 is 0
9999 mem: location 1315 is 98
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 1315 in location 1327
 104 run: break-unless c, 
9999 mem: location 1327 is 1315
9999 run: jump-unless fell through
 104 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 104 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 98
9999 mem: storing 0 in location 1328
 104 run: break-unless redo?, 
9999 mem: location 1328 is 0
9999 run: jumping to instruction 60
 104 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 98
9999 mem: storing 0 in location 1339
 104 run: break-unless undo?, 
9999 mem: location 1339 is 0
9999 run: jumping to instruction 107
 104 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 98
9999 mem: storing 0 in location 1344
 104 run: break-unless page-up?, 
9999 mem: location 1344 is 0
9999 run: jumping to instruction 149
 104 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 98
9999 mem: storing 0 in location 1360
 104 run: break-unless page-down?, 
9999 mem: location 1360 is 0
9999 run: jumping to instruction 191
 104 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 98
9999 mem: storing 0 in location 1361
 104 run: break-unless delete-to-end-of-line?, 
9999 mem: location 1361 is 0
9999 run: jumping to instruction 210
 104 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 98
9999 mem: storing 0 in location 1366
 104 run: break-unless delete-to-start-of-line?, 
9999 mem: location 1366 is 0
9999 run: jumping to instruction 229
 104 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 98
9999 mem: storing 0 in location 1367
 104 run: break-unless move-to-end-of-line?, 
9999 mem: location 1367 is 0
9999 run: jumping to instruction 266
 104 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 98
9999 mem: storing 0 in location 1368
 104 run: break-unless move-to-start-of-line?, 
9999 mem: location 1368 is 0
9999 run: jumping to instruction 303
 104 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 98
9999 mem: storing 0 in location 1369
 104 run: break-unless delete-previous-character?, 
9999 mem: location 1369 is 0
9999 run: jumping to instruction 343
 104 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 98
9999 mem: storing 0 in location 1374
 104 run: break-unless tab?, 
9999 mem: location 1374 is 0
9999 run: jumping to instruction 379
 104 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 98
9999 mem: storing 0 in location 1378
 104 run: break-unless newline?, 
9999 mem: location 1378 is 0
9999 run: jumping to instruction 397
 104 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 98
9999 mem: storing 1 in location 1381
 104 run: jump-if regular-character?, 1:offset
9999 mem: location 1381 is 1
9999 run: jumping to instruction 401
 104 run: top-before:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1362
 104 run: cursor-before:address:duplex-list <- copy *before-cursor
9999 mem: location 1322 is 1118
9999 mem: location 1118 is 1427
9999 mem: storing 1427 in location 1375
 104 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1313 is 1115
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 98
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 30
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1398
 105 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1399
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1400
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1401
 105 run: insert-duplex c, *before-cursor
9999 mem: location 1399 is 98
9999 mem: location 1401 is 1118
9999 mem: location 1118 is 1427
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 106 run: x:character <- next-ingredient 
9999 mem: storing 98 in location 1141
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1142
 106 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1443
9999 mem: storing 1443 in location 1143
 106 run: val:address:character <- get-address *new-node, value:offset
9999 mem: location 1143 is 1443
9999 mem: location 1443 is 0
9999 mem: location 1444 is 0
9999 mem: location 1445 is 0
9999 mem: location 1143 is 1443
9999 run: address to copy is 1443
9999 mem: storing 1443 in location 1144
 106 run: *val <- copy x
9999 mem: location 1141 is 98
9999 mem: location 1144 is 1443
9999 mem: storing 98 in location 1443
 106 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1142 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 0
9999 mem: location 1429 is 1147
9999 mem: location 1142 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 0
9999 mem: storing 0 in location 1145
 106 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1142 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 0
9999 mem: location 1429 is 1147
9999 mem: location 1142 is 1427
9999 run: address to copy is 1428
9999 mem: storing 1428 in location 1146
 106 run: *y <- copy new-node
9999 mem: location 1143 is 1443
9999 mem: location 1146 is 1428
9999 mem: storing 1443 in location 1428
 106 run: y <- get-address *new-node, prev:offset
9999 mem: location 1143 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 0
9999 mem: location 1445 is 0
9999 mem: location 1143 is 1443
9999 run: address to copy is 1445
9999 mem: storing 1445 in location 1146
 106 run: *y <- copy in
9999 mem: location 1142 is 1427
9999 mem: location 1146 is 1445
9999 mem: storing 1427 in location 1445
 106 run: y <- get-address *new-node, next:offset
9999 mem: location 1143 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 0
9999 mem: location 1445 is 1427
9999 mem: location 1143 is 1443
9999 run: address to copy is 1444
9999 mem: storing 1444 in location 1146
 106 run: *y <- copy next-node
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1444
9999 mem: storing 0 in location 1444
 106 run: jump-if next-node, 1:offset
9999 mem: location 1145 is 0
9999 run: jump-if fell through
 106 run: reply new-node
9999 mem: location 1143 is 1443
9999 trace: reply: decrementing callstack depth from 5
 105 run: *before-cursor <- next-duplex *before-cursor
9999 mem: location 1401 is 1118
9999 mem: location 1118 is 1427
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1427
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1443
9999 mem: location 1429 is 1147
9999 mem: location 1179 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1443
9999 mem: storing 1443 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1443
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1443
9999 mem: location 1401 is 1118
9999 mem: storing 1443 in location 1118
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1402
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1403
9999 schedule: insert-at-cursor/handle-keyboard-event/editor-event-loop/scenario-editor-can-undo-and-redo-delete
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1404
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1405
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1402 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1406
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1403 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1407
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1400 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 106 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 106 run: reply width
9999 mem: location 1180 is 10
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 10
9999 mem: storing 10 in location 1408
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1400 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 106 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 106 run: reply height
9999 mem: location 1180 is 5
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1409
 105 run: wrap-column:number <- subtract right, 1
9999 mem: location 1405 is 9
9999 mem: storing 8 in location 1410
 105 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1403 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1410 is 8
9999 mem: storing 0 in location 1411
 105 run: break-unless at-wrap?, 
9999 mem: location 1411 is 0
9999 run: jumping to instruction 39
 105 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1403 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1403 is 1122
9999 mem: storing 2 in location 1122
 105 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1401 is 1118
9999 mem: location 1118 is 1443
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1443
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 0
9999 mem: location 1445 is 1427
9999 mem: location 1179 is 1443
9999 run: address to copy is 1444
9999 run: its type is address
9999 mem: location 1444 is 0
9999 mem: storing 0 in location 1180
 106 run: reply result
9999 mem: location 1180 is 0
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 0
9999 mem: storing 0 in location 1417
 105 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1417 is 0
9999 mem: storing 1 in location 1418
 105 run: break-unless at-end?, 
9999 mem: location 1418 is 1
9999 run: jump-unless fell through
 105 run: bottom:number <- subtract screen-height, 1
9999 mem: location 1409 is 5
9999 mem: storing 4 in location 1419
 105 run: at-bottom?:boolean <- equal save-row, bottom
9999 mem: location 1406 is 1
9999 mem: location 1419 is 4
9999 mem: storing 0 in location 1420
 105 run: at-right?:boolean <- equal save-column, right
9999 mem: location 1407 is 1
9999 mem: location 1405 is 9
9999 mem: storing 0 in location 1421
 105 run: overflow?:boolean <- and at-bottom?, at-right?
9999 mem: location 1420 is 0
9999 mem: location 1421 is 0
9999 mem: storing 0 in location 1422
 105 run: break-if overflow?, 
9999 mem: location 1422 is 0
9999 run: jump-if fell through
 105 run: move-cursor screen, save-row, save-column
9999 mem: location 1400 is 1009
9999 mem: location 1406 is 1
9999 mem: location 1407 is 1
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 106 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 106 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1185
 106 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 106 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 106 run: *column <- copy new-column
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1012
9999 mem: storing 1 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: print-character screen, c
9999 mem: location 1400 is 1009
9999 mem: location 1399 is 98
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 98
  90 print-character: 98 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 98
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 98
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 11
9999 mem: storing 1037 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1215 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 98
9999 mem: location 1216 is 1037
9999 mem: storing 98 in location 1037
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1215 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1038
9999 mem: storing 7 in location 1038
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply editor/same-as-ingredient:0, screen/same-as-ingredient:2, 0/no-more-render
9999 mem: location 1398 is 1115
9999 mem: location 1400 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1115
9999 run: result 1 is 1009
9999 run: result 2 is 0
9999 mem: storing 1115 in location 1313
9999 mem: storing 1009 in location 1312
9999 mem: storing 0 in location 1370
 104 run: top-after:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1364
 104 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1331
 104 run: break-unless *undo, 
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1441
9999 run: jump-unless fell through
 104 run: op:address:operation/skiptypecheck <- first *undo
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1441
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 1441 in location 1179
 105 run: result:location <- get *in, value:offset
9999 mem: location 1179 is 1441
9999 mem: location 1441 is 1430
9999 mem: location 1442 is 0
9999 mem: location 1179 is 1441
9999 run: address to copy is 1441
9999 run: its type is number
9999 mem: location 1441 is 1430
9999 mem: storing 1430 in location 1180
 105 run: reply result
9999 mem: location 1180 is 1430
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1430
9999 mem: storing 1430 in location 1330
 104 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1330 is 1430
9999 mem: location 1430 is 0
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 1
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1440 is 0
9999 mem: location 1330 is 1430
9999 mem: storing 1431 in location 1337
 104 run: break-unless typing, 
9999 mem: location 1337 is 1431
9999 run: jump-unless fell through
 104 run: previous-coalesce-tag:number <- get *typing, tag:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 1
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1439
9999 run: its type is number
9999 mem: location 1439 is 1
9999 mem: storing 1 in location 1354
 104 run: break-unless previous-coalesce-tag, 
9999 mem: location 1354 is 1
9999 run: jump-unless fell through
 104 run: insert-until:address:address:duplex-list <- get-address *typing, insert-until:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 1
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1438
9999 mem: storing 1438 in location 1376
 104 run: *insert-until <- next-duplex *before-cursor
9999 mem: location 1322 is 1118
9999 mem: location 1118 is 1443
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1179
 105 run: jump-if in, 1:offset
9999 mem: location 1179 is 1443
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 0
9999 mem: location 1445 is 1427
9999 mem: location 1179 is 1443
9999 run: address to copy is 1444
9999 run: its type is address
9999 mem: location 1444 is 0
9999 mem: storing 0 in location 1180
 105 run: reply result
9999 mem: location 1180 is 0
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 0
9999 mem: location 1376 is 1438
9999 mem: storing 0 in location 1438
 104 run: after-row:address:number <- get-address *typing, after-row:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 1
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1434
9999 mem: storing 1434 in location 1356
 104 run: *after-row <- copy *cursor-row
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1356 is 1434
9999 mem: storing 1 in location 1434
 104 run: after-column:address:number <- get-address *typing, after-column:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 1
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1435
9999 mem: storing 1435 in location 1357
 104 run: *after-column <- copy *cursor-column
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1357 is 1435
9999 mem: storing 2 in location 1435
 104 run: after-top:address:address:duplex-list:character <- get-address *typing, after-top-of-screen:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 2
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1436
9999 mem: storing 1436 in location 1358
 104 run: *after-top <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: location 1358 is 1436
9999 mem: storing 1147 in location 1436
 104 run: break +done-adding-insert-operation:label
9999 run: jumping to instruction 430
 104 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1312 is 1009
9999 mem: location 1313 is 1115
9999 mem: location 1370 is 0
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1297
9999 mem: storing 1115 in location 1299
9999 mem: storing 0 in location 1309
 103 run: break-unless go-render?, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 25
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1301
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 2
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 2 in location 1185
 104 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 104 run: *column <- copy new-column
9999 mem: location 1185 is 2
9999 mem: location 1187 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 103 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1293
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 104 run: x:address:console <- next-ingredient 
9999 mem: storing 1293 in location 1222
 104 run: break-unless x, 
9999 mem: location 1222 is 1293
9999 run: jump-unless fell through
 104 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 2
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1293
9999 mem: storing 1293 in location 1223
 104 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 2
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1248
9999 mem: storing 1248 in location 1224
 104 run: max:number <- length *buf
9999 mem: location 1224 is 1248
9999 mem: storing 11 in location 1225
 104 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 2
9999 mem: location 1225 is 11
9999 mem: storing 0 in location 1226
 104 run: break-unless done?, 
9999 mem: location 1226 is 0
9999 run: jumping to instruction 12
 104 run: result:event <- index *buf, *idx
9999 mem: location 1224 is 1248
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 2
9999 run: address to copy is 1257
9999 run: its type is event
9999 mem: location 1257 is 0
9999 mem: location 1258 is 99
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: storing 0 in location 1228
9999 mem: storing 99 in location 1229
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 104 run: *idx <- add *idx, 1
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 2
9999 mem: location 1223 is 1293
9999 mem: storing 3 in location 1293
 104 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1228 is 0
9999 mem: location 1229 is 99
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1222 is 1293
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is [0, 99, 0, 0]
9999 run: result 1 is 1293
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1302
9999 mem: storing 99 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1293 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 0 in location 1307
 103 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 103 run: break-if quit?, 
9999 mem: location 1307 is 0
9999 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1302 is 0
9999 mem: location 1303 is 99
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: storing 0 in location 1308
 103 run: break-unless t, 
9999 mem: location 1308 is 0
9999 run: jumping to instruction 18
 103 run: break-if t, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 mem: location 1302 is 0
9999 mem: location 1303 is 99
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1312
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1313
 104 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1314
9999 mem: storing 99 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
 104 run: jump-if editor, 1:offset
9999 mem: location 1313 is 1115
9999 run: jumping to instruction 6
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 105 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 105 run: reply width
9999 mem: location 1180 is 10
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 10
9999 mem: storing 10 in location 1318
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 105 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 105 run: reply height
9999 mem: location 1180 is 5
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 5
9999 mem: storing 5 in location 1319
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1320
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1321
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1322
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1323
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1324
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1325
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1326
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1314 is 0
9999 mem: location 1315 is 99
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 1315 in location 1327
 104 run: break-unless c, 
9999 mem: location 1327 is 1315
9999 run: jump-unless fell through
 104 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 104 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 99
9999 mem: storing 0 in location 1328
 104 run: break-unless redo?, 
9999 mem: location 1328 is 0
9999 run: jumping to instruction 60
 104 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 99
9999 mem: storing 0 in location 1339
 104 run: break-unless undo?, 
9999 mem: location 1339 is 0
9999 run: jumping to instruction 107
 104 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 99
9999 mem: storing 0 in location 1344
 104 run: break-unless page-up?, 
9999 mem: location 1344 is 0
9999 run: jumping to instruction 149
 104 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 99
9999 mem: storing 0 in location 1360
 104 run: break-unless page-down?, 
9999 mem: location 1360 is 0
9999 run: jumping to instruction 191
 104 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 99
9999 mem: storing 0 in location 1361
 104 run: break-unless delete-to-end-of-line?, 
9999 mem: location 1361 is 0
9999 run: jumping to instruction 210
 104 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 99
9999 mem: storing 0 in location 1366
 104 run: break-unless delete-to-start-of-line?, 
9999 mem: location 1366 is 0
9999 run: jumping to instruction 229
 104 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 99
9999 mem: storing 0 in location 1367
 104 run: break-unless move-to-end-of-line?, 
9999 mem: location 1367 is 0
9999 run: jumping to instruction 266
 104 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 99
9999 mem: storing 0 in location 1368
 104 run: break-unless move-to-start-of-line?, 
9999 mem: location 1368 is 0
9999 run: jumping to instruction 303
 104 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 99
9999 mem: storing 0 in location 1369
 104 run: break-unless delete-previous-character?, 
9999 mem: location 1369 is 0
9999 run: jumping to instruction 343
 104 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 99
9999 mem: storing 0 in location 1374
 104 run: break-unless tab?, 
9999 mem: location 1374 is 0
9999 run: jumping to instruction 379
 104 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 99
9999 mem: storing 0 in location 1378
 104 run: break-unless newline?, 
9999 mem: location 1378 is 0
9999 run: jumping to instruction 397
 104 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 99
9999 mem: storing 1 in location 1381
 104 run: jump-if regular-character?, 1:offset
9999 mem: location 1381 is 1
9999 run: jumping to instruction 401
 104 run: top-before:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1362
 104 run: cursor-before:address:duplex-list <- copy *before-cursor
9999 mem: location 1322 is 1118
9999 mem: location 1118 is 1443
9999 mem: storing 1443 in location 1375
 104 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1313 is 1115
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 99
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 30
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1398
 105 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1399
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1400
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1401
 105 run: insert-duplex c, *before-cursor
9999 mem: location 1399 is 99
9999 mem: location 1401 is 1118
9999 mem: location 1118 is 1443
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 106 run: x:character <- next-ingredient 
9999 mem: storing 99 in location 1141
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1142
 106 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1446
9999 mem: storing 1446 in location 1143
 106 run: val:address:character <- get-address *new-node, value:offset
9999 mem: location 1143 is 1446
9999 mem: location 1446 is 0
9999 mem: location 1447 is 0
9999 mem: location 1448 is 0
9999 mem: location 1143 is 1446
9999 run: address to copy is 1446
9999 mem: storing 1446 in location 1144
 106 run: *val <- copy x
9999 mem: location 1141 is 99
9999 mem: location 1144 is 1446
9999 mem: storing 99 in location 1446
 106 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1142 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 0
9999 mem: location 1445 is 1427
9999 mem: location 1142 is 1443
9999 run: address to copy is 1444
9999 run: its type is address
9999 mem: location 1444 is 0
9999 mem: storing 0 in location 1145
 106 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1142 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 0
9999 mem: location 1445 is 1427
9999 mem: location 1142 is 1443
9999 run: address to copy is 1444
9999 mem: storing 1444 in location 1146
 106 run: *y <- copy new-node
9999 mem: location 1143 is 1446
9999 mem: location 1146 is 1444
9999 mem: storing 1446 in location 1444
 106 run: y <- get-address *new-node, prev:offset
9999 mem: location 1143 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 0
9999 mem: location 1448 is 0
9999 mem: location 1143 is 1446
9999 run: address to copy is 1448
9999 mem: storing 1448 in location 1146
 106 run: *y <- copy in
9999 mem: location 1142 is 1443
9999 mem: location 1146 is 1448
9999 mem: storing 1443 in location 1448
 106 run: y <- get-address *new-node, next:offset
9999 mem: location 1143 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1443
9999 mem: location 1143 is 1446
9999 run: address to copy is 1447
9999 mem: storing 1447 in location 1146
 106 run: *y <- copy next-node
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1447
9999 mem: storing 0 in location 1447
 106 run: jump-if next-node, 1:offset
9999 mem: location 1145 is 0
9999 run: jump-if fell through
 106 run: reply new-node
9999 mem: location 1143 is 1446
9999 trace: reply: decrementing callstack depth from 5
 105 run: *before-cursor <- next-duplex *before-cursor
9999 mem: location 1401 is 1118
9999 mem: location 1118 is 1443
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1443
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1446
9999 mem: location 1445 is 1427
9999 mem: location 1179 is 1443
9999 run: address to copy is 1444
9999 run: its type is address
9999 mem: location 1444 is 1446
9999 mem: storing 1446 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1446
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1446
9999 mem: location 1401 is 1118
9999 mem: storing 1446 in location 1118
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1402
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1403
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1404
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1405
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1402 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1406
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1403 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1407
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1400 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 106 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 106 run: reply width
9999 mem: location 1180 is 10
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 10
9999 mem: storing 10 in location 1408
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1400 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 106 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 106 run: reply height
9999 mem: location 1180 is 5
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1409
 105 run: wrap-column:number <- subtract right, 1
9999 mem: location 1405 is 9
9999 mem: storing 8 in location 1410
 105 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1403 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1410 is 8
9999 mem: storing 0 in location 1411
 105 run: break-unless at-wrap?, 
9999 mem: location 1411 is 0
9999 run: jumping to instruction 39
 105 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1403 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1403 is 1122
9999 mem: storing 3 in location 1122
 105 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1401 is 1118
9999 mem: location 1118 is 1446
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1446 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1446
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1443
9999 mem: location 1179 is 1446
9999 run: address to copy is 1447
9999 run: its type is address
9999 mem: location 1447 is 0
9999 mem: storing 0 in location 1180
 106 run: reply result
9999 mem: location 1180 is 0
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 0
9999 mem: storing 0 in location 1417
 105 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1417 is 0
9999 mem: storing 1 in location 1418
 105 run: break-unless at-end?, 
9999 mem: location 1418 is 1
9999 run: jump-unless fell through
 105 run: bottom:number <- subtract screen-height, 1
9999 mem: location 1409 is 5
9999 mem: storing 4 in location 1419
 105 run: at-bottom?:boolean <- equal save-row, bottom
9999 mem: location 1406 is 1
9999 mem: location 1419 is 4
9999 mem: storing 0 in location 1420
 105 run: at-right?:boolean <- equal save-column, right
9999 mem: location 1407 is 2
9999 mem: location 1405 is 9
9999 mem: storing 0 in location 1421
 105 run: overflow?:boolean <- and at-bottom?, at-right?
9999 mem: location 1420 is 0
9999 mem: location 1421 is 0
9999 mem: storing 0 in location 1422
 105 run: break-if overflow?, 
9999 mem: location 1422 is 0
9999 run: jump-if fell through
 105 run: move-cursor screen, save-row, save-column
9999 mem: location 1400 is 1009
9999 mem: location 1406 is 1
9999 mem: location 1407 is 2
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 106 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 106 run: new-column:number <- next-ingredient 
9999 mem: storing 2 in location 1185
 106 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 106 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 106 run: *column <- copy new-column
9999 mem: location 1185 is 2
9999 mem: location 1187 is 1012
9999 mem: storing 2 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: print-character screen, c
9999 mem: location 1400 is 1009
9999 mem: location 1399 is 99
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 99
  90 print-character: 99 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 99
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 99
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 12
9999 mem: storing 1039 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 99
9999 mem: location 1216 is 1039
9999 mem: storing 99 in location 1039
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1040
9999 mem: storing 7 in location 1040
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply editor/same-as-ingredient:0, screen/same-as-ingredient:2, 0/no-more-render
9999 mem: location 1398 is 1115
9999 mem: location 1400 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1115
9999 run: result 1 is 1009
9999 run: result 2 is 0
9999 mem: storing 1115 in location 1313
9999 mem: storing 1009 in location 1312
9999 mem: storing 0 in location 1370
 104 run: top-after:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1364
 104 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1331
 104 run: break-unless *undo, 
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1441
9999 run: jump-unless fell through
 104 run: op:address:operation/skiptypecheck <- first *undo
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1441
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 1441 in location 1179
 105 run: result:location <- get *in, value:offset
9999 mem: location 1179 is 1441
9999 mem: location 1441 is 1430
9999 mem: location 1442 is 0
9999 mem: location 1179 is 1441
9999 run: address to copy is 1441
9999 run: its type is number
9999 mem: location 1441 is 1430
9999 mem: storing 1430 in location 1180
 105 run: reply result
9999 mem: location 1180 is 1430
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1430
9999 mem: storing 1430 in location 1330
 104 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1330 is 1430
9999 mem: location 1430 is 0
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 2
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1440 is 0
9999 mem: location 1330 is 1430
9999 mem: storing 1431 in location 1337
 104 run: break-unless typing, 
9999 mem: location 1337 is 1431
9999 run: jump-unless fell through
 104 run: previous-coalesce-tag:number <- get *typing, tag:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 2
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1439
9999 run: its type is number
9999 mem: location 1439 is 1
9999 mem: storing 1 in location 1354
 104 run: break-unless previous-coalesce-tag, 
9999 mem: location 1354 is 1
9999 run: jump-unless fell through
 104 run: insert-until:address:address:duplex-list <- get-address *typing, insert-until:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 2
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1438
9999 mem: storing 1438 in location 1376
 104 run: *insert-until <- next-duplex *before-cursor
9999 mem: location 1322 is 1118
9999 mem: location 1118 is 1446
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1446 in location 1179
 105 run: jump-if in, 1:offset
9999 mem: location 1179 is 1446
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1443
9999 mem: location 1179 is 1446
9999 run: address to copy is 1447
9999 run: its type is address
9999 mem: location 1447 is 0
9999 mem: storing 0 in location 1180
 105 run: reply result
9999 mem: location 1180 is 0
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 0
9999 mem: location 1376 is 1438
9999 mem: storing 0 in location 1438
 104 run: after-row:address:number <- get-address *typing, after-row:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 2
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1434
9999 mem: storing 1434 in location 1356
 104 run: *after-row <- copy *cursor-row
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1356 is 1434
9999 mem: storing 1 in location 1434
 104 run: after-column:address:number <- get-address *typing, after-column:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 2
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1435
9999 mem: storing 1435 in location 1357
 104 run: *after-column <- copy *cursor-column
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 3
9999 mem: location 1357 is 1435
9999 mem: storing 3 in location 1435
 104 run: after-top:address:address:duplex-list:character <- get-address *typing, after-top-of-screen:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 3
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1436
9999 mem: storing 1436 in location 1358
 104 run: *after-top <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: location 1358 is 1436
9999 mem: storing 1147 in location 1436
 104 run: break +done-adding-insert-operation:label
9999 run: jumping to instruction 430
 104 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1312 is 1009
9999 mem: location 1313 is 1115
9999 mem: location 1370 is 0
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1297
9999 mem: storing 1115 in location 1299
9999 mem: storing 0 in location 1309
 103 run: break-unless go-render?, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 25
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1301
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 3
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 3 in location 1185
 104 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 104 run: *column <- copy new-column
9999 mem: location 1185 is 3
9999 mem: location 1187 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 103 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1293
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 104 run: x:address:console <- next-ingredient 
9999 mem: storing 1293 in location 1222
 104 run: break-unless x, 
9999 mem: location 1222 is 1293
9999 run: jump-unless fell through
 104 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 3
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1293
9999 mem: storing 1293 in location 1223
 104 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 3
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1248
9999 mem: storing 1248 in location 1224
 104 run: max:number <- length *buf
9999 mem: location 1224 is 1248
9999 mem: storing 11 in location 1225
 104 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 3
9999 mem: location 1225 is 11
9999 mem: storing 0 in location 1226
 104 run: break-unless done?, 
9999 mem: location 1226 is 0
9999 run: jumping to instruction 12
 104 run: result:event <- index *buf, *idx
9999 mem: location 1224 is 1248
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 3
9999 run: address to copy is 1261
9999 run: its type is event
9999 mem: location 1261 is 0
9999 mem: location 1262 is 100
9999 mem: location 1263 is 0
9999 mem: location 1264 is 0
9999 mem: storing 0 in location 1228
9999 mem: storing 100 in location 1229
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 104 run: *idx <- add *idx, 1
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 3
9999 mem: location 1223 is 1293
9999 mem: storing 4 in location 1293
 104 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1228 is 0
9999 mem: location 1229 is 100
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1222 is 1293
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is [0, 100, 0, 0]
9999 run: result 1 is 1293
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1302
9999 mem: storing 100 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1293 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 0 in location 1307
 103 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 103 run: break-if quit?, 
9999 mem: location 1307 is 0
9999 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1302 is 0
9999 mem: location 1303 is 100
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: storing 0 in location 1308
 103 run: break-unless t, 
9999 mem: location 1308 is 0
9999 run: jumping to instruction 18
 103 run: break-if t, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 mem: location 1302 is 0
9999 mem: location 1303 is 100
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1312
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1313
 104 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1314
9999 mem: storing 100 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
 104 run: jump-if editor, 1:offset
9999 mem: location 1313 is 1115
9999 run: jumping to instruction 6
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 105 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 105 run: reply width
9999 mem: location 1180 is 10
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 10
9999 mem: storing 10 in location 1318
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 105 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 105 run: reply height
9999 mem: location 1180 is 5
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 5
9999 mem: storing 5 in location 1319
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1320
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1321
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1322
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1323
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1324
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1325
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1326
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1314 is 0
9999 mem: location 1315 is 100
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 1315 in location 1327
 104 run: break-unless c, 
9999 mem: location 1327 is 1315
9999 run: jump-unless fell through
 104 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
9999 schedule: handle-keyboard-event/editor-event-loop/scenario-editor-can-undo-and-redo-delete
 104 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 100
9999 mem: storing 0 in location 1328
 104 run: break-unless redo?, 
9999 mem: location 1328 is 0
9999 run: jumping to instruction 60
 104 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 100
9999 mem: storing 0 in location 1339
 104 run: break-unless undo?, 
9999 mem: location 1339 is 0
9999 run: jumping to instruction 107
 104 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 100
9999 mem: storing 0 in location 1344
 104 run: break-unless page-up?, 
9999 mem: location 1344 is 0
9999 run: jumping to instruction 149
 104 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 100
9999 mem: storing 0 in location 1360
 104 run: break-unless page-down?, 
9999 mem: location 1360 is 0
9999 run: jumping to instruction 191
 104 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 100
9999 mem: storing 0 in location 1361
 104 run: break-unless delete-to-end-of-line?, 
9999 mem: location 1361 is 0
9999 run: jumping to instruction 210
 104 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 100
9999 mem: storing 0 in location 1366
 104 run: break-unless delete-to-start-of-line?, 
9999 mem: location 1366 is 0
9999 run: jumping to instruction 229
 104 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 100
9999 mem: storing 0 in location 1367
 104 run: break-unless move-to-end-of-line?, 
9999 mem: location 1367 is 0
9999 run: jumping to instruction 266
 104 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 100
9999 mem: storing 0 in location 1368
 104 run: break-unless move-to-start-of-line?, 
9999 mem: location 1368 is 0
9999 run: jumping to instruction 303
 104 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 100
9999 mem: storing 0 in location 1369
 104 run: break-unless delete-previous-character?, 
9999 mem: location 1369 is 0
9999 run: jumping to instruction 343
 104 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 100
9999 mem: storing 0 in location 1374
 104 run: break-unless tab?, 
9999 mem: location 1374 is 0
9999 run: jumping to instruction 379
 104 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 100
9999 mem: storing 0 in location 1378
 104 run: break-unless newline?, 
9999 mem: location 1378 is 0
9999 run: jumping to instruction 397
 104 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 100
9999 mem: storing 1 in location 1381
 104 run: jump-if regular-character?, 1:offset
9999 mem: location 1381 is 1
9999 run: jumping to instruction 401
 104 run: top-before:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1362
 104 run: cursor-before:address:duplex-list <- copy *before-cursor
9999 mem: location 1322 is 1118
9999 mem: location 1118 is 1446
9999 mem: storing 1446 in location 1375
 104 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1313 is 1115
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 100
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 30
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1398
 105 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1399
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1400
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1401
 105 run: insert-duplex c, *before-cursor
9999 mem: location 1399 is 100
9999 mem: location 1401 is 1118
9999 mem: location 1118 is 1446
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 106 run: x:character <- next-ingredient 
9999 mem: storing 100 in location 1141
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1446 in location 1142
 106 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1449
9999 mem: storing 1449 in location 1143
 106 run: val:address:character <- get-address *new-node, value:offset
9999 mem: location 1143 is 1449
9999 mem: location 1449 is 0
9999 mem: location 1450 is 0
9999 mem: location 1451 is 0
9999 mem: location 1143 is 1449
9999 run: address to copy is 1449
9999 mem: storing 1449 in location 1144
 106 run: *val <- copy x
9999 mem: location 1141 is 100
9999 mem: location 1144 is 1449
9999 mem: storing 100 in location 1449
 106 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1142 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1443
9999 mem: location 1142 is 1446
9999 run: address to copy is 1447
9999 run: its type is address
9999 mem: location 1447 is 0
9999 mem: storing 0 in location 1145
 106 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1142 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1443
9999 mem: location 1142 is 1446
9999 run: address to copy is 1447
9999 mem: storing 1447 in location 1146
 106 run: *y <- copy new-node
9999 mem: location 1143 is 1449
9999 mem: location 1146 is 1447
9999 mem: storing 1449 in location 1447
 106 run: y <- get-address *new-node, prev:offset
9999 mem: location 1143 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 0
9999 mem: location 1451 is 0
9999 mem: location 1143 is 1449
9999 run: address to copy is 1451
9999 mem: storing 1451 in location 1146
 106 run: *y <- copy in
9999 mem: location 1142 is 1446
9999 mem: location 1146 is 1451
9999 mem: storing 1446 in location 1451
 106 run: y <- get-address *new-node, next:offset
9999 mem: location 1143 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 0
9999 mem: location 1451 is 1446
9999 mem: location 1143 is 1449
9999 run: address to copy is 1450
9999 mem: storing 1450 in location 1146
 106 run: *y <- copy next-node
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1450
9999 mem: storing 0 in location 1450
 106 run: jump-if next-node, 1:offset
9999 mem: location 1145 is 0
9999 run: jump-if fell through
 106 run: reply new-node
9999 mem: location 1143 is 1449
9999 trace: reply: decrementing callstack depth from 5
 105 run: *before-cursor <- next-duplex *before-cursor
9999 mem: location 1401 is 1118
9999 mem: location 1118 is 1446
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1446 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1446
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 1449
9999 mem: location 1448 is 1443
9999 mem: location 1179 is 1446
9999 run: address to copy is 1447
9999 run: its type is address
9999 mem: location 1447 is 1449
9999 mem: storing 1449 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1449
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1449
9999 mem: location 1401 is 1118
9999 mem: storing 1449 in location 1118
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1449
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1402
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1449
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1403
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1449
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1404
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1449
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1405
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1402 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1406
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1403 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1407
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1400 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 106 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 106 run: reply width
9999 mem: location 1180 is 10
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 10
9999 mem: storing 10 in location 1408
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1400 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 106 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 106 run: reply height
9999 mem: location 1180 is 5
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1409
 105 run: wrap-column:number <- subtract right, 1
9999 mem: location 1405 is 9
9999 mem: storing 8 in location 1410
 105 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1403 is 1122
9999 mem: location 1122 is 3
9999 mem: location 1410 is 8
9999 mem: storing 0 in location 1411
 105 run: break-unless at-wrap?, 
9999 mem: location 1411 is 0
9999 run: jumping to instruction 39
 105 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1403 is 1122
9999 mem: location 1122 is 3
9999 mem: location 1403 is 1122
9999 mem: storing 4 in location 1122
 105 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1401 is 1118
9999 mem: location 1118 is 1449
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1449
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 0
9999 mem: location 1451 is 1446
9999 mem: location 1179 is 1449
9999 run: address to copy is 1450
9999 run: its type is address
9999 mem: location 1450 is 0
9999 mem: storing 0 in location 1180
 106 run: reply result
9999 mem: location 1180 is 0
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 0
9999 mem: storing 0 in location 1417
 105 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1417 is 0
9999 mem: storing 1 in location 1418
 105 run: break-unless at-end?, 
9999 mem: location 1418 is 1
9999 run: jump-unless fell through
 105 run: bottom:number <- subtract screen-height, 1
9999 mem: location 1409 is 5
9999 mem: storing 4 in location 1419
 105 run: at-bottom?:boolean <- equal save-row, bottom
9999 mem: location 1406 is 1
9999 mem: location 1419 is 4
9999 mem: storing 0 in location 1420
 105 run: at-right?:boolean <- equal save-column, right
9999 mem: location 1407 is 3
9999 mem: location 1405 is 9
9999 mem: storing 0 in location 1421
 105 run: overflow?:boolean <- and at-bottom?, at-right?
9999 mem: location 1420 is 0
9999 mem: location 1421 is 0
9999 mem: storing 0 in location 1422
 105 run: break-if overflow?, 
9999 mem: location 1422 is 0
9999 run: jump-if fell through
 105 run: move-cursor screen, save-row, save-column
9999 mem: location 1400 is 1009
9999 mem: location 1406 is 1
9999 mem: location 1407 is 3
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 106 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 106 run: new-column:number <- next-ingredient 
9999 mem: storing 3 in location 1185
 106 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 106 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 106 run: *column <- copy new-column
9999 mem: location 1185 is 3
9999 mem: location 1187 is 1012
9999 mem: storing 3 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: print-character screen, c
9999 mem: location 1400 is 1009
9999 mem: location 1399 is 100
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 100
  90 print-character: 100 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 100
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 100
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 13
9999 mem: storing 1041 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1215 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 100
9999 mem: location 1216 is 1041
9999 mem: storing 100 in location 1041
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1041
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1215 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1042
9999 mem: storing 7 in location 1042
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply editor/same-as-ingredient:0, screen/same-as-ingredient:2, 0/no-more-render
9999 mem: location 1398 is 1115
9999 mem: location 1400 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1115
9999 run: result 1 is 1009
9999 run: result 2 is 0
9999 mem: storing 1115 in location 1313
9999 mem: storing 1009 in location 1312
9999 mem: storing 0 in location 1370
 104 run: top-after:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1449
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1364
 104 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1449
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1331
 104 run: break-unless *undo, 
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1441
9999 run: jump-unless fell through
 104 run: op:address:operation/skiptypecheck <- first *undo
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1441
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 1441 in location 1179
 105 run: result:location <- get *in, value:offset
9999 mem: location 1179 is 1441
9999 mem: location 1441 is 1430
9999 mem: location 1442 is 0
9999 mem: location 1179 is 1441
9999 run: address to copy is 1441
9999 run: its type is number
9999 mem: location 1441 is 1430
9999 mem: storing 1430 in location 1180
 105 run: reply result
9999 mem: location 1180 is 1430
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1430
9999 mem: storing 1430 in location 1330
 104 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1330 is 1430
9999 mem: location 1430 is 0
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 3
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1440 is 0
9999 mem: location 1330 is 1430
9999 mem: storing 1431 in location 1337
 104 run: break-unless typing, 
9999 mem: location 1337 is 1431
9999 run: jump-unless fell through
 104 run: previous-coalesce-tag:number <- get *typing, tag:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 3
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1439
9999 run: its type is number
9999 mem: location 1439 is 1
9999 mem: storing 1 in location 1354
 104 run: break-unless previous-coalesce-tag, 
9999 mem: location 1354 is 1
9999 run: jump-unless fell through
 104 run: insert-until:address:address:duplex-list <- get-address *typing, insert-until:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 3
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1438
9999 mem: storing 1438 in location 1376
 104 run: *insert-until <- next-duplex *before-cursor
9999 mem: location 1322 is 1118
9999 mem: location 1118 is 1449
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1179
 105 run: jump-if in, 1:offset
9999 mem: location 1179 is 1449
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 0
9999 mem: location 1451 is 1446
9999 mem: location 1179 is 1449
9999 run: address to copy is 1450
9999 run: its type is address
9999 mem: location 1450 is 0
9999 mem: storing 0 in location 1180
 105 run: reply result
9999 mem: location 1180 is 0
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 0
9999 mem: location 1376 is 1438
9999 mem: storing 0 in location 1438
 104 run: after-row:address:number <- get-address *typing, after-row:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 3
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1434
9999 mem: storing 1434 in location 1356
 104 run: *after-row <- copy *cursor-row
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1356 is 1434
9999 mem: storing 1 in location 1434
 104 run: after-column:address:number <- get-address *typing, after-column:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 3
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1435
9999 mem: storing 1435 in location 1357
 104 run: *after-column <- copy *cursor-column
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 4
9999 mem: location 1357 is 1435
9999 mem: storing 4 in location 1435
 104 run: after-top:address:address:duplex-list:character <- get-address *typing, after-top-of-screen:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 4
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1436
9999 mem: storing 1436 in location 1358
 104 run: *after-top <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1449
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: location 1358 is 1436
9999 mem: storing 1147 in location 1436
 104 run: break +done-adding-insert-operation:label
9999 run: jumping to instruction 430
 104 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1312 is 1009
9999 mem: location 1313 is 1115
9999 mem: location 1370 is 0
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1297
9999 mem: storing 1115 in location 1299
9999 mem: storing 0 in location 1309
 103 run: break-unless go-render?, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 25
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1449
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1449
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 4
9999 mem: storing 4 in location 1301
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 4
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 4 in location 1185
 104 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 104 run: *column <- copy new-column
9999 mem: location 1185 is 4
9999 mem: location 1187 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 103 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1293
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 104 run: x:address:console <- next-ingredient 
9999 mem: storing 1293 in location 1222
 104 run: break-unless x, 
9999 mem: location 1222 is 1293
9999 run: jump-unless fell through
 104 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 4
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1293
9999 mem: storing 1293 in location 1223
 104 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 4
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1248
9999 mem: storing 1248 in location 1224
 104 run: max:number <- length *buf
9999 mem: location 1224 is 1248
9999 mem: storing 11 in location 1225
 104 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 4
9999 mem: location 1225 is 11
9999 mem: storing 0 in location 1226
 104 run: break-unless done?, 
9999 mem: location 1226 is 0
9999 run: jumping to instruction 12
 104 run: result:event <- index *buf, *idx
9999 mem: location 1224 is 1248
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 4
9999 run: address to copy is 1265
9999 run: its type is event
9999 mem: location 1265 is 0
9999 mem: location 1266 is 101
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: storing 0 in location 1228
9999 mem: storing 101 in location 1229
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 104 run: *idx <- add *idx, 1
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 4
9999 mem: location 1223 is 1293
9999 mem: storing 5 in location 1293
 104 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1228 is 0
9999 mem: location 1229 is 101
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1222 is 1293
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is [0, 101, 0, 0]
9999 run: result 1 is 1293
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1302
9999 mem: storing 101 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1293 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 0 in location 1307
 103 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 103 run: break-if quit?, 
9999 mem: location 1307 is 0
9999 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1302 is 0
9999 mem: location 1303 is 101
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: storing 0 in location 1308
 103 run: break-unless t, 
9999 mem: location 1308 is 0
9999 run: jumping to instruction 18
 103 run: break-if t, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 mem: location 1302 is 0
9999 mem: location 1303 is 101
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1312
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1313
 104 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1314
9999 mem: storing 101 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
 104 run: jump-if editor, 1:offset
9999 mem: location 1313 is 1115
9999 run: jumping to instruction 6
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 105 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 105 run: reply width
9999 mem: location 1180 is 10
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 10
9999 mem: storing 10 in location 1318
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 105 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 105 run: reply height
9999 mem: location 1180 is 5
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 5
9999 mem: storing 5 in location 1319
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1449
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1320
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1449
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1321
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1449
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1322
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1449
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1323
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1449
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1324
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1325
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 4
9999 mem: storing 4 in location 1326
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1314 is 0
9999 mem: location 1315 is 101
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 1315 in location 1327
 104 run: break-unless c, 
9999 mem: location 1327 is 1315
9999 run: jump-unless fell through
 104 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 104 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 101
9999 mem: storing 0 in location 1328
 104 run: break-unless redo?, 
9999 mem: location 1328 is 0
9999 run: jumping to instruction 60
 104 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 101
9999 mem: storing 0 in location 1339
 104 run: break-unless undo?, 
9999 mem: location 1339 is 0
9999 run: jumping to instruction 107
 104 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 101
9999 mem: storing 0 in location 1344
 104 run: break-unless page-up?, 
9999 mem: location 1344 is 0
9999 run: jumping to instruction 149
 104 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 101
9999 mem: storing 0 in location 1360
 104 run: break-unless page-down?, 
9999 mem: location 1360 is 0
9999 run: jumping to instruction 191
 104 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 101
9999 mem: storing 0 in location 1361
 104 run: break-unless delete-to-end-of-line?, 
9999 mem: location 1361 is 0
9999 run: jumping to instruction 210
 104 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 101
9999 mem: storing 0 in location 1366
 104 run: break-unless delete-to-start-of-line?, 
9999 mem: location 1366 is 0
9999 run: jumping to instruction 229
 104 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 101
9999 mem: storing 0 in location 1367
 104 run: break-unless move-to-end-of-line?, 
9999 mem: location 1367 is 0
9999 run: jumping to instruction 266
 104 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 101
9999 mem: storing 0 in location 1368
 104 run: break-unless move-to-start-of-line?, 
9999 mem: location 1368 is 0
9999 run: jumping to instruction 303
 104 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 101
9999 mem: storing 0 in location 1369
 104 run: break-unless delete-previous-character?, 
9999 mem: location 1369 is 0
9999 run: jumping to instruction 343
 104 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 101
9999 mem: storing 0 in location 1374
 104 run: break-unless tab?, 
9999 mem: location 1374 is 0
9999 run: jumping to instruction 379
 104 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 101
9999 mem: storing 0 in location 1378
 104 run: break-unless newline?, 
9999 mem: location 1378 is 0
9999 run: jumping to instruction 397
 104 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 101
9999 mem: storing 1 in location 1381
 104 run: jump-if regular-character?, 1:offset
9999 mem: location 1381 is 1
9999 run: jumping to instruction 401
 104 run: top-before:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1449
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1362
 104 run: cursor-before:address:duplex-list <- copy *before-cursor
9999 mem: location 1322 is 1118
9999 mem: location 1118 is 1449
9999 mem: storing 1449 in location 1375
 104 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1313 is 1115
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 101
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 30
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1398
 105 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1399
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1400
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1449
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1401
 105 run: insert-duplex c, *before-cursor
9999 mem: location 1399 is 101
9999 mem: location 1401 is 1118
9999 mem: location 1118 is 1449
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 106 run: x:character <- next-ingredient 
9999 mem: storing 101 in location 1141
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1142
 106 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1452
9999 mem: storing 1452 in location 1143
 106 run: val:address:character <- get-address *new-node, value:offset
9999 mem: location 1143 is 1452
9999 mem: location 1452 is 0
9999 mem: location 1453 is 0
9999 mem: location 1454 is 0
9999 mem: location 1143 is 1452
9999 run: address to copy is 1452
9999 mem: storing 1452 in location 1144
 106 run: *val <- copy x
9999 mem: location 1141 is 101
9999 mem: location 1144 is 1452
9999 mem: storing 101 in location 1452
 106 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1142 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 0
9999 mem: location 1451 is 1446
9999 mem: location 1142 is 1449
9999 run: address to copy is 1450
9999 run: its type is address
9999 mem: location 1450 is 0
9999 mem: storing 0 in location 1145
 106 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1142 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 0
9999 mem: location 1451 is 1446
9999 mem: location 1142 is 1449
9999 run: address to copy is 1450
9999 mem: storing 1450 in location 1146
 106 run: *y <- copy new-node
9999 mem: location 1143 is 1452
9999 mem: location 1146 is 1450
9999 mem: storing 1452 in location 1450
 106 run: y <- get-address *new-node, prev:offset
9999 mem: location 1143 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 0
9999 mem: location 1454 is 0
9999 mem: location 1143 is 1452
9999 run: address to copy is 1454
9999 mem: storing 1454 in location 1146
 106 run: *y <- copy in
9999 mem: location 1142 is 1449
9999 mem: location 1146 is 1454
9999 mem: storing 1449 in location 1454
 106 run: y <- get-address *new-node, next:offset
9999 mem: location 1143 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 0
9999 mem: location 1454 is 1449
9999 mem: location 1143 is 1452
9999 run: address to copy is 1453
9999 mem: storing 1453 in location 1146
 106 run: *y <- copy next-node
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1453
9999 mem: storing 0 in location 1453
 106 run: jump-if next-node, 1:offset
9999 mem: location 1145 is 0
9999 run: jump-if fell through
 106 run: reply new-node
9999 mem: location 1143 is 1452
9999 trace: reply: decrementing callstack depth from 5
 105 run: *before-cursor <- next-duplex *before-cursor
9999 mem: location 1401 is 1118
9999 mem: location 1118 is 1449
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1449
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1446
9999 mem: location 1179 is 1449
9999 run: address to copy is 1450
9999 run: its type is address
9999 mem: location 1450 is 1452
9999 mem: storing 1452 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1452
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1452
9999 mem: location 1401 is 1118
9999 mem: storing 1452 in location 1118
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1402
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1403
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1404
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1405
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1402 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1406
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1403 is 1122
9999 mem: location 1122 is 4
9999 mem: storing 4 in location 1407
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1400 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 106 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 106 run: reply width
9999 mem: location 1180 is 10
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 10
9999 mem: storing 10 in location 1408
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1400 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 106 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 106 run: reply height
9999 mem: location 1180 is 5
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1409
 105 run: wrap-column:number <- subtract right, 1
9999 mem: location 1405 is 9
9999 mem: storing 8 in location 1410
 105 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1403 is 1122
9999 mem: location 1122 is 4
9999 mem: location 1410 is 8
9999 mem: storing 0 in location 1411
 105 run: break-unless at-wrap?, 
9999 mem: location 1411 is 0
9999 run: jumping to instruction 39
 105 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1403 is 1122
9999 mem: location 1122 is 4
9999 mem: location 1403 is 1122
9999 mem: storing 5 in location 1122
 105 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1401 is 1118
9999 mem: location 1118 is 1452
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1452
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 0
9999 mem: location 1454 is 1449
9999 mem: location 1179 is 1452
9999 run: address to copy is 1453
9999 run: its type is address
9999 mem: location 1453 is 0
9999 mem: storing 0 in location 1180
 106 run: reply result
9999 mem: location 1180 is 0
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 0
9999 mem: storing 0 in location 1417
 105 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1417 is 0
9999 mem: storing 1 in location 1418
 105 run: break-unless at-end?, 
9999 mem: location 1418 is 1
9999 run: jump-unless fell through
 105 run: bottom:number <- subtract screen-height, 1
9999 mem: location 1409 is 5
9999 mem: storing 4 in location 1419
 105 run: at-bottom?:boolean <- equal save-row, bottom
9999 mem: location 1406 is 1
9999 mem: location 1419 is 4
9999 mem: storing 0 in location 1420
 105 run: at-right?:boolean <- equal save-column, right
9999 mem: location 1407 is 4
9999 mem: location 1405 is 9
9999 mem: storing 0 in location 1421
 105 run: overflow?:boolean <- and at-bottom?, at-right?
9999 mem: location 1420 is 0
9999 mem: location 1421 is 0
9999 mem: storing 0 in location 1422
 105 run: break-if overflow?, 
9999 mem: location 1422 is 0
9999 run: jump-if fell through
 105 run: move-cursor screen, save-row, save-column
9999 mem: location 1400 is 1009
9999 mem: location 1406 is 1
9999 mem: location 1407 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 106 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 106 run: new-column:number <- next-ingredient 
9999 mem: storing 4 in location 1185
 106 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 106 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 106 run: *column <- copy new-column
9999 mem: location 1185 is 4
9999 mem: location 1187 is 1012
9999 mem: storing 4 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: print-character screen, c
9999 mem: location 1400 is 1009
9999 mem: location 1399 is 101
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 101
  90 print-character: 101 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 101
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 101
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 14
9999 mem: storing 1043 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1215 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 101
9999 mem: location 1216 is 1043
9999 mem: storing 101 in location 1043
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1043
9999 mem: location 1043 is 101
9999 mem: location 1044 is 7
9999 mem: location 1215 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1044
9999 mem: storing 7 in location 1044
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply editor/same-as-ingredient:0, screen/same-as-ingredient:2, 0/no-more-render
9999 mem: location 1398 is 1115
9999 mem: location 1400 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1115
9999 run: result 1 is 1009
9999 run: result 2 is 0
9999 mem: storing 1115 in location 1313
9999 mem: storing 1009 in location 1312
9999 mem: storing 0 in location 1370
 104 run: top-after:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 5
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1364
 104 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 5
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1331
 104 run: break-unless *undo, 
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1441
9999 run: jump-unless fell through
 104 run: op:address:operation/skiptypecheck <- first *undo
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1441
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 1441 in location 1179
 105 run: result:location <- get *in, value:offset
9999 mem: location 1179 is 1441
9999 mem: location 1441 is 1430
9999 mem: location 1442 is 0
9999 mem: location 1179 is 1441
9999 run: address to copy is 1441
9999 run: its type is number
9999 mem: location 1441 is 1430
9999 mem: storing 1430 in location 1180
 105 run: reply result
9999 mem: location 1180 is 1430
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1430
9999 mem: storing 1430 in location 1330
 104 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1330 is 1430
9999 mem: location 1430 is 0
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 4
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1440 is 0
9999 mem: location 1330 is 1430
9999 mem: storing 1431 in location 1337
 104 run: break-unless typing, 
9999 mem: location 1337 is 1431
9999 run: jump-unless fell through
 104 run: previous-coalesce-tag:number <- get *typing, tag:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 4
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1439
9999 run: its type is number
9999 mem: location 1439 is 1
9999 mem: storing 1 in location 1354
 104 run: break-unless previous-coalesce-tag, 
9999 mem: location 1354 is 1
9999 run: jump-unless fell through
 104 run: insert-until:address:address:duplex-list <- get-address *typing, insert-until:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 4
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1438
9999 mem: storing 1438 in location 1376
 104 run: *insert-until <- next-duplex *before-cursor
9999 mem: location 1322 is 1118
9999 mem: location 1118 is 1452
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1179
 105 run: jump-if in, 1:offset
9999 mem: location 1179 is 1452
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 0
9999 mem: location 1454 is 1449
9999 mem: location 1179 is 1452
9999 run: address to copy is 1453
9999 run: its type is address
9999 mem: location 1453 is 0
9999 mem: storing 0 in location 1180
 105 run: reply result
9999 mem: location 1180 is 0
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 0
9999 mem: location 1376 is 1438
9999 mem: storing 0 in location 1438
 104 run: after-row:address:number <- get-address *typing, after-row:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 4
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1434
9999 mem: storing 1434 in location 1356
 104 run: *after-row <- copy *cursor-row
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1356 is 1434
9999 mem: storing 1 in location 1434
 104 run: after-column:address:number <- get-address *typing, after-column:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 4
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1435
9999 mem: storing 1435 in location 1357
 104 run: *after-column <- copy *cursor-column
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 5
9999 mem: location 1357 is 1435
9999 mem: storing 5 in location 1435
 104 run: after-top:address:address:duplex-list:character <- get-address *typing, after-top-of-screen:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 5
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1436
9999 mem: storing 1436 in location 1358
 104 run: *after-top <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 5
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: location 1358 is 1436
9999 mem: storing 1147 in location 1436
 104 run: break +done-adding-insert-operation:label
9999 run: jumping to instruction 430
9999 schedule: handle-keyboard-event/editor-event-loop/scenario-editor-can-undo-and-redo-delete
 104 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1312 is 1009
9999 mem: location 1313 is 1115
9999 mem: location 1370 is 0
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1297
9999 mem: storing 1115 in location 1299
9999 mem: storing 0 in location 1309
 103 run: break-unless go-render?, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 25
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 5
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 5
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 5
9999 mem: storing 5 in location 1301
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 5
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 5 in location 1185
 104 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 104 run: *column <- copy new-column
9999 mem: location 1185 is 5
9999 mem: location 1187 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 103 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1293
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 104 run: x:address:console <- next-ingredient 
9999 mem: storing 1293 in location 1222
 104 run: break-unless x, 
9999 mem: location 1222 is 1293
9999 run: jump-unless fell through
 104 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 5
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1293
9999 mem: storing 1293 in location 1223
 104 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 5
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1248
9999 mem: storing 1248 in location 1224
 104 run: max:number <- length *buf
9999 mem: location 1224 is 1248
9999 mem: storing 11 in location 1225
 104 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 5
9999 mem: location 1225 is 11
9999 mem: storing 0 in location 1226
 104 run: break-unless done?, 
9999 mem: location 1226 is 0
9999 run: jumping to instruction 12
 104 run: result:event <- index *buf, *idx
9999 mem: location 1224 is 1248
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 5
9999 run: address to copy is 1269
9999 run: its type is event
9999 mem: location 1269 is 0
9999 mem: location 1270 is 102
9999 mem: location 1271 is 0
9999 mem: location 1272 is 0
9999 mem: storing 0 in location 1228
9999 mem: storing 102 in location 1229
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 104 run: *idx <- add *idx, 1
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 5
9999 mem: location 1223 is 1293
9999 mem: storing 6 in location 1293
 104 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1228 is 0
9999 mem: location 1229 is 102
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1222 is 1293
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is [0, 102, 0, 0]
9999 run: result 1 is 1293
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1302
9999 mem: storing 102 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1293 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 0 in location 1307
 103 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 103 run: break-if quit?, 
9999 mem: location 1307 is 0
9999 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1302 is 0
9999 mem: location 1303 is 102
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: storing 0 in location 1308
 103 run: break-unless t, 
9999 mem: location 1308 is 0
9999 run: jumping to instruction 18
 103 run: break-if t, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 mem: location 1302 is 0
9999 mem: location 1303 is 102
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1312
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1313
 104 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1314
9999 mem: storing 102 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
 104 run: jump-if editor, 1:offset
9999 mem: location 1313 is 1115
9999 run: jumping to instruction 6
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 105 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 105 run: reply width
9999 mem: location 1180 is 10
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 10
9999 mem: storing 10 in location 1318
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 105 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 105 run: reply height
9999 mem: location 1180 is 5
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 5
9999 mem: storing 5 in location 1319
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 5
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1320
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 5
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1321
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 5
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1322
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 5
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1323
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 5
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1324
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1325
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 5
9999 mem: storing 5 in location 1326
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1314 is 0
9999 mem: location 1315 is 102
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 1315 in location 1327
 104 run: break-unless c, 
9999 mem: location 1327 is 1315
9999 run: jump-unless fell through
 104 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 104 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 102
9999 mem: storing 0 in location 1328
 104 run: break-unless redo?, 
9999 mem: location 1328 is 0
9999 run: jumping to instruction 60
 104 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 102
9999 mem: storing 0 in location 1339
 104 run: break-unless undo?, 
9999 mem: location 1339 is 0
9999 run: jumping to instruction 107
 104 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 102
9999 mem: storing 0 in location 1344
 104 run: break-unless page-up?, 
9999 mem: location 1344 is 0
9999 run: jumping to instruction 149
 104 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 102
9999 mem: storing 0 in location 1360
 104 run: break-unless page-down?, 
9999 mem: location 1360 is 0
9999 run: jumping to instruction 191
 104 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 102
9999 mem: storing 0 in location 1361
 104 run: break-unless delete-to-end-of-line?, 
9999 mem: location 1361 is 0
9999 run: jumping to instruction 210
 104 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 102
9999 mem: storing 0 in location 1366
 104 run: break-unless delete-to-start-of-line?, 
9999 mem: location 1366 is 0
9999 run: jumping to instruction 229
 104 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 102
9999 mem: storing 0 in location 1367
 104 run: break-unless move-to-end-of-line?, 
9999 mem: location 1367 is 0
9999 run: jumping to instruction 266
 104 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 102
9999 mem: storing 0 in location 1368
 104 run: break-unless move-to-start-of-line?, 
9999 mem: location 1368 is 0
9999 run: jumping to instruction 303
 104 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 102
9999 mem: storing 0 in location 1369
 104 run: break-unless delete-previous-character?, 
9999 mem: location 1369 is 0
9999 run: jumping to instruction 343
 104 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 102
9999 mem: storing 0 in location 1374
 104 run: break-unless tab?, 
9999 mem: location 1374 is 0
9999 run: jumping to instruction 379
 104 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 102
9999 mem: storing 0 in location 1378
 104 run: break-unless newline?, 
9999 mem: location 1378 is 0
9999 run: jumping to instruction 397
 104 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 102
9999 mem: storing 1 in location 1381
 104 run: jump-if regular-character?, 1:offset
9999 mem: location 1381 is 1
9999 run: jumping to instruction 401
 104 run: top-before:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 5
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1362
 104 run: cursor-before:address:duplex-list <- copy *before-cursor
9999 mem: location 1322 is 1118
9999 mem: location 1118 is 1452
9999 mem: storing 1452 in location 1375
 104 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1313 is 1115
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 102
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 30
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1398
 105 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1399
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1400
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 5
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1401
 105 run: insert-duplex c, *before-cursor
9999 mem: location 1399 is 102
9999 mem: location 1401 is 1118
9999 mem: location 1118 is 1452
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 106 run: x:character <- next-ingredient 
9999 mem: storing 102 in location 1141
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1142
 106 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1455
9999 mem: storing 1455 in location 1143
 106 run: val:address:character <- get-address *new-node, value:offset
9999 mem: location 1143 is 1455
9999 mem: location 1455 is 0
9999 mem: location 1456 is 0
9999 mem: location 1457 is 0
9999 mem: location 1143 is 1455
9999 run: address to copy is 1455
9999 mem: storing 1455 in location 1144
 106 run: *val <- copy x
9999 mem: location 1141 is 102
9999 mem: location 1144 is 1455
9999 mem: storing 102 in location 1455
 106 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1142 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 0
9999 mem: location 1454 is 1449
9999 mem: location 1142 is 1452
9999 run: address to copy is 1453
9999 run: its type is address
9999 mem: location 1453 is 0
9999 mem: storing 0 in location 1145
 106 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1142 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 0
9999 mem: location 1454 is 1449
9999 mem: location 1142 is 1452
9999 run: address to copy is 1453
9999 mem: storing 1453 in location 1146
 106 run: *y <- copy new-node
9999 mem: location 1143 is 1455
9999 mem: location 1146 is 1453
9999 mem: storing 1455 in location 1453
 106 run: y <- get-address *new-node, prev:offset
9999 mem: location 1143 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 0
9999 mem: location 1143 is 1455
9999 run: address to copy is 1457
9999 mem: storing 1457 in location 1146
 106 run: *y <- copy in
9999 mem: location 1142 is 1452
9999 mem: location 1146 is 1457
9999 mem: storing 1452 in location 1457
 106 run: y <- get-address *new-node, next:offset
9999 mem: location 1143 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1143 is 1455
9999 run: address to copy is 1456
9999 mem: storing 1456 in location 1146
 106 run: *y <- copy next-node
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1456
9999 mem: storing 0 in location 1456
 106 run: jump-if next-node, 1:offset
9999 mem: location 1145 is 0
9999 run: jump-if fell through
 106 run: reply new-node
9999 mem: location 1143 is 1455
9999 trace: reply: decrementing callstack depth from 5
 105 run: *before-cursor <- next-duplex *before-cursor
9999 mem: location 1401 is 1118
9999 mem: location 1118 is 1452
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1452
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1179 is 1452
9999 run: address to copy is 1453
9999 run: its type is address
9999 mem: location 1453 is 1455
9999 mem: storing 1455 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1455
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1455
9999 mem: location 1401 is 1118
9999 mem: storing 1455 in location 1118
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1455
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 5
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1402
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1455
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 5
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1403
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1455
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 5
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1404
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1398 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1455
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 5
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1398 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1405
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1402 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1406
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1403 is 1122
9999 mem: location 1122 is 5
9999 mem: storing 5 in location 1407
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1400 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 106 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 106 run: reply width
9999 mem: location 1180 is 10
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 10
9999 mem: storing 10 in location 1408
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1400 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 106 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 106 run: reply height
9999 mem: location 1180 is 5
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1409
 105 run: wrap-column:number <- subtract right, 1
9999 mem: location 1405 is 9
9999 mem: storing 8 in location 1410
 105 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1403 is 1122
9999 mem: location 1122 is 5
9999 mem: location 1410 is 8
9999 mem: storing 0 in location 1411
 105 run: break-unless at-wrap?, 
9999 mem: location 1411 is 0
9999 run: jumping to instruction 39
 105 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1403 is 1122
9999 mem: location 1122 is 5
9999 mem: location 1403 is 1122
9999 mem: storing 6 in location 1122
 105 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1401 is 1118
9999 mem: location 1118 is 1455
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1455 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1455
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1179 is 1455
9999 run: address to copy is 1456
9999 run: its type is address
9999 mem: location 1456 is 0
9999 mem: storing 0 in location 1180
 106 run: reply result
9999 mem: location 1180 is 0
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 0
9999 mem: storing 0 in location 1417
 105 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1417 is 0
9999 mem: storing 1 in location 1418
 105 run: break-unless at-end?, 
9999 mem: location 1418 is 1
9999 run: jump-unless fell through
 105 run: bottom:number <- subtract screen-height, 1
9999 mem: location 1409 is 5
9999 mem: storing 4 in location 1419
 105 run: at-bottom?:boolean <- equal save-row, bottom
9999 mem: location 1406 is 1
9999 mem: location 1419 is 4
9999 mem: storing 0 in location 1420
 105 run: at-right?:boolean <- equal save-column, right
9999 mem: location 1407 is 5
9999 mem: location 1405 is 9
9999 mem: storing 0 in location 1421
 105 run: overflow?:boolean <- and at-bottom?, at-right?
9999 mem: location 1420 is 0
9999 mem: location 1421 is 0
9999 mem: storing 0 in location 1422
 105 run: break-if overflow?, 
9999 mem: location 1422 is 0
9999 run: jump-if fell through
 105 run: move-cursor screen, save-row, save-column
9999 mem: location 1400 is 1009
9999 mem: location 1406 is 1
9999 mem: location 1407 is 5
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 106 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 106 run: new-column:number <- next-ingredient 
9999 mem: storing 5 in location 1185
 106 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 106 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 106 run: *column <- copy new-column
9999 mem: location 1185 is 5
9999 mem: location 1187 is 1012
9999 mem: storing 5 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: print-character screen, c
9999 mem: location 1400 is 1009
9999 mem: location 1399 is 102
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 102
  90 print-character: 102 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 102
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 102
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 15
9999 mem: storing 1045 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1215 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 102
9999 mem: location 1216 is 1045
9999 mem: storing 102 in location 1045
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1045
9999 mem: location 1045 is 102
9999 mem: location 1046 is 7
9999 mem: location 1215 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1046
9999 mem: storing 7 in location 1046
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply editor/same-as-ingredient:0, screen/same-as-ingredient:2, 0/no-more-render
9999 mem: location 1398 is 1115
9999 mem: location 1400 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1115
9999 run: result 1 is 1009
9999 run: result 2 is 0
9999 mem: storing 1115 in location 1313
9999 mem: storing 1009 in location 1312
9999 mem: storing 0 in location 1370
 104 run: top-after:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1455
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 6
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1364
 104 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1455
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 6
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1331
 104 run: break-unless *undo, 
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1441
9999 run: jump-unless fell through
 104 run: op:address:operation/skiptypecheck <- first *undo
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1441
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 1441 in location 1179
 105 run: result:location <- get *in, value:offset
9999 mem: location 1179 is 1441
9999 mem: location 1441 is 1430
9999 mem: location 1442 is 0
9999 mem: location 1179 is 1441
9999 run: address to copy is 1441
9999 run: its type is number
9999 mem: location 1441 is 1430
9999 mem: storing 1430 in location 1180
 105 run: reply result
9999 mem: location 1180 is 1430
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1430
9999 mem: storing 1430 in location 1330
 104 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1330 is 1430
9999 mem: location 1430 is 0
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 5
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1440 is 0
9999 mem: location 1330 is 1430
9999 mem: storing 1431 in location 1337
 104 run: break-unless typing, 
9999 mem: location 1337 is 1431
9999 run: jump-unless fell through
 104 run: previous-coalesce-tag:number <- get *typing, tag:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 5
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1439
9999 run: its type is number
9999 mem: location 1439 is 1
9999 mem: storing 1 in location 1354
 104 run: break-unless previous-coalesce-tag, 
9999 mem: location 1354 is 1
9999 run: jump-unless fell through
 104 run: insert-until:address:address:duplex-list <- get-address *typing, insert-until:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 5
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1438
9999 mem: storing 1438 in location 1376
 104 run: *insert-until <- next-duplex *before-cursor
9999 mem: location 1322 is 1118
9999 mem: location 1118 is 1455
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1455 in location 1179
 105 run: jump-if in, 1:offset
9999 mem: location 1179 is 1455
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1179 is 1455
9999 run: address to copy is 1456
9999 run: its type is address
9999 mem: location 1456 is 0
9999 mem: storing 0 in location 1180
 105 run: reply result
9999 mem: location 1180 is 0
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 0
9999 mem: location 1376 is 1438
9999 mem: storing 0 in location 1438
 104 run: after-row:address:number <- get-address *typing, after-row:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 5
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1434
9999 mem: storing 1434 in location 1356
 104 run: *after-row <- copy *cursor-row
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1356 is 1434
9999 mem: storing 1 in location 1434
 104 run: after-column:address:number <- get-address *typing, after-column:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 5
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1435
9999 mem: storing 1435 in location 1357
 104 run: *after-column <- copy *cursor-column
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 6
9999 mem: location 1357 is 1435
9999 mem: storing 6 in location 1435
 104 run: after-top:address:address:duplex-list:character <- get-address *typing, after-top-of-screen:offset
9999 mem: location 1337 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1147
9999 mem: location 1434 is 1
9999 mem: location 1435 is 6
9999 mem: location 1436 is 1147
9999 mem: location 1437 is 1427
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1
9999 mem: location 1337 is 1431
9999 run: address to copy is 1436
9999 mem: storing 1436 in location 1358
 104 run: *after-top <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1455
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 6
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: location 1358 is 1436
9999 mem: storing 1147 in location 1436
 104 run: break +done-adding-insert-operation:label
9999 run: jumping to instruction 430
 104 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1312 is 1009
9999 mem: location 1313 is 1115
9999 mem: location 1370 is 0
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1297
9999 mem: storing 1115 in location 1299
9999 mem: storing 0 in location 1309
 103 run: break-unless go-render?, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 25
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1455
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 6
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1455
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 6
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 6
9999 mem: storing 6 in location 1301
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 6
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 6 in location 1185
 104 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 104 run: *column <- copy new-column
9999 mem: location 1185 is 6
9999 mem: location 1187 is 1012
9999 mem: storing 6 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 103 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1293
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 104 run: x:address:console <- next-ingredient 
9999 mem: storing 1293 in location 1222
 104 run: break-unless x, 
9999 mem: location 1222 is 1293
9999 run: jump-unless fell through
 104 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 6
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1293
9999 mem: storing 1293 in location 1223
 104 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 6
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1248
9999 mem: storing 1248 in location 1224
 104 run: max:number <- length *buf
9999 mem: location 1224 is 1248
9999 mem: storing 11 in location 1225
 104 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 6
9999 mem: location 1225 is 11
9999 mem: storing 0 in location 1226
 104 run: break-unless done?, 
9999 mem: location 1226 is 0
9999 run: jumping to instruction 12
 104 run: result:event <- index *buf, *idx
9999 mem: location 1224 is 1248
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 6
9999 run: address to copy is 1273
9999 run: its type is event
9999 mem: location 1273 is 2
9999 mem: location 1274 is 65513
9999 mem: location 1275 is 1
9999 mem: location 1276 is 2
9999 mem: storing 2 in location 1228
9999 mem: storing 65513 in location 1229
9999 mem: storing 1 in location 1230
9999 mem: storing 2 in location 1231
 104 run: *idx <- add *idx, 1
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 6
9999 mem: location 1223 is 1293
9999 mem: storing 7 in location 1293
 104 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1228 is 2
9999 mem: location 1229 is 65513
9999 mem: location 1230 is 1
9999 mem: location 1231 is 2
9999 mem: location 1222 is 1293
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is [2, 65513, 1, 2]
9999 run: result 1 is 1293
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 2 in location 1302
9999 mem: storing 65513 in location 1303
9999 mem: storing 1 in location 1304
9999 mem: storing 2 in location 1305
9999 mem: storing 1293 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 0 in location 1307
 103 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 103 run: break-if quit?, 
9999 mem: location 1307 is 0
9999 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1302 is 2
9999 mem: location 1303 is 65513
9999 mem: location 1304 is 1
9999 mem: location 1305 is 2
9999 mem: storing 1303 in location 1308
 103 run: break-unless t, 
9999 mem: location 1308 is 1303
9999 run: jump-unless fell through
 103 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 mem: location 1308 is 1303
9999 mem: location 1303 is 65513
9999 mem: location 1304 is 1
9999 mem: location 1305 is 2
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: new alloc: 1458
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1460
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1461
 104 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1462
9999 mem: storing 1 in location 1463
9999 mem: storing 2 in location 1464
 104 run: jump-if editor, 1:offset
9999 mem: location 1461 is 1115
9999 run: jumping to instruction 6
 104 run: click-row:number <- get t, row:offset
9999 mem: location 1462 is 65513
9999 mem: location 1463 is 1
9999 mem: location 1464 is 2
9999 run: address to copy is 1463
9999 run: its type is number
9999 mem: location 1463 is 1
9999 mem: storing 1 in location 1465
 104 run: jump-if click-row, 1:offset
9999 mem: location 1465 is 1
9999 run: jumping to instruction 9
 104 run: click-column:number <- get t, column:offset
9999 mem: location 1462 is 65513
9999 mem: location 1463 is 1
9999 mem: location 1464 is 2
9999 run: address to copy is 1464
9999 run: its type is number
9999 mem: location 1464 is 2
9999 mem: storing 2 in location 1466
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1461 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1455
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 6
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1461 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1467
 104 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1466 is 2
9999 mem: location 1467 is 0
9999 mem: storing 0 in location 1468
 104 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1468 is 0
9999 run: jumping to instruction 14
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1461 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1455
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 6
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1461 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1469
 104 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1466 is 2
9999 mem: location 1469 is 9
9999 mem: storing 0 in location 1470
 104 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1470 is 0
9999 run: jumping to instruction 18
 104 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1461 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1455
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 6
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1461 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1471
 104 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1461 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1455
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 6
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1461 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 6
9999 mem: storing 6 in location 1472
 104 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1461 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1455
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 6
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1461 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1473
 104 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1460 is 1009
9999 mem: location 1461 is 1115
9999 mem: location 1465 is 1
9999 mem: location 1466 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1152
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1153
 105 run: target-row:number <- next-ingredient 
9999 mem: storing 1 in location 1154
 105 run: target-column:number <- next-ingredient 
9999 mem: storing 2 in location 1155
 105 run: jump-if editor, 1:offset
9999 mem: location 1153 is 1115
9999 run: jumping to instruction 7
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1455
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 6
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1156
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1455
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 6
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1157
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1152 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 106 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 106 run: reply height
9999 mem: location 1180 is 5
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1158
 105 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1455
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 6
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1159
 105 run: prev:address:duplex-list <- copy curr
9999 mem: location 1159 is 1147
9999 mem: storing 1147 in location 1160
 105 run: curr <- next-duplex curr
9999 mem: location 1159 is 1147
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1147 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1147
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1147
9999 mem: location 1147 is 167
9999 mem: location 1148 is 1427
9999 mem: location 1149 is 0
9999 mem: location 1179 is 1147
9999 run: address to copy is 1148
9999 run: its type is address
9999 mem: location 1148 is 1427
9999 mem: storing 1427 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1427
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1427
9999 mem: storing 1427 in location 1159
 105 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1161
 105 run: column:number <- copy left
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1162
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1455
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 6
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1163
 105 run: *cursor-row <- copy target-row
9999 mem: location 1154 is 1
9999 mem: location 1163 is 1121
9999 mem: storing 1 in location 1121
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1455
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 6
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1164
 105 run: *cursor-column <- copy target-column
9999 mem: location 1155 is 2
9999 mem: location 1164 is 1122
9999 mem: storing 2 in location 1122
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1455
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1165
 105 run: break-unless curr, 
9999 mem: location 1159 is 1427
9999 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1161 is 1
9999 mem: location 1158 is 5
9999 mem: storing 0 in location 1166
 105 run: break-if off-screen?, 
9999 mem: location 1166 is 0
9999 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1161 is 1
9999 mem: location 1163 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1167
 105 run: break-unless at-cursor-row?, 
9999 mem: location 1167 is 1
9999 run: jump-unless fell through
 105 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1162 is 0
9999 mem: location 1164 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 0 in location 1168
 105 run: break-unless at-cursor?, 
9999 mem: location 1168 is 0
9999 run: jumping to instruction 31
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1159 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1443
9999 mem: location 1429 is 1147
9999 mem: location 1159 is 1427
9999 run: address to copy is 1427
9999 run: its type is character
9999 mem: location 1427 is 97
9999 mem: storing 97 in location 1169
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1169 is 97
9999 mem: storing 0 in location 1170
 105 run: break-unless newline?, 
9999 mem: location 1170 is 0
9999 run: jumping to instruction 49
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1162 is 0
9999 mem: location 1157 is 9
9999 mem: storing 0 in location 1172
 105 run: break-unless at-right?, 
9999 mem: location 1172 is 0
9999 run: jumping to instruction 56
 105 run: curr <- next-duplex curr
9999 mem: location 1159 is 1427
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1427
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1443
9999 mem: location 1429 is 1147
9999 mem: location 1179 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1443
9999 mem: storing 1443 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1443
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1443
9999 mem: storing 1443 in location 1159
 105 run: prev <- next-duplex prev
9999 mem: location 1160 is 1147
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1147 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1147
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1147
9999 mem: location 1147 is 167
9999 mem: location 1148 is 1427
9999 mem: location 1149 is 0
9999 mem: location 1179 is 1147
9999 run: address to copy is 1148
9999 run: its type is address
9999 mem: location 1148 is 1427
9999 mem: storing 1427 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1427
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1427
9999 mem: storing 1427 in location 1160
 105 run: column <- add column, 1
9999 mem: location 1162 is 0
9999 mem: storing 1 in location 1162
 105 run: loop 
9999 run: jumping to instruction 21
 105 run: break-unless curr, 
9999 mem: location 1159 is 1443
9999 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1161 is 1
9999 mem: location 1158 is 5
9999 mem: storing 0 in location 1166
 105 run: break-if off-screen?, 
9999 mem: location 1166 is 0
9999 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1161 is 1
9999 mem: location 1163 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1167
 105 run: break-unless at-cursor-row?, 
9999 mem: location 1167 is 1
9999 run: jump-unless fell through
 105 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1162 is 1
9999 mem: location 1164 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 0 in location 1168
 105 run: break-unless at-cursor?, 
9999 mem: location 1168 is 0
9999 run: jumping to instruction 31
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1159 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1446
9999 mem: location 1445 is 1427
9999 mem: location 1159 is 1443
9999 run: address to copy is 1443
9999 run: its type is character
9999 mem: location 1443 is 98
9999 mem: storing 98 in location 1169
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1169 is 98
9999 mem: storing 0 in location 1170
 105 run: break-unless newline?, 
9999 mem: location 1170 is 0
9999 run: jumping to instruction 49
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1162 is 1
9999 mem: location 1157 is 9
9999 mem: storing 0 in location 1172
 105 run: break-unless at-right?, 
9999 mem: location 1172 is 0
9999 run: jumping to instruction 56
 105 run: curr <- next-duplex curr
9999 mem: location 1159 is 1443
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1443
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1446
9999 mem: location 1445 is 1427
9999 mem: location 1179 is 1443
9999 run: address to copy is 1444
9999 run: its type is address
9999 mem: location 1444 is 1446
9999 mem: storing 1446 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1446
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1446
9999 mem: storing 1446 in location 1159
 105 run: prev <- next-duplex prev
9999 mem: location 1160 is 1427
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1427
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1443
9999 mem: location 1429 is 1147
9999 mem: location 1179 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1443
9999 mem: storing 1443 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1443
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1443
9999 mem: storing 1443 in location 1160
 105 run: column <- add column, 1
9999 mem: location 1162 is 1
9999 mem: storing 2 in location 1162
 105 run: loop 
9999 run: jumping to instruction 21
 105 run: break-unless curr, 
9999 mem: location 1159 is 1446
9999 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1161 is 1
9999 mem: location 1158 is 5
9999 mem: storing 0 in location 1166
 105 run: break-if off-screen?, 
9999 mem: location 1166 is 0
9999 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1161 is 1
9999 mem: location 1163 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1167
 105 run: break-unless at-cursor-row?, 
9999 mem: location 1167 is 1
9999 run: jump-unless fell through
 105 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1162 is 2
9999 mem: location 1164 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 1 in location 1168
 105 run: break-unless at-cursor?, 
9999 mem: location 1168 is 1
9999 run: jump-unless fell through
 105 run: *before-cursor <- copy prev
9999 mem: location 1160 is 1443
9999 mem: location 1165 is 1118
9999 mem: storing 1443 in location 1118
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1159 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 1449
9999 mem: location 1448 is 1443
9999 mem: location 1159 is 1446
9999 run: address to copy is 1446
9999 run: its type is character
9999 mem: location 1446 is 99
9999 mem: storing 99 in location 1169
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1169 is 99
9999 mem: storing 0 in location 1170
 105 run: break-unless newline?, 
9999 mem: location 1170 is 0
9999 run: jumping to instruction 49
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1162 is 2
9999 mem: location 1157 is 9
9999 mem: storing 0 in location 1172
 105 run: break-unless at-right?, 
9999 mem: location 1172 is 0
9999 run: jumping to instruction 56
 105 run: curr <- next-duplex curr
9999 mem: location 1159 is 1446
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1446 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1446
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 1449
9999 mem: location 1448 is 1443
9999 mem: location 1179 is 1446
9999 run: address to copy is 1447
9999 run: its type is address
9999 mem: location 1447 is 1449
9999 mem: storing 1449 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1449
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1449
9999 mem: storing 1449 in location 1159
 105 run: prev <- next-duplex prev
9999 mem: location 1160 is 1443
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1443
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1446
9999 mem: location 1445 is 1427
9999 mem: location 1179 is 1443
9999 run: address to copy is 1444
9999 run: its type is address
9999 mem: location 1444 is 1446
9999 mem: storing 1446 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1446
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1446
9999 mem: storing 1446 in location 1160
 105 run: column <- add column, 1
9999 mem: location 1162 is 2
9999 mem: storing 3 in location 1162
 105 run: loop 
9999 run: jumping to instruction 21
 105 run: break-unless curr, 
9999 mem: location 1159 is 1449
9999 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1161 is 1
9999 mem: location 1158 is 5
9999 mem: storing 0 in location 1166
 105 run: break-if off-screen?, 
9999 mem: location 1166 is 0
9999 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1161 is 1
9999 mem: location 1163 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1167
 105 run: break-unless at-cursor-row?, 
9999 mem: location 1167 is 1
9999 run: jump-unless fell through
 105 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1162 is 3
9999 mem: location 1164 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 0 in location 1168
 105 run: break-unless at-cursor?, 
9999 mem: location 1168 is 0
9999 run: jumping to instruction 31
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1159 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1446
9999 mem: location 1159 is 1449
9999 run: address to copy is 1449
9999 run: its type is character
9999 mem: location 1449 is 100
9999 mem: storing 100 in location 1169
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1169 is 100
9999 mem: storing 0 in location 1170
 105 run: break-unless newline?, 
9999 mem: location 1170 is 0
9999 run: jumping to instruction 49
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1162 is 3
9999 mem: location 1157 is 9
9999 mem: storing 0 in location 1172
 105 run: break-unless at-right?, 
9999 mem: location 1172 is 0
9999 run: jumping to instruction 56
9999 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/scenario-editor-can-undo-and-redo-delete
 105 run: curr <- next-duplex curr
9999 mem: location 1159 is 1449
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1449
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1446
9999 mem: location 1179 is 1449
9999 run: address to copy is 1450
9999 run: its type is address
9999 mem: location 1450 is 1452
9999 mem: storing 1452 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1452
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1452
9999 mem: storing 1452 in location 1159
 105 run: prev <- next-duplex prev
9999 mem: location 1160 is 1446
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1446 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1446
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 1449
9999 mem: location 1448 is 1443
9999 mem: location 1179 is 1446
9999 run: address to copy is 1447
9999 run: its type is address
9999 mem: location 1447 is 1449
9999 mem: storing 1449 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1449
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1449
9999 mem: storing 1449 in location 1160
 105 run: column <- add column, 1
9999 mem: location 1162 is 3
9999 mem: storing 4 in location 1162
 105 run: loop 
9999 run: jumping to instruction 21
 105 run: break-unless curr, 
9999 mem: location 1159 is 1452
9999 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1161 is 1
9999 mem: location 1158 is 5
9999 mem: storing 0 in location 1166
 105 run: break-if off-screen?, 
9999 mem: location 1166 is 0
9999 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1161 is 1
9999 mem: location 1163 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1167
 105 run: break-unless at-cursor-row?, 
9999 mem: location 1167 is 1
9999 run: jump-unless fell through
 105 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1162 is 4
9999 mem: location 1164 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 0 in location 1168
 105 run: break-unless at-cursor?, 
9999 mem: location 1168 is 0
9999 run: jumping to instruction 31
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1159 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1159 is 1452
9999 run: address to copy is 1452
9999 run: its type is character
9999 mem: location 1452 is 101
9999 mem: storing 101 in location 1169
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1169 is 101
9999 mem: storing 0 in location 1170
 105 run: break-unless newline?, 
9999 mem: location 1170 is 0
9999 run: jumping to instruction 49
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1162 is 4
9999 mem: location 1157 is 9
9999 mem: storing 0 in location 1172
 105 run: break-unless at-right?, 
9999 mem: location 1172 is 0
9999 run: jumping to instruction 56
 105 run: curr <- next-duplex curr
9999 mem: location 1159 is 1452
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1452
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1179 is 1452
9999 run: address to copy is 1453
9999 run: its type is address
9999 mem: location 1453 is 1455
9999 mem: storing 1455 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1455
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1159
 105 run: prev <- next-duplex prev
9999 mem: location 1160 is 1449
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1449
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1446
9999 mem: location 1179 is 1449
9999 run: address to copy is 1450
9999 run: its type is address
9999 mem: location 1450 is 1452
9999 mem: storing 1452 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1452
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1452
9999 mem: storing 1452 in location 1160
 105 run: column <- add column, 1
9999 mem: location 1162 is 4
9999 mem: storing 5 in location 1162
 105 run: loop 
9999 run: jumping to instruction 21
 105 run: break-unless curr, 
9999 mem: location 1159 is 1455
9999 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1161 is 1
9999 mem: location 1158 is 5
9999 mem: storing 0 in location 1166
 105 run: break-if off-screen?, 
9999 mem: location 1166 is 0
9999 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1161 is 1
9999 mem: location 1163 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1167
 105 run: break-unless at-cursor-row?, 
9999 mem: location 1167 is 1
9999 run: jump-unless fell through
 105 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1162 is 5
9999 mem: location 1164 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 0 in location 1168
 105 run: break-unless at-cursor?, 
9999 mem: location 1168 is 0
9999 run: jumping to instruction 31
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1159 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1159 is 1455
9999 run: address to copy is 1455
9999 run: its type is character
9999 mem: location 1455 is 102
9999 mem: storing 102 in location 1169
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1169 is 102
9999 mem: storing 0 in location 1170
 105 run: break-unless newline?, 
9999 mem: location 1170 is 0
9999 run: jumping to instruction 49
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1162 is 5
9999 mem: location 1157 is 9
9999 mem: storing 0 in location 1172
 105 run: break-unless at-right?, 
9999 mem: location 1172 is 0
9999 run: jumping to instruction 56
 105 run: curr <- next-duplex curr
9999 mem: location 1159 is 1455
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1455 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1455
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1179 is 1455
9999 run: address to copy is 1456
9999 run: its type is address
9999 mem: location 1456 is 0
9999 mem: storing 0 in location 1180
 106 run: reply result
9999 mem: location 1180 is 0
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 0
9999 mem: storing 0 in location 1159
 105 run: prev <- next-duplex prev
9999 mem: location 1160 is 1452
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1452
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1179 is 1452
9999 run: address to copy is 1453
9999 run: its type is address
9999 mem: location 1453 is 1455
9999 mem: storing 1455 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1455
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1160
 105 run: column <- add column, 1
9999 mem: location 1162 is 5
9999 mem: storing 6 in location 1162
 105 run: loop 
9999 run: jumping to instruction 21
 105 run: break-unless curr, 
9999 mem: location 1159 is 0
9999 run: jumping to instruction 61
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1161 is 1
9999 mem: location 1163 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1167
 105 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1162 is 6
9999 mem: location 1164 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 0 in location 1173
 105 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1167 is 1
9999 mem: location 1173 is 0
9999 mem: storing 0 in location 1174
 105 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1161 is 1
9999 mem: location 1163 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1175
 105 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: storing 0 in location 1176
 105 run: break-unless before-cursor?, 
9999 mem: location 1176 is 0
9999 run: jumping to instruction 72
 105 run: reply editor/same-as-ingredient:1
9999 mem: location 1153 is 1115
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1461
 104 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1474
 104 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1461 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1461 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1475
 104 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1461 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1461 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1476
 104 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1461 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1461 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1477
 104 run: break-unless undo-coalesce-tag, 
9999 mem: location 1474 is 0
9999 run: jumping to instruction 44
 104 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1486
9999 mem: storing 1486 in location 1479
 104 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1471 is 1
9999 mem: location 1472 is 6
9999 mem: location 1473 is 1147
9999 mem: location 1475 is 1
9999 mem: location 1476 is 2
9999 mem: location 1477 is 1147
9999 mem: location 1474 is 0
9999 mem: location 1479 is 1486
9999 mem: location 1479 is 1486
9999 mem: storing 1 in location 1486
9999 mem: storing 1 in location 1487
9999 mem: storing 6 in location 1488
9999 mem: storing 1147 in location 1489
9999 mem: storing 1 in location 1490
9999 mem: storing 2 in location 1491
9999 mem: storing 1147 in location 1492
9999 mem: storing 0 in location 1493
 104 run: editor <- add-operation editor, op
9999 mem: location 1461 is 1115
9999 mem: location 1479 is 1486
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1190
 105 run: op:address:operation <- next-ingredient 
9999 mem: storing 1486 in location 1191
 105 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1190 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1441
9999 mem: location 1125 is 0
9999 mem: location 1190 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1192
 105 run: *undo/skiptypecheck <- push op, *undo
9999 mem: location 1191 is 1486
9999 mem: location 1192 is 1124
9999 mem: location 1124 is 1441
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: x:location <- next-ingredient 
9999 mem: storing 1486 in location 1183
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 1441 in location 1184
 106 run: result:address:list <- new list:type
9999 mem: new alloc: 1497
9999 mem: storing 1497 in location 1185
 106 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1185 is 1497
9999 mem: location 1497 is 0
9999 mem: location 1498 is 0
9999 mem: location 1185 is 1497
9999 run: address to copy is 1497
9999 mem: storing 1497 in location 1186
 106 run: *val <- copy x
9999 mem: location 1183 is 1486
9999 mem: location 1186 is 1497
9999 mem: storing 1486 in location 1497
 106 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1185 is 1497
9999 mem: location 1497 is 1486
9999 mem: location 1498 is 0
9999 mem: location 1185 is 1497
9999 run: address to copy is 1498
9999 mem: storing 1498 in location 1187
 106 run: *next <- copy in
9999 mem: location 1184 is 1441
9999 mem: location 1187 is 1498
9999 mem: storing 1441 in location 1498
 106 run: reply result
9999 mem: location 1185 is 1497
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1497
9999 mem: location 1192 is 1124
9999 mem: storing 1497 in location 1124
 105 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1190 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1190 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1193
 105 run: *redo <- copy 0
9999 mem: location 1193 is 1125
9999 mem: storing 0 in location 1125
 105 run: reply editor/same-as-ingredient:0
9999 mem: location 1190 is 1115
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1461
 104 run: reply 1/true
9999 trace: reply: decrementing callstack depth from 3
 103 run: loop +next-event:label
9999 run: jumping to instruction 6
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1301
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 2
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 2 in location 1185
 104 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 104 run: *column <- copy new-column
9999 mem: location 1185 is 2
9999 mem: location 1187 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 103 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1293
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 104 run: x:address:console <- next-ingredient 
9999 mem: storing 1293 in location 1222
 104 run: break-unless x, 
9999 mem: location 1222 is 1293
9999 run: jump-unless fell through
 104 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 7
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1293
9999 mem: storing 1293 in location 1223
 104 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 7
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1248
9999 mem: storing 1248 in location 1224
 104 run: max:number <- length *buf
9999 mem: location 1224 is 1248
9999 mem: storing 11 in location 1225
 104 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 7
9999 mem: location 1225 is 11
9999 mem: storing 0 in location 1226
 104 run: break-unless done?, 
9999 mem: location 1226 is 0
9999 run: jumping to instruction 12
 104 run: result:event <- index *buf, *idx
9999 mem: location 1224 is 1248
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 7
9999 run: address to copy is 1277
9999 run: its type is event
9999 mem: location 1277 is 1
9999 mem: location 1278 is 65522
9999 mem: location 1279 is 0
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1228
9999 mem: storing 65522 in location 1229
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 104 run: *idx <- add *idx, 1
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 7
9999 mem: location 1223 is 1293
9999 mem: storing 8 in location 1293
 104 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1228 is 1
9999 mem: location 1229 is 65522
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1222 is 1293
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is [1, 65522, 0, 0]
9999 run: result 1 is 1293
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1302
9999 mem: storing 65522 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1293 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 0 in location 1307
 103 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 103 run: break-if quit?, 
9999 mem: location 1307 is 0
9999 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1302 is 1
9999 mem: location 1303 is 65522
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: storing 0 in location 1308
 103 run: break-unless t, 
9999 mem: location 1308 is 0
9999 run: jumping to instruction 18
 103 run: break-if t, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 mem: location 1302 is 1
9999 mem: location 1303 is 65522
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1312
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1313
 104 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1314
9999 mem: storing 65522 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
 104 run: jump-if editor, 1:offset
9999 mem: location 1313 is 1115
9999 run: jumping to instruction 6
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 105 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 105 run: reply width
9999 mem: location 1180 is 10
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 10
9999 mem: storing 10 in location 1318
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 105 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 105 run: reply height
9999 mem: location 1180 is 5
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 5
9999 mem: storing 5 in location 1319
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1320
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1321
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1322
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1323
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1324
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1325
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1326
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1314 is 1
9999 mem: location 1315 is 65522
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1327
 104 run: break-unless c, 
9999 mem: location 1327 is 0
9999 run: jumping to instruction 432
 104 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1314 is 1
9999 mem: location 1315 is 65522
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 1315 in location 1382
 104 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1382 is 1315
 104 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1344
 104 run: break-unless page-up?, 
9999 mem: location 1344 is 0
9999 run: jumping to instruction 477
 104 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1360
 104 run: break-unless page-down?, 
9999 mem: location 1360 is 0
9999 run: jumping to instruction 519
 104 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1367
 104 run: break-unless move-to-end-of-line?, 
9999 mem: location 1367 is 0
9999 run: jumping to instruction 556
 104 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1368
 104 run: break-unless move-to-start-of-line?, 
9999 mem: location 1368 is 0
9999 run: jumping to instruction 593
 104 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1383
 104 run: break-unless move-to-next-line?, 
9999 mem: location 1383 is 0
9999 run: jumping to instruction 630
 104 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1384
 104 run: break-unless move-to-previous-line?, 
9999 mem: location 1384 is 0
9999 run: jumping to instruction 667
 104 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1385
 104 run: break-unless move-to-previous-character?, 
9999 mem: location 1385 is 0
9999 run: jumping to instruction 709
 104 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1387
 104 run: break-unless move-to-next-character?, 
9999 mem: location 1387 is 0
9999 run: jumping to instruction 750
 104 run: delete-next-character?:boolean <- equal *k, 65522/delete
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 1 in location 1389
 104 run: break-unless delete-next-character?, 
9999 mem: location 1389 is 1
9999 run: jump-unless fell through
 104 run: top-before:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1362
 104 run: editor, screen, go-render?:boolean, deleted-cell:address:duplex-list <- delete-at-cursor editor, screen
9999 mem: location 1313 is 1115
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1499
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1501
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1502
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1501 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1501 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1503
 105 run: candidate:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1503 is 1118
9999 mem: location 1118 is 1443
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1443
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1446
9999 mem: location 1445 is 1427
9999 mem: location 1179 is 1443
9999 run: address to copy is 1444
9999 run: its type is address
9999 mem: location 1444 is 1446
9999 mem: storing 1446 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1446
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1446
9999 mem: storing 1446 in location 1504
 105 run: jump-if candidate, 1:offset
9999 mem: location 1504 is 1446
9999 run: jumping to instruction 7
 105 run: currc:character <- get *candidate, value:offset
9999 mem: location 1504 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 1449
9999 mem: location 1448 is 1443
9999 mem: location 1504 is 1446
9999 run: address to copy is 1446
9999 run: its type is character
9999 mem: location 1446 is 99
9999 mem: storing 99 in location 1505
 105 run: remove-duplex candidate
9999 mem: location 1504 is 1446
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1446 in location 1190
 106 run: jump-if in, 1:offset
9999 mem: location 1190 is 1446
9999 run: jumping to instruction 4
 106 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1190 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 1449
9999 mem: location 1448 is 1443
9999 mem: location 1190 is 1446
9999 run: address to copy is 1447
9999 run: its type is address
9999 mem: location 1447 is 1449
9999 mem: storing 1449 in location 1191
 106 run: prev-node:address:duplex-list <- get *in, prev:offset
9999 mem: location 1190 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 1449
9999 mem: location 1448 is 1443
9999 mem: location 1190 is 1446
9999 run: address to copy is 1448
9999 run: its type is address
9999 mem: location 1448 is 1443
9999 mem: storing 1443 in location 1192
 106 run: x:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1190 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 1449
9999 mem: location 1448 is 1443
9999 mem: location 1190 is 1446
9999 run: address to copy is 1447
9999 mem: storing 1447 in location 1193
 106 run: *x <- copy 0
9999 mem: location 1193 is 1447
9999 mem: storing 0 in location 1447
 106 run: x <- get-address *in, prev:offset
9999 mem: location 1190 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1443
9999 mem: location 1190 is 1446
9999 run: address to copy is 1448
9999 mem: storing 1448 in location 1193
 106 run: *x <- copy 0
9999 mem: location 1193 is 1448
9999 mem: storing 0 in location 1448
 106 run: break-unless next-node, 
9999 mem: location 1191 is 1449
9999 run: jump-unless fell through
 106 run: x <- get-address *next-node, prev:offset
9999 mem: location 1191 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1446
9999 mem: location 1191 is 1449
9999 run: address to copy is 1451
9999 mem: storing 1451 in location 1193
 106 run: *x <- copy prev-node
9999 mem: location 1192 is 1443
9999 mem: location 1193 is 1451
9999 mem: storing 1443 in location 1451
 106 run: break-unless prev-node, 
9999 mem: location 1192 is 1443
9999 run: jump-unless fell through
 106 run: x <- get-address *prev-node, next:offset
9999 mem: location 1192 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1446
9999 mem: location 1445 is 1427
9999 mem: location 1192 is 1443
9999 run: address to copy is 1444
9999 mem: storing 1444 in location 1193
 106 run: *x <- copy next-node
9999 mem: location 1191 is 1449
9999 mem: location 1193 is 1444
9999 mem: storing 1449 in location 1444
 106 run: reply prev-node
9999 mem: location 1192 is 1443
9999 trace: reply: decrementing callstack depth from 5
 105 run: deleted-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1505 is 99
9999 mem: storing 0 in location 1506
 105 run: jump-unless deleted-newline?, 1:offset
9999 mem: location 1506 is 0
9999 run: jumping to instruction 12
 105 run: curr:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1503 is 1118
9999 mem: location 1118 is 1443
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1443
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1449
9999 mem: location 1445 is 1427
9999 mem: location 1179 is 1443
9999 run: address to copy is 1444
9999 run: its type is address
9999 mem: location 1444 is 1449
9999 mem: storing 1449 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1449
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1449
9999 mem: storing 1449 in location 1507
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1501 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1501 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1508
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1501 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1501 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1509
 105 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1502 is 1009
9999 mem: location 1508 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1509 is 1122
9999 mem: location 1122 is 2
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 106 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 106 run: new-column:number <- next-ingredient 
9999 mem: storing 2 in location 1185
 106 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 106 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 106 run: *column <- copy new-column
9999 mem: location 1185 is 2
9999 mem: location 1187 is 1012
9999 mem: storing 2 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1502
 105 run: curr-column:number <- copy *cursor-column
9999 mem: location 1509 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1510
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1502 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 106 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 106 run: reply width
9999 mem: location 1180 is 10
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 10
9999 mem: storing 10 in location 1511
 105 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1510 is 2
9999 mem: location 1511 is 10
9999 mem: storing 0 in location 1512
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1512 is 0
9999 run: jumping to instruction 22
 105 run: break-unless curr, 
9999 mem: location 1507 is 1449
9999 run: jump-unless fell through
 105 run: currc:character <- get *curr, value:offset
9999 mem: location 1507 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1443
9999 mem: location 1507 is 1449
9999 run: address to copy is 1449
9999 run: its type is character
9999 mem: location 1449 is 100
9999 mem: storing 100 in location 1505
 105 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1505 is 100
9999 mem: storing 0 in location 1513
 105 run: break-if at-newline?, 
9999 mem: location 1513 is 0
9999 run: jump-if fell through
 105 run: screen <- print-character screen, currc
9999 mem: location 1502 is 1009
9999 mem: location 1505 is 100
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 100
  90 print-character: 100 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 100
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 100
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 12
9999 mem: storing 1039 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 100
9999 mem: location 1216 is 1039
9999 mem: storing 100 in location 1039
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 100
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1040
9999 mem: storing 7 in location 1040
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1502
 105 run: curr-column <- add curr-column, 1
9999 mem: location 1510 is 2
9999 mem: storing 3 in location 1510
 105 run: curr <- next-duplex curr
9999 mem: location 1507 is 1449
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1449
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1443
9999 mem: location 1179 is 1449
9999 run: address to copy is 1450
9999 run: its type is address
9999 mem: location 1450 is 1452
9999 mem: storing 1452 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1452
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1452
9999 mem: storing 1452 in location 1507
 105 run: loop 
9999 run: jumping to instruction 19
 105 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1510 is 3
9999 mem: location 1511 is 10
9999 mem: storing 0 in location 1512
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1512 is 0
9999 run: jumping to instruction 22
 105 run: break-unless curr, 
9999 mem: location 1507 is 1452
9999 run: jump-unless fell through
 105 run: currc:character <- get *curr, value:offset
9999 mem: location 1507 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1507 is 1452
9999 run: address to copy is 1452
9999 run: its type is character
9999 mem: location 1452 is 101
9999 mem: storing 101 in location 1505
 105 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1505 is 101
9999 mem: storing 0 in location 1513
 105 run: break-if at-newline?, 
9999 mem: location 1513 is 0
9999 run: jump-if fell through
 105 run: screen <- print-character screen, currc
9999 mem: location 1502 is 1009
9999 mem: location 1505 is 101
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 101
  90 print-character: 101 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 101
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 101
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 13
9999 mem: storing 1041 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1041
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1215 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 101
9999 mem: location 1216 is 1041
9999 mem: storing 101 in location 1041
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1041
9999 mem: location 1041 is 101
9999 mem: location 1042 is 7
9999 mem: location 1215 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1042
9999 mem: storing 7 in location 1042
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1502
 105 run: curr-column <- add curr-column, 1
9999 mem: location 1510 is 3
9999 mem: storing 4 in location 1510
 105 run: curr <- next-duplex curr
9999 mem: location 1507 is 1452
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1452
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1179 is 1452
9999 run: address to copy is 1453
9999 run: its type is address
9999 mem: location 1453 is 1455
9999 mem: storing 1455 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1455
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1507
 105 run: loop 
9999 run: jumping to instruction 19
 105 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1510 is 4
9999 mem: location 1511 is 10
9999 mem: storing 0 in location 1512
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1512 is 0
9999 run: jumping to instruction 22
 105 run: break-unless curr, 
9999 mem: location 1507 is 1455
9999 run: jump-unless fell through
 105 run: currc:character <- get *curr, value:offset
9999 mem: location 1507 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1507 is 1455
9999 run: address to copy is 1455
9999 run: its type is character
9999 mem: location 1455 is 102
9999 mem: storing 102 in location 1505
 105 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1505 is 102
9999 mem: storing 0 in location 1513
 105 run: break-if at-newline?, 
9999 mem: location 1513 is 0
9999 run: jump-if fell through
 105 run: screen <- print-character screen, currc
9999 mem: location 1502 is 1009
9999 mem: location 1505 is 102
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 102
  90 print-character: 102 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 102
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 102
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 14
9999 mem: storing 1043 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1043
9999 mem: location 1043 is 101
9999 mem: location 1044 is 7
9999 mem: location 1215 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 102
9999 mem: location 1216 is 1043
9999 mem: storing 102 in location 1043
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1043
9999 mem: location 1043 is 102
9999 mem: location 1044 is 7
9999 mem: location 1215 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1044
9999 mem: storing 7 in location 1044
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1502
 105 run: curr-column <- add curr-column, 1
9999 mem: location 1510 is 4
9999 mem: storing 5 in location 1510
 105 run: curr <- next-duplex curr
9999 mem: location 1507 is 1455
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1455 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1455
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1179 is 1455
9999 run: address to copy is 1456
9999 run: its type is address
9999 mem: location 1456 is 0
9999 mem: storing 0 in location 1180
 106 run: reply result
9999 mem: location 1180 is 0
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 0
9999 mem: storing 0 in location 1507
 105 run: loop 
9999 run: jumping to instruction 19
 105 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1510 is 5
9999 mem: location 1511 is 10
9999 mem: storing 0 in location 1512
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1512 is 0
9999 run: jumping to instruction 22
9999 schedule: delete-at-cursor/handle-keyboard-event/editor-event-loop/scenario-editor-can-undo-and-redo-delete
 105 run: break-unless curr, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 30
 105 run: screen <- print-character screen, 32/space
9999 mem: location 1502 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 15
9999 mem: storing 1045 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1045
9999 mem: location 1045 is 102
9999 mem: location 1046 is 7
9999 mem: location 1215 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1045
9999 mem: storing 32 in location 1045
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1215 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1046
9999 mem: storing 7 in location 1046
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1502
 105 run: reply editor/same-as-ingredient:0, screen/same-as-ingredient:1, 0/no-more-render, candidate/deleted-cell
9999 mem: location 1501 is 1115
9999 mem: location 1502 is 1009
9999 mem: location 1504 is 1446
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1115
9999 run: result 1 is 1009
9999 run: result 2 is 0
9999 run: result 3 is 1446
9999 mem: storing 1115 in location 1313
9999 mem: storing 1009 in location 1312
9999 mem: storing 0 in location 1370
9999 mem: storing 1446 in location 1390
 104 run: break-unless deleted-cell, 
9999 mem: location 1390 is 1446
9999 run: jump-unless fell through
 104 run: top-after:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1364
 104 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1331
 104 run: break-unless *undo, 
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1497
9999 run: jump-unless fell through
 104 run: op:address:operation/skiptypecheck <- first *undo
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1497
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 1497 in location 1179
 105 run: result:location <- get *in, value:offset
9999 mem: location 1179 is 1497
9999 mem: location 1497 is 1486
9999 mem: location 1498 is 1441
9999 mem: location 1179 is 1497
9999 run: address to copy is 1497
9999 run: its type is number
9999 mem: location 1497 is 1486
9999 mem: storing 1486 in location 1180
 105 run: reply result
9999 mem: location 1180 is 1486
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1486
9999 mem: storing 1486 in location 1330
 104 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1330 is 1486
9999 mem: location 1486 is 1
9999 mem: location 1487 is 1
9999 mem: location 1488 is 6
9999 mem: location 1489 is 1147
9999 mem: location 1490 is 1
9999 mem: location 1491 is 2
9999 mem: location 1492 is 1147
9999 mem: location 1493 is 0
9999 mem: location 1494 is 0
9999 mem: location 1495 is 0
9999 mem: location 1496 is 0
9999 mem: location 1330 is 1486
9999 mem: storing 0 in location 1332
 104 run: break-unless deletion, 
9999 mem: location 1332 is 0
9999 run: jumping to instruction 780
 104 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1514
9999 mem: storing 1514 in location 1330
 104 run: deleted-until:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1322 is 1118
9999 mem: location 1118 is 1443
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1179
 105 run: jump-if in, 1:offset
9999 mem: location 1179 is 1443
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1449
9999 mem: location 1445 is 1427
9999 mem: location 1179 is 1443
9999 run: address to copy is 1444
9999 run: its type is address
9999 mem: location 1444 is 1449
9999 mem: storing 1449 in location 1180
 105 run: reply result
9999 mem: location 1180 is 1449
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1449
9999 mem: storing 1449 in location 1365
 104 run: *op <- merge 2/delete-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, deleted-cell/deleted, *before-cursor/delete-from, deleted-until, 2/coalesce-delete
9999 mem: location 1325 is 1
9999 mem: location 1326 is 2
9999 mem: location 1362 is 1147
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1364 is 1147
9999 mem: location 1390 is 1446
9999 mem: location 1322 is 1118
9999 mem: location 1118 is 1443
9999 mem: location 1365 is 1449
9999 mem: location 1330 is 1514
9999 mem: location 1330 is 1514
9999 mem: storing 2 in location 1514
9999 mem: storing 1 in location 1515
9999 mem: storing 2 in location 1516
9999 mem: storing 1147 in location 1517
9999 mem: storing 1 in location 1518
9999 mem: storing 2 in location 1519
9999 mem: storing 1147 in location 1520
9999 mem: storing 1446 in location 1521
9999 mem: storing 1443 in location 1522
9999 mem: storing 1449 in location 1523
9999 mem: storing 2 in location 1524
 104 run: editor <- add-operation editor, op
9999 mem: location 1313 is 1115
9999 mem: location 1330 is 1514
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1190
 105 run: op:address:operation <- next-ingredient 
9999 mem: storing 1514 in location 1191
 105 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1190 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1190 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1192
 105 run: *undo/skiptypecheck <- push op, *undo
9999 mem: location 1191 is 1514
9999 mem: location 1192 is 1124
9999 mem: location 1124 is 1497
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: x:location <- next-ingredient 
9999 mem: storing 1514 in location 1183
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 1497 in location 1184
 106 run: result:address:list <- new list:type
9999 mem: new alloc: 1525
9999 mem: storing 1525 in location 1185
 106 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1185 is 1525
9999 mem: location 1525 is 0
9999 mem: location 1526 is 0
9999 mem: location 1185 is 1525
9999 run: address to copy is 1525
9999 mem: storing 1525 in location 1186
 106 run: *val <- copy x
9999 mem: location 1183 is 1514
9999 mem: location 1186 is 1525
9999 mem: storing 1514 in location 1525
 106 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1185 is 1525
9999 mem: location 1525 is 1514
9999 mem: location 1526 is 0
9999 mem: location 1185 is 1525
9999 run: address to copy is 1526
9999 mem: storing 1526 in location 1187
 106 run: *next <- copy in
9999 mem: location 1184 is 1497
9999 mem: location 1187 is 1526
9999 mem: storing 1497 in location 1526
 106 run: reply result
9999 mem: location 1185 is 1525
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1525
9999 mem: location 1192 is 1124
9999 mem: storing 1525 in location 1124
 105 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1190 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 0
9999 mem: location 1190 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1193
 105 run: *redo <- copy 0
9999 mem: location 1193 is 1125
9999 mem: storing 0 in location 1125
 105 run: reply editor/same-as-ingredient:0
9999 mem: location 1190 is 1115
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1313
 104 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1312 is 1009
9999 mem: location 1313 is 1115
9999 mem: location 1370 is 0
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1297
9999 mem: storing 1115 in location 1299
9999 mem: storing 0 in location 1309
 103 run: break-unless go-render?, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 25
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1301
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 2
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 2 in location 1185
 104 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 104 run: *column <- copy new-column
9999 mem: location 1185 is 2
9999 mem: location 1187 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 103 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1293
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 104 run: x:address:console <- next-ingredient 
9999 mem: storing 1293 in location 1222
 104 run: break-unless x, 
9999 mem: location 1222 is 1293
9999 run: jump-unless fell through
 104 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 8
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1293
9999 mem: storing 1293 in location 1223
 104 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 8
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1248
9999 mem: storing 1248 in location 1224
 104 run: max:number <- length *buf
9999 mem: location 1224 is 1248
9999 mem: storing 11 in location 1225
 104 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 8
9999 mem: location 1225 is 11
9999 mem: storing 0 in location 1226
 104 run: break-unless done?, 
9999 mem: location 1226 is 0
9999 run: jumping to instruction 12
 104 run: result:event <- index *buf, *idx
9999 mem: location 1224 is 1248
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 8
9999 run: address to copy is 1281
9999 run: its type is event
9999 mem: location 1281 is 0
9999 mem: location 1282 is 8
9999 mem: location 1283 is 0
9999 mem: location 1284 is 0
9999 mem: storing 0 in location 1228
9999 mem: storing 8 in location 1229
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 104 run: *idx <- add *idx, 1
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 8
9999 mem: location 1223 is 1293
9999 mem: storing 9 in location 1293
 104 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1228 is 0
9999 mem: location 1229 is 8
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1222 is 1293
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is [0, 8, 0, 0]
9999 run: result 1 is 1293
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1302
9999 mem: storing 8 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1293 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 0 in location 1307
 103 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 103 run: break-if quit?, 
9999 mem: location 1307 is 0
9999 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1302 is 0
9999 mem: location 1303 is 8
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: storing 0 in location 1308
 103 run: break-unless t, 
9999 mem: location 1308 is 0
9999 run: jumping to instruction 18
 103 run: break-if t, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 mem: location 1302 is 0
9999 mem: location 1303 is 8
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1312
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1313
 104 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1314
9999 mem: storing 8 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
 104 run: jump-if editor, 1:offset
9999 mem: location 1313 is 1115
9999 run: jumping to instruction 6
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 105 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 105 run: reply width
9999 mem: location 1180 is 10
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 10
9999 mem: storing 10 in location 1318
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 105 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 105 run: reply height
9999 mem: location 1180 is 5
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 5
9999 mem: storing 5 in location 1319
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1320
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1321
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1322
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1323
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1324
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1325
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1326
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1314 is 0
9999 mem: location 1315 is 8
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 1315 in location 1327
 104 run: break-unless c, 
9999 mem: location 1327 is 1315
9999 run: jump-unless fell through
 104 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 104 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 8
9999 mem: storing 0 in location 1328
 104 run: break-unless redo?, 
9999 mem: location 1328 is 0
9999 run: jumping to instruction 60
 104 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 8
9999 mem: storing 0 in location 1339
 104 run: break-unless undo?, 
9999 mem: location 1339 is 0
9999 run: jumping to instruction 107
 104 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 8
9999 mem: storing 0 in location 1344
 104 run: break-unless page-up?, 
9999 mem: location 1344 is 0
9999 run: jumping to instruction 149
 104 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 8
9999 mem: storing 0 in location 1360
 104 run: break-unless page-down?, 
9999 mem: location 1360 is 0
9999 run: jumping to instruction 191
 104 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 8
9999 mem: storing 0 in location 1361
 104 run: break-unless delete-to-end-of-line?, 
9999 mem: location 1361 is 0
9999 run: jumping to instruction 210
 104 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 8
9999 mem: storing 0 in location 1366
 104 run: break-unless delete-to-start-of-line?, 
9999 mem: location 1366 is 0
9999 run: jumping to instruction 229
 104 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 8
9999 mem: storing 0 in location 1367
 104 run: break-unless move-to-end-of-line?, 
9999 mem: location 1367 is 0
9999 run: jumping to instruction 266
 104 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 8
9999 mem: storing 0 in location 1368
 104 run: break-unless move-to-start-of-line?, 
9999 mem: location 1368 is 0
9999 run: jumping to instruction 303
 104 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 8
9999 mem: storing 1 in location 1369
 104 run: break-unless delete-previous-character?, 
9999 mem: location 1369 is 1
9999 run: jump-unless fell through
 104 run: top-before:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1362
 104 run: editor, screen, go-render?:boolean, backspaced-cell:address:duplex-list <- delete-before-cursor editor, screen
9999 mem: location 1313 is 1115
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 19
9999 mem: new alloc: 1527
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1529
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1530
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1529 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 0
9999 mem: location 1529 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1531
 105 run: prev:address:duplex-list <- prev-duplex *before-cursor
9999 mem: location 1531 is 1118
9999 mem: location 1118 is 1443
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1443
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1179 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1449
9999 mem: location 1445 is 1427
9999 mem: location 1179 is 1443
9999 run: address to copy is 1445
9999 run: its type is address
9999 mem: location 1445 is 1427
9999 mem: storing 1427 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1427
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1427
9999 mem: storing 1427 in location 1532
 105 run: jump-if prev, 1:offset
9999 mem: location 1532 is 1427
9999 run: jumping to instruction 7
 105 run: trace 10, [app], [delete-before-cursor]
  10 app: delete-before-cursor 
 105 run: original-row:number <- get *editor, cursor-row:offset
9999 mem: location 1529 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 0
9999 mem: location 1529 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1533
 105 run: editor, scroll?:boolean <- move-cursor-coordinates-left editor
9999 mem: location 1529 is 1115
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 17
9999 mem: new alloc: 1547
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1549
 106 run: before-cursor:address:duplex-list <- get *editor, before-cursor:offset
9999 mem: location 1549 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 0
9999 mem: location 1549 is 1115
9999 run: address to copy is 1118
9999 run: its type is address
9999 mem: location 1118 is 1443
9999 mem: storing 1443 in location 1550
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1549 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 0
9999 mem: location 1549 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1551
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1549 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 0
9999 mem: location 1549 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1552
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1549 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 0
9999 mem: location 1549 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1553
 106 run: at-left-margin?:boolean <- equal *cursor-column, left
9999 mem: location 1552 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1553 is 0
9999 mem: storing 0 in location 1554
 106 run: break-if at-left-margin?, 
9999 mem: location 1554 is 0
9999 run: jump-if fell through
 106 run: trace 10, [app], [decrementing cursor column]
  10 app: decrementing cursor column 
 106 run: *cursor-column <- subtract *cursor-column, 1
9999 mem: location 1552 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1552 is 1122
9999 mem: storing 1 in location 1122
 106 run: reply editor/same-as-ingredient:0, 0/no-more-render
9999 mem: location 1549 is 1115
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1115
9999 run: result 1 is 0
9999 mem: storing 1115 in location 1529
9999 mem: storing 0 in location 1534
 105 run: backspaced-cell:address:duplex-list <- copy *before-cursor
9999 mem: location 1531 is 1118
9999 mem: location 1118 is 1443
9999 mem: storing 1443 in location 1535
 105 run: remove-duplex *before-cursor
9999 mem: location 1531 is 1118
9999 mem: location 1118 is 1443
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1190
 106 run: jump-if in, 1:offset
9999 mem: location 1190 is 1443
9999 run: jumping to instruction 4
 106 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1190 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1449
9999 mem: location 1445 is 1427
9999 mem: location 1190 is 1443
9999 run: address to copy is 1444
9999 run: its type is address
9999 mem: location 1444 is 1449
9999 mem: storing 1449 in location 1191
 106 run: prev-node:address:duplex-list <- get *in, prev:offset
9999 mem: location 1190 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1449
9999 mem: location 1445 is 1427
9999 mem: location 1190 is 1443
9999 run: address to copy is 1445
9999 run: its type is address
9999 mem: location 1445 is 1427
9999 mem: storing 1427 in location 1192
 106 run: x:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1190 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1449
9999 mem: location 1445 is 1427
9999 mem: location 1190 is 1443
9999 run: address to copy is 1444
9999 mem: storing 1444 in location 1193
 106 run: *x <- copy 0
9999 mem: location 1193 is 1444
9999 mem: storing 0 in location 1444
 106 run: x <- get-address *in, prev:offset
9999 mem: location 1190 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 0
9999 mem: location 1445 is 1427
9999 mem: location 1190 is 1443
9999 run: address to copy is 1445
9999 mem: storing 1445 in location 1193
 106 run: *x <- copy 0
9999 mem: location 1193 is 1445
9999 mem: storing 0 in location 1445
 106 run: break-unless next-node, 
9999 mem: location 1191 is 1449
9999 run: jump-unless fell through
 106 run: x <- get-address *next-node, prev:offset
9999 mem: location 1191 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1443
9999 mem: location 1191 is 1449
9999 run: address to copy is 1451
9999 mem: storing 1451 in location 1193
 106 run: *x <- copy prev-node
9999 mem: location 1192 is 1427
9999 mem: location 1193 is 1451
9999 mem: storing 1427 in location 1451
 106 run: break-unless prev-node, 
9999 mem: location 1192 is 1427
9999 run: jump-unless fell through
 106 run: x <- get-address *prev-node, next:offset
9999 mem: location 1192 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1443
9999 mem: location 1429 is 1147
9999 mem: location 1192 is 1427
9999 run: address to copy is 1428
9999 mem: storing 1428 in location 1193
 106 run: *x <- copy next-node
9999 mem: location 1191 is 1449
9999 mem: location 1193 is 1428
9999 mem: storing 1449 in location 1428
 106 run: reply prev-node
9999 mem: location 1192 is 1427
9999 trace: reply: decrementing callstack depth from 5
 105 run: *before-cursor <- copy prev
9999 mem: location 1532 is 1427
9999 mem: location 1531 is 1118
9999 mem: storing 1427 in location 1118
 105 run: jump-unless scroll?, 1:offset
9999 mem: location 1534 is 0
9999 run: jumping to instruction 15
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1530 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 106 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 106 run: reply width
9999 mem: location 1180 is 10
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 10
9999 mem: storing 10 in location 1536
 105 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1529 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 0
9999 mem: location 1529 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1537
 105 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1529 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 0
9999 mem: location 1529 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1538
 105 run: same-row?:boolean <- equal cursor-row, original-row
9999 mem: location 1537 is 1
9999 mem: location 1533 is 1
9999 mem: storing 1 in location 1539
 105 run: jump-if same-row?, 1:offset
9999 mem: location 1539 is 1
9999 run: jumping to instruction 21
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1529 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 0
9999 mem: location 1529 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1540
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1529 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 0
9999 mem: location 1529 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1541
 105 run: curr:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1531 is 1118
9999 mem: location 1118 is 1427
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1427
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1449
9999 mem: location 1429 is 1147
9999 mem: location 1179 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1449
9999 mem: storing 1449 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1449
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1449
9999 mem: storing 1449 in location 1542
 105 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1530 is 1009
9999 mem: location 1537 is 1
9999 mem: location 1538 is 1
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 106 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 106 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1185
 106 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 106 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 106 run: *column <- copy new-column
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1012
9999 mem: storing 1 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1530
 105 run: curr-column:number <- copy cursor-column
9999 mem: location 1538 is 1
9999 mem: storing 1 in location 1543
 105 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1543 is 1
9999 mem: location 1536 is 10
9999 mem: storing 0 in location 1544
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1544 is 0
9999 run: jumping to instruction 30
 105 run: break-unless curr, 
9999 mem: location 1542 is 1449
9999 run: jump-unless fell through
 105 run: currc:character <- get *curr, value:offset
9999 mem: location 1542 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1427
9999 mem: location 1542 is 1449
9999 run: address to copy is 1449
9999 run: its type is character
9999 mem: location 1449 is 100
9999 mem: storing 100 in location 1545
 105 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1545 is 100
9999 mem: storing 0 in location 1546
 105 run: break-if at-newline?, 
9999 mem: location 1546 is 0
9999 run: jump-if fell through
 105 run: screen <- print-character screen, currc
9999 mem: location 1530 is 1009
9999 mem: location 1545 is 100
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 100
  90 print-character: 100 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 100
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 100
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 11
9999 mem: storing 1037 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1215 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 100
9999 mem: location 1216 is 1037
9999 mem: storing 100 in location 1037
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1037
9999 mem: location 1037 is 100
9999 mem: location 1038 is 7
9999 mem: location 1215 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1038
9999 mem: storing 7 in location 1038
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1530
 105 run: curr-column <- add curr-column, 1
9999 mem: location 1543 is 1
9999 mem: storing 2 in location 1543
 105 run: curr <- next-duplex curr
9999 mem: location 1542 is 1449
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1449
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1427
9999 mem: location 1179 is 1449
9999 run: address to copy is 1450
9999 run: its type is address
9999 mem: location 1450 is 1452
9999 mem: storing 1452 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1452
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1452
9999 mem: storing 1452 in location 1542
 105 run: loop 
9999 run: jumping to instruction 27
 105 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1543 is 2
9999 mem: location 1536 is 10
9999 mem: storing 0 in location 1544
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1544 is 0
9999 run: jumping to instruction 30
 105 run: break-unless curr, 
9999 mem: location 1542 is 1452
9999 run: jump-unless fell through
 105 run: currc:character <- get *curr, value:offset
9999 mem: location 1542 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1542 is 1452
9999 run: address to copy is 1452
9999 run: its type is character
9999 mem: location 1452 is 101
9999 mem: storing 101 in location 1545
 105 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1545 is 101
9999 mem: storing 0 in location 1546
 105 run: break-if at-newline?, 
9999 mem: location 1546 is 0
9999 run: jump-if fell through
 105 run: screen <- print-character screen, currc
9999 mem: location 1530 is 1009
9999 mem: location 1545 is 101
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 101
  90 print-character: 101 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 101
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 101
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 12
9999 mem: storing 1039 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 100
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 101
9999 mem: location 1216 is 1039
9999 mem: storing 101 in location 1039
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 101
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1040
9999 mem: storing 7 in location 1040
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1530
 105 run: curr-column <- add curr-column, 1
9999 mem: location 1543 is 2
9999 mem: storing 3 in location 1543
 105 run: curr <- next-duplex curr
9999 mem: location 1542 is 1452
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1452
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1179 is 1452
9999 run: address to copy is 1453
9999 run: its type is address
9999 mem: location 1453 is 1455
9999 mem: storing 1455 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1455
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1542
 105 run: loop 
9999 run: jumping to instruction 27
 105 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1543 is 3
9999 mem: location 1536 is 10
9999 mem: storing 0 in location 1544
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1544 is 0
9999 run: jumping to instruction 30
 105 run: break-unless curr, 
9999 mem: location 1542 is 1455
9999 run: jump-unless fell through
 105 run: currc:character <- get *curr, value:offset
9999 mem: location 1542 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1542 is 1455
9999 run: address to copy is 1455
9999 run: its type is character
9999 mem: location 1455 is 102
9999 mem: storing 102 in location 1545
 105 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1545 is 102
9999 mem: storing 0 in location 1546
 105 run: break-if at-newline?, 
9999 mem: location 1546 is 0
9999 run: jump-if fell through
 105 run: screen <- print-character screen, currc
9999 mem: location 1530 is 1009
9999 mem: location 1545 is 102
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 102
  90 print-character: 102 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 102
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 102
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 13
9999 mem: storing 1041 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1041
9999 mem: location 1041 is 101
9999 mem: location 1042 is 7
9999 mem: location 1215 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 102
9999 mem: location 1216 is 1041
9999 mem: storing 102 in location 1041
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1041
9999 mem: location 1041 is 102
9999 mem: location 1042 is 7
9999 mem: location 1215 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1042
9999 mem: storing 7 in location 1042
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1530
 105 run: curr-column <- add curr-column, 1
9999 mem: location 1543 is 3
9999 mem: storing 4 in location 1543
 105 run: curr <- next-duplex curr
9999 mem: location 1542 is 1455
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1455 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1455
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1179 is 1455
9999 run: address to copy is 1456
9999 run: its type is address
9999 mem: location 1456 is 0
9999 mem: storing 0 in location 1180
 106 run: reply result
9999 mem: location 1180 is 0
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 0
9999 mem: storing 0 in location 1542
 105 run: loop 
9999 run: jumping to instruction 27
 105 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1543 is 4
9999 mem: location 1536 is 10
9999 mem: storing 0 in location 1544
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1544 is 0
9999 run: jumping to instruction 30
 105 run: break-unless curr, 
9999 mem: location 1542 is 0
9999 run: jumping to instruction 38
9999 schedule: delete-before-cursor/handle-keyboard-event/editor-event-loop/scenario-editor-can-undo-and-redo-delete
 105 run: screen <- print-character screen, 32/space
9999 mem: location 1530 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 14
9999 mem: storing 1043 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1043
9999 mem: location 1043 is 102
9999 mem: location 1044 is 7
9999 mem: location 1215 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1043
9999 mem: storing 32 in location 1043
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1215 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1044
9999 mem: storing 7 in location 1044
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1530
 105 run: reply editor/same-as-ingredient:0, screen/same-as-ingredient:1, 0/no-more-render, backspaced-cell
9999 mem: location 1529 is 1115
9999 mem: location 1530 is 1009
9999 mem: location 1535 is 1443
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1115
9999 run: result 1 is 1009
9999 run: result 2 is 0
9999 run: result 3 is 1443
9999 mem: storing 1115 in location 1313
9999 mem: storing 1009 in location 1312
9999 mem: storing 0 in location 1370
9999 mem: storing 1443 in location 1371
 104 run: break-unless backspaced-cell, 
9999 mem: location 1371 is 1443
9999 run: jump-unless fell through
 104 run: top-after:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1364
 104 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1331
 104 run: break-unless *undo, 
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1525
9999 run: jump-unless fell through
 104 run: op:address:operation/skiptypecheck <- first *undo
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1525
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 1525 in location 1179
 105 run: result:location <- get *in, value:offset
9999 mem: location 1179 is 1525
9999 mem: location 1525 is 1514
9999 mem: location 1526 is 1497
9999 mem: location 1179 is 1525
9999 run: address to copy is 1525
9999 run: its type is number
9999 mem: location 1525 is 1514
9999 mem: storing 1514 in location 1180
 105 run: reply result
9999 mem: location 1180 is 1514
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1514
9999 mem: storing 1514 in location 1330
 104 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1330 is 1514
9999 mem: location 1514 is 2
9999 mem: location 1515 is 1
9999 mem: location 1516 is 2
9999 mem: location 1517 is 1147
9999 mem: location 1518 is 1
9999 mem: location 1519 is 2
9999 mem: location 1520 is 1147
9999 mem: location 1521 is 1446
9999 mem: location 1522 is 1443
9999 mem: location 1523 is 1449
9999 mem: location 1524 is 2
9999 mem: location 1330 is 1514
9999 mem: storing 1515 in location 1332
 104 run: break-unless deletion, 
9999 mem: location 1332 is 1515
9999 run: jump-unless fell through
 104 run: previous-coalesce-tag:number <- get *deletion, tag:offset
9999 mem: location 1332 is 1515
9999 mem: location 1515 is 1
9999 mem: location 1516 is 2
9999 mem: location 1517 is 1147
9999 mem: location 1518 is 1
9999 mem: location 1519 is 2
9999 mem: location 1520 is 1147
9999 mem: location 1521 is 1446
9999 mem: location 1522 is 1443
9999 mem: location 1523 is 1449
9999 mem: location 1524 is 2
9999 mem: location 1332 is 1515
9999 run: address to copy is 1524
9999 run: its type is number
9999 mem: location 1524 is 2
9999 mem: storing 2 in location 1354
 104 run: coalesce?:boolean <- equal previous-coalesce-tag, 1/coalesce-backspace
9999 mem: location 1354 is 2
9999 mem: storing 0 in location 1355
 104 run: break-unless coalesce?, 
9999 mem: location 1355 is 0
9999 run: jumping to instruction 334
 104 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1565
9999 mem: storing 1565 in location 1330
 104 run: deleted-until:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1322 is 1118
9999 mem: location 1118 is 1427
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1179
 105 run: jump-if in, 1:offset
9999 mem: location 1179 is 1427
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1449
9999 mem: location 1429 is 1147
9999 mem: location 1179 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1449
9999 mem: storing 1449 in location 1180
 105 run: reply result
9999 mem: location 1180 is 1449
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1449
9999 mem: storing 1449 in location 1365
 104 run: *op <- merge 2/delete-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, backspaced-cell/deleted, *before-cursor/delete-from, deleted-until, 1/coalesce-backspace
9999 mem: location 1325 is 1
9999 mem: location 1326 is 2
9999 mem: location 1362 is 1147
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1364 is 1147
9999 mem: location 1371 is 1443
9999 mem: location 1322 is 1118
9999 mem: location 1118 is 1427
9999 mem: location 1365 is 1449
9999 mem: location 1330 is 1565
9999 mem: location 1330 is 1565
9999 mem: storing 2 in location 1565
9999 mem: storing 1 in location 1566
9999 mem: storing 2 in location 1567
9999 mem: storing 1147 in location 1568
9999 mem: storing 1 in location 1569
9999 mem: storing 1 in location 1570
9999 mem: storing 1147 in location 1571
9999 mem: storing 1443 in location 1572
9999 mem: storing 1427 in location 1573
9999 mem: storing 1449 in location 1574
9999 mem: storing 1 in location 1575
 104 run: editor <- add-operation editor, op
9999 mem: location 1313 is 1115
9999 mem: location 1330 is 1565
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1190
 105 run: op:address:operation <- next-ingredient 
9999 mem: storing 1565 in location 1191
 105 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1190 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 0
9999 mem: location 1190 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1192
 105 run: *undo/skiptypecheck <- push op, *undo
9999 mem: location 1191 is 1565
9999 mem: location 1192 is 1124
9999 mem: location 1124 is 1525
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: x:location <- next-ingredient 
9999 mem: storing 1565 in location 1183
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 1525 in location 1184
 106 run: result:address:list <- new list:type
9999 mem: new alloc: 1576
9999 mem: storing 1576 in location 1185
 106 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1185 is 1576
9999 mem: location 1576 is 0
9999 mem: location 1577 is 0
9999 mem: location 1185 is 1576
9999 run: address to copy is 1576
9999 mem: storing 1576 in location 1186
 106 run: *val <- copy x
9999 mem: location 1183 is 1565
9999 mem: location 1186 is 1576
9999 mem: storing 1565 in location 1576
 106 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1185 is 1576
9999 mem: location 1576 is 1565
9999 mem: location 1577 is 0
9999 mem: location 1185 is 1576
9999 run: address to copy is 1577
9999 mem: storing 1577 in location 1187
 106 run: *next <- copy in
9999 mem: location 1184 is 1525
9999 mem: location 1187 is 1577
9999 mem: storing 1525 in location 1577
 106 run: reply result
9999 mem: location 1185 is 1576
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1576
9999 mem: location 1192 is 1124
9999 mem: storing 1576 in location 1124
 105 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1190 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 0
9999 mem: location 1190 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1193
 105 run: *redo <- copy 0
9999 mem: location 1193 is 1125
9999 mem: storing 0 in location 1125
 105 run: reply editor/same-as-ingredient:0
9999 mem: location 1190 is 1115
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1313
 104 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1312 is 1009
9999 mem: location 1313 is 1115
9999 mem: location 1370 is 0
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1297
9999 mem: storing 1115 in location 1299
9999 mem: storing 0 in location 1309
 103 run: break-unless go-render?, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 25
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1301
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 1
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1185
 104 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 104 run: *column <- copy new-column
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 103 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1293
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 104 run: x:address:console <- next-ingredient 
9999 mem: storing 1293 in location 1222
 104 run: break-unless x, 
9999 mem: location 1222 is 1293
9999 run: jump-unless fell through
 104 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 9
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1293
9999 mem: storing 1293 in location 1223
 104 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 9
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1248
9999 mem: storing 1248 in location 1224
 104 run: max:number <- length *buf
9999 mem: location 1224 is 1248
9999 mem: storing 11 in location 1225
 104 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 9
9999 mem: location 1225 is 11
9999 mem: storing 0 in location 1226
 104 run: break-unless done?, 
9999 mem: location 1226 is 0
9999 run: jumping to instruction 12
 104 run: result:event <- index *buf, *idx
9999 mem: location 1224 is 1248
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 9
9999 run: address to copy is 1285
9999 run: its type is event
9999 mem: location 1285 is 1
9999 mem: location 1286 is 65522
9999 mem: location 1287 is 0
9999 mem: location 1288 is 0
9999 mem: storing 1 in location 1228
9999 mem: storing 65522 in location 1229
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 104 run: *idx <- add *idx, 1
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 9
9999 mem: location 1223 is 1293
9999 mem: storing 10 in location 1293
 104 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1228 is 1
9999 mem: location 1229 is 65522
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1222 is 1293
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is [1, 65522, 0, 0]
9999 run: result 1 is 1293
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1302
9999 mem: storing 65522 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1293 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 0 in location 1307
 103 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 103 run: break-if quit?, 
9999 mem: location 1307 is 0
9999 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1302 is 1
9999 mem: location 1303 is 65522
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: storing 0 in location 1308
 103 run: break-unless t, 
9999 mem: location 1308 is 0
9999 run: jumping to instruction 18
 103 run: break-if t, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 mem: location 1302 is 1
9999 mem: location 1303 is 65522
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1312
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1313
 104 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1314
9999 mem: storing 65522 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
 104 run: jump-if editor, 1:offset
9999 mem: location 1313 is 1115
9999 run: jumping to instruction 6
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 105 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 105 run: reply width
9999 mem: location 1180 is 10
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 10
9999 mem: storing 10 in location 1318
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 105 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 105 run: reply height
9999 mem: location 1180 is 5
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 5
9999 mem: storing 5 in location 1319
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1320
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1321
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1322
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1323
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1324
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1325
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1326
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1314 is 1
9999 mem: location 1315 is 65522
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1327
 104 run: break-unless c, 
9999 mem: location 1327 is 0
9999 run: jumping to instruction 432
 104 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1314 is 1
9999 mem: location 1315 is 65522
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 1315 in location 1382
 104 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1382 is 1315
 104 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1344
 104 run: break-unless page-up?, 
9999 mem: location 1344 is 0
9999 run: jumping to instruction 477
 104 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1360
 104 run: break-unless page-down?, 
9999 mem: location 1360 is 0
9999 run: jumping to instruction 519
 104 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1367
 104 run: break-unless move-to-end-of-line?, 
9999 mem: location 1367 is 0
9999 run: jumping to instruction 556
 104 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1368
 104 run: break-unless move-to-start-of-line?, 
9999 mem: location 1368 is 0
9999 run: jumping to instruction 593
 104 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1383
 104 run: break-unless move-to-next-line?, 
9999 mem: location 1383 is 0
9999 run: jumping to instruction 630
 104 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1384
 104 run: break-unless move-to-previous-line?, 
9999 mem: location 1384 is 0
9999 run: jumping to instruction 667
 104 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1385
 104 run: break-unless move-to-previous-character?, 
9999 mem: location 1385 is 0
9999 run: jumping to instruction 709
 104 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1387
 104 run: break-unless move-to-next-character?, 
9999 mem: location 1387 is 0
9999 run: jumping to instruction 750
 104 run: delete-next-character?:boolean <- equal *k, 65522/delete
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 1 in location 1389
 104 run: break-unless delete-next-character?, 
9999 mem: location 1389 is 1
9999 run: jump-unless fell through
 104 run: top-before:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1362
 104 run: editor, screen, go-render?:boolean, deleted-cell:address:duplex-list <- delete-at-cursor editor, screen
9999 mem: location 1313 is 1115
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1501
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1502
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1501 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 0
9999 mem: location 1501 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1503
 105 run: candidate:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1503 is 1118
9999 mem: location 1118 is 1427
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1427
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1449
9999 mem: location 1429 is 1147
9999 mem: location 1179 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1449
9999 mem: storing 1449 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1449
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1449
9999 mem: storing 1449 in location 1504
 105 run: jump-if candidate, 1:offset
9999 mem: location 1504 is 1449
9999 run: jumping to instruction 7
 105 run: currc:character <- get *candidate, value:offset
9999 mem: location 1504 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1427
9999 mem: location 1504 is 1449
9999 run: address to copy is 1449
9999 run: its type is character
9999 mem: location 1449 is 100
9999 mem: storing 100 in location 1505
 105 run: remove-duplex candidate
9999 mem: location 1504 is 1449
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1190
 106 run: jump-if in, 1:offset
9999 mem: location 1190 is 1449
9999 run: jumping to instruction 4
 106 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1190 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1427
9999 mem: location 1190 is 1449
9999 run: address to copy is 1450
9999 run: its type is address
9999 mem: location 1450 is 1452
9999 mem: storing 1452 in location 1191
 106 run: prev-node:address:duplex-list <- get *in, prev:offset
9999 mem: location 1190 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1427
9999 mem: location 1190 is 1449
9999 run: address to copy is 1451
9999 run: its type is address
9999 mem: location 1451 is 1427
9999 mem: storing 1427 in location 1192
 106 run: x:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1190 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1427
9999 mem: location 1190 is 1449
9999 run: address to copy is 1450
9999 mem: storing 1450 in location 1193
 106 run: *x <- copy 0
9999 mem: location 1193 is 1450
9999 mem: storing 0 in location 1450
 106 run: x <- get-address *in, prev:offset
9999 mem: location 1190 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 0
9999 mem: location 1451 is 1427
9999 mem: location 1190 is 1449
9999 run: address to copy is 1451
9999 mem: storing 1451 in location 1193
 106 run: *x <- copy 0
9999 mem: location 1193 is 1451
9999 mem: storing 0 in location 1451
 106 run: break-unless next-node, 
9999 mem: location 1191 is 1452
9999 run: jump-unless fell through
 106 run: x <- get-address *next-node, prev:offset
9999 mem: location 1191 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1191 is 1452
9999 run: address to copy is 1454
9999 mem: storing 1454 in location 1193
 106 run: *x <- copy prev-node
9999 mem: location 1192 is 1427
9999 mem: location 1193 is 1454
9999 mem: storing 1427 in location 1454
 106 run: break-unless prev-node, 
9999 mem: location 1192 is 1427
9999 run: jump-unless fell through
 106 run: x <- get-address *prev-node, next:offset
9999 mem: location 1192 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1449
9999 mem: location 1429 is 1147
9999 mem: location 1192 is 1427
9999 run: address to copy is 1428
9999 mem: storing 1428 in location 1193
 106 run: *x <- copy next-node
9999 mem: location 1191 is 1452
9999 mem: location 1193 is 1428
9999 mem: storing 1452 in location 1428
 106 run: reply prev-node
9999 mem: location 1192 is 1427
9999 trace: reply: decrementing callstack depth from 5
 105 run: deleted-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1505 is 100
9999 mem: storing 0 in location 1506
 105 run: jump-unless deleted-newline?, 1:offset
9999 mem: location 1506 is 0
9999 run: jumping to instruction 12
 105 run: curr:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1503 is 1118
9999 mem: location 1118 is 1427
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1427
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1452
9999 mem: location 1429 is 1147
9999 mem: location 1179 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1452
9999 mem: storing 1452 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1452
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1452
9999 mem: storing 1452 in location 1507
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1501 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 0
9999 mem: location 1501 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1508
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1501 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 0
9999 mem: location 1501 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1509
 105 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1502 is 1009
9999 mem: location 1508 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1509 is 1122
9999 mem: location 1122 is 1
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 106 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 106 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1185
 106 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 106 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 106 run: *column <- copy new-column
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1012
9999 mem: storing 1 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1502
 105 run: curr-column:number <- copy *cursor-column
9999 mem: location 1509 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1510
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1502 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 106 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 106 run: reply width
9999 mem: location 1180 is 10
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 10
9999 mem: storing 10 in location 1511
 105 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1510 is 1
9999 mem: location 1511 is 10
9999 mem: storing 0 in location 1512
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1512 is 0
9999 run: jumping to instruction 22
 105 run: break-unless curr, 
9999 mem: location 1507 is 1452
9999 run: jump-unless fell through
 105 run: currc:character <- get *curr, value:offset
9999 mem: location 1507 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1427
9999 mem: location 1507 is 1452
9999 run: address to copy is 1452
9999 run: its type is character
9999 mem: location 1452 is 101
9999 mem: storing 101 in location 1505
 105 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1505 is 101
9999 mem: storing 0 in location 1513
 105 run: break-if at-newline?, 
9999 mem: location 1513 is 0
9999 run: jump-if fell through
 105 run: screen <- print-character screen, currc
9999 mem: location 1502 is 1009
9999 mem: location 1505 is 101
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 101
  90 print-character: 101 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 101
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 101
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 11
9999 mem: storing 1037 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1037
9999 mem: location 1037 is 100
9999 mem: location 1038 is 7
9999 mem: location 1215 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 101
9999 mem: location 1216 is 1037
9999 mem: storing 101 in location 1037
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1037
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1215 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1038
9999 mem: storing 7 in location 1038
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1502
 105 run: curr-column <- add curr-column, 1
9999 mem: location 1510 is 1
9999 mem: storing 2 in location 1510
 105 run: curr <- next-duplex curr
9999 mem: location 1507 is 1452
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1452
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1427
9999 mem: location 1179 is 1452
9999 run: address to copy is 1453
9999 run: its type is address
9999 mem: location 1453 is 1455
9999 mem: storing 1455 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1455
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1507
 105 run: loop 
9999 run: jumping to instruction 19
 105 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1510 is 2
9999 mem: location 1511 is 10
9999 mem: storing 0 in location 1512
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1512 is 0
9999 run: jumping to instruction 22
 105 run: break-unless curr, 
9999 mem: location 1507 is 1455
9999 run: jump-unless fell through
 105 run: currc:character <- get *curr, value:offset
9999 mem: location 1507 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1507 is 1455
9999 run: address to copy is 1455
9999 run: its type is character
9999 mem: location 1455 is 102
9999 mem: storing 102 in location 1505
 105 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1505 is 102
9999 mem: storing 0 in location 1513
 105 run: break-if at-newline?, 
9999 mem: location 1513 is 0
9999 run: jump-if fell through
 105 run: screen <- print-character screen, currc
9999 mem: location 1502 is 1009
9999 mem: location 1505 is 102
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 102
  90 print-character: 102 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 102
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 102
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 12
9999 mem: storing 1039 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 101
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 102
9999 mem: location 1216 is 1039
9999 mem: storing 102 in location 1039
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 102
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1040
9999 mem: storing 7 in location 1040
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1502
 105 run: curr-column <- add curr-column, 1
9999 mem: location 1510 is 2
9999 mem: storing 3 in location 1510
 105 run: curr <- next-duplex curr
9999 mem: location 1507 is 1455
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1455 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1455
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1179 is 1455
9999 run: address to copy is 1456
9999 run: its type is address
9999 mem: location 1456 is 0
9999 mem: storing 0 in location 1180
 106 run: reply result
9999 mem: location 1180 is 0
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 0
9999 mem: storing 0 in location 1507
 105 run: loop 
9999 run: jumping to instruction 19
 105 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1510 is 3
9999 mem: location 1511 is 10
9999 mem: storing 0 in location 1512
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1512 is 0
9999 run: jumping to instruction 22
 105 run: break-unless curr, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 30
 105 run: screen <- print-character screen, 32/space
9999 mem: location 1502 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 13
9999 mem: storing 1041 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1041
9999 mem: location 1041 is 102
9999 mem: location 1042 is 7
9999 mem: location 1215 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1041
9999 mem: storing 32 in location 1041
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1215 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1042
9999 mem: storing 7 in location 1042
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1502
 105 run: reply editor/same-as-ingredient:0, screen/same-as-ingredient:1, 0/no-more-render, candidate/deleted-cell
9999 mem: location 1501 is 1115
9999 mem: location 1502 is 1009
9999 mem: location 1504 is 1449
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1115
9999 run: result 1 is 1009
9999 run: result 2 is 0
9999 run: result 3 is 1449
9999 mem: storing 1115 in location 1313
9999 mem: storing 1009 in location 1312
9999 mem: storing 0 in location 1370
9999 mem: storing 1449 in location 1390
 104 run: break-unless deleted-cell, 
9999 mem: location 1390 is 1449
9999 run: jump-unless fell through
 104 run: top-after:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1364
 104 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1331
 104 run: break-unless *undo, 
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1576
9999 run: jump-unless fell through
 104 run: op:address:operation/skiptypecheck <- first *undo
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1576
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 1576 in location 1179
 105 run: result:location <- get *in, value:offset
9999 mem: location 1179 is 1576
9999 mem: location 1576 is 1565
9999 mem: location 1577 is 1525
9999 mem: location 1179 is 1576
9999 run: address to copy is 1576
9999 run: its type is number
9999 mem: location 1576 is 1565
9999 mem: storing 1565 in location 1180
 105 run: reply result
9999 mem: location 1180 is 1565
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1565
9999 mem: storing 1565 in location 1330
 104 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1330 is 1565
9999 mem: location 1565 is 2
9999 mem: location 1566 is 1
9999 mem: location 1567 is 2
9999 mem: location 1568 is 1147
9999 mem: location 1569 is 1
9999 mem: location 1570 is 1
9999 mem: location 1571 is 1147
9999 mem: location 1572 is 1443
9999 mem: location 1573 is 1427
9999 mem: location 1574 is 1449
9999 mem: location 1575 is 1
9999 mem: location 1330 is 1565
9999 mem: storing 1566 in location 1332
 104 run: break-unless deletion, 
9999 mem: location 1332 is 1566
9999 run: jump-unless fell through
 104 run: previous-coalesce-tag:number <- get *deletion, tag:offset
9999 mem: location 1332 is 1566
9999 mem: location 1566 is 1
9999 mem: location 1567 is 2
9999 mem: location 1568 is 1147
9999 mem: location 1569 is 1
9999 mem: location 1570 is 1
9999 mem: location 1571 is 1147
9999 mem: location 1572 is 1443
9999 mem: location 1573 is 1427
9999 mem: location 1574 is 1449
9999 mem: location 1575 is 1
9999 mem: location 1332 is 1566
9999 run: address to copy is 1575
9999 run: its type is number
9999 mem: location 1575 is 1
9999 mem: storing 1 in location 1354
 104 run: coalesce?:boolean <- equal previous-coalesce-tag, 2/coalesce-delete
9999 mem: location 1354 is 1
9999 mem: storing 0 in location 1355
 104 run: break-unless coalesce?, 
9999 mem: location 1355 is 0
9999 run: jumping to instruction 780
 104 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1578
9999 mem: storing 1578 in location 1330
 104 run: deleted-until:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1322 is 1118
9999 mem: location 1118 is 1427
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1179
 105 run: jump-if in, 1:offset
9999 mem: location 1179 is 1427
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1452
9999 mem: location 1429 is 1147
9999 mem: location 1179 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1452
9999 mem: storing 1452 in location 1180
 105 run: reply result
9999 mem: location 1180 is 1452
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1452
9999 mem: storing 1452 in location 1365
 104 run: *op <- merge 2/delete-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, deleted-cell/deleted, *before-cursor/delete-from, deleted-until, 2/coalesce-delete
9999 mem: location 1325 is 1
9999 mem: location 1326 is 1
9999 mem: location 1362 is 1147
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1364 is 1147
9999 mem: location 1390 is 1449
9999 mem: location 1322 is 1118
9999 mem: location 1118 is 1427
9999 mem: location 1365 is 1452
9999 mem: location 1330 is 1578
9999 mem: location 1330 is 1578
9999 mem: storing 2 in location 1578
9999 mem: storing 1 in location 1579
9999 mem: storing 1 in location 1580
9999 mem: storing 1147 in location 1581
9999 mem: storing 1 in location 1582
9999 mem: storing 1 in location 1583
9999 mem: storing 1147 in location 1584
9999 mem: storing 1449 in location 1585
9999 mem: storing 1427 in location 1586
9999 mem: storing 1452 in location 1587
9999 mem: storing 2 in location 1588
 104 run: editor <- add-operation editor, op
9999 mem: location 1313 is 1115
9999 mem: location 1330 is 1578
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
9999 schedule: add-operation/handle-keyboard-event/editor-event-loop/scenario-editor-can-undo-and-redo-delete
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1190
 105 run: op:address:operation <- next-ingredient 
9999 mem: storing 1578 in location 1191
 105 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1190 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 0
9999 mem: location 1190 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1192
 105 run: *undo/skiptypecheck <- push op, *undo
9999 mem: location 1191 is 1578
9999 mem: location 1192 is 1124
9999 mem: location 1124 is 1576
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: x:location <- next-ingredient 
9999 mem: storing 1578 in location 1183
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 1576 in location 1184
 106 run: result:address:list <- new list:type
9999 mem: new alloc: 1589
9999 mem: storing 1589 in location 1185
 106 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1185 is 1589
9999 mem: location 1589 is 0
9999 mem: location 1590 is 0
9999 mem: location 1185 is 1589
9999 run: address to copy is 1589
9999 mem: storing 1589 in location 1186
 106 run: *val <- copy x
9999 mem: location 1183 is 1578
9999 mem: location 1186 is 1589
9999 mem: storing 1578 in location 1589
 106 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1185 is 1589
9999 mem: location 1589 is 1578
9999 mem: location 1590 is 0
9999 mem: location 1185 is 1589
9999 run: address to copy is 1590
9999 mem: storing 1590 in location 1187
 106 run: *next <- copy in
9999 mem: location 1184 is 1576
9999 mem: location 1187 is 1590
9999 mem: storing 1576 in location 1590
 106 run: reply result
9999 mem: location 1185 is 1589
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1589
9999 mem: location 1192 is 1124
9999 mem: storing 1589 in location 1124
 105 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1190 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1190 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1193
 105 run: *redo <- copy 0
9999 mem: location 1193 is 1125
9999 mem: storing 0 in location 1125
 105 run: reply editor/same-as-ingredient:0
9999 mem: location 1190 is 1115
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1313
 104 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1312 is 1009
9999 mem: location 1313 is 1115
9999 mem: location 1370 is 0
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1297
9999 mem: storing 1115 in location 1299
9999 mem: storing 0 in location 1309
 103 run: break-unless go-render?, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 25
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1301
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 1
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1185
 104 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 104 run: *column <- copy new-column
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 103 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1293
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 104 run: x:address:console <- next-ingredient 
9999 mem: storing 1293 in location 1222
 104 run: break-unless x, 
9999 mem: location 1222 is 1293
9999 run: jump-unless fell through
 104 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 10
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1293
9999 mem: storing 1293 in location 1223
 104 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 10
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1248
9999 mem: storing 1248 in location 1224
 104 run: max:number <- length *buf
9999 mem: location 1224 is 1248
9999 mem: storing 11 in location 1225
 104 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 10
9999 mem: location 1225 is 11
9999 mem: storing 0 in location 1226
 104 run: break-unless done?, 
9999 mem: location 1226 is 0
9999 run: jumping to instruction 12
 104 run: result:event <- index *buf, *idx
9999 mem: location 1224 is 1248
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 10
9999 run: address to copy is 1289
9999 run: its type is event
9999 mem: location 1289 is 1
9999 mem: location 1290 is 65522
9999 mem: location 1291 is 0
9999 mem: location 1292 is 0
9999 mem: storing 1 in location 1228
9999 mem: storing 65522 in location 1229
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 104 run: *idx <- add *idx, 1
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 10
9999 mem: location 1223 is 1293
9999 mem: storing 11 in location 1293
 104 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1228 is 1
9999 mem: location 1229 is 65522
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1222 is 1293
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is [1, 65522, 0, 0]
9999 run: result 1 is 1293
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1302
9999 mem: storing 65522 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1293 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 0 in location 1307
 103 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 103 run: break-if quit?, 
9999 mem: location 1307 is 0
9999 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1302 is 1
9999 mem: location 1303 is 65522
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: storing 0 in location 1308
 103 run: break-unless t, 
9999 mem: location 1308 is 0
9999 run: jumping to instruction 18
 103 run: break-if t, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 mem: location 1302 is 1
9999 mem: location 1303 is 65522
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1312
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1313
 104 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1314
9999 mem: storing 65522 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
 104 run: jump-if editor, 1:offset
9999 mem: location 1313 is 1115
9999 run: jumping to instruction 6
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 105 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 105 run: reply width
9999 mem: location 1180 is 10
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 10
9999 mem: storing 10 in location 1318
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 105 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 105 run: reply height
9999 mem: location 1180 is 5
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 5
9999 mem: storing 5 in location 1319
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1320
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1321
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1322
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1323
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1324
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1325
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1326
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1314 is 1
9999 mem: location 1315 is 65522
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1327
 104 run: break-unless c, 
9999 mem: location 1327 is 0
9999 run: jumping to instruction 432
 104 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1314 is 1
9999 mem: location 1315 is 65522
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 1315 in location 1382
 104 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1382 is 1315
 104 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1344
 104 run: break-unless page-up?, 
9999 mem: location 1344 is 0
9999 run: jumping to instruction 477
 104 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1360
 104 run: break-unless page-down?, 
9999 mem: location 1360 is 0
9999 run: jumping to instruction 519
 104 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1367
 104 run: break-unless move-to-end-of-line?, 
9999 mem: location 1367 is 0
9999 run: jumping to instruction 556
 104 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1368
 104 run: break-unless move-to-start-of-line?, 
9999 mem: location 1368 is 0
9999 run: jumping to instruction 593
 104 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1383
 104 run: break-unless move-to-next-line?, 
9999 mem: location 1383 is 0
9999 run: jumping to instruction 630
 104 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1384
 104 run: break-unless move-to-previous-line?, 
9999 mem: location 1384 is 0
9999 run: jumping to instruction 667
 104 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1385
 104 run: break-unless move-to-previous-character?, 
9999 mem: location 1385 is 0
9999 run: jumping to instruction 709
 104 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 0 in location 1387
 104 run: break-unless move-to-next-character?, 
9999 mem: location 1387 is 0
9999 run: jumping to instruction 750
 104 run: delete-next-character?:boolean <- equal *k, 65522/delete
9999 mem: location 1382 is 1315
9999 mem: location 1315 is 65522
9999 mem: storing 1 in location 1389
 104 run: break-unless delete-next-character?, 
9999 mem: location 1389 is 1
9999 run: jump-unless fell through
 104 run: top-before:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1362
 104 run: editor, screen, go-render?:boolean, deleted-cell:address:duplex-list <- delete-at-cursor editor, screen
9999 mem: location 1313 is 1115
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1501
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1502
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1501 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1501 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1503
 105 run: candidate:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1503 is 1118
9999 mem: location 1118 is 1427
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1427
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1452
9999 mem: location 1429 is 1147
9999 mem: location 1179 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1452
9999 mem: storing 1452 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1452
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1452
9999 mem: storing 1452 in location 1504
 105 run: jump-if candidate, 1:offset
9999 mem: location 1504 is 1452
9999 run: jumping to instruction 7
 105 run: currc:character <- get *candidate, value:offset
9999 mem: location 1504 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1427
9999 mem: location 1504 is 1452
9999 run: address to copy is 1452
9999 run: its type is character
9999 mem: location 1452 is 101
9999 mem: storing 101 in location 1505
 105 run: remove-duplex candidate
9999 mem: location 1504 is 1452
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1190
 106 run: jump-if in, 1:offset
9999 mem: location 1190 is 1452
9999 run: jumping to instruction 4
 106 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1190 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1427
9999 mem: location 1190 is 1452
9999 run: address to copy is 1453
9999 run: its type is address
9999 mem: location 1453 is 1455
9999 mem: storing 1455 in location 1191
 106 run: prev-node:address:duplex-list <- get *in, prev:offset
9999 mem: location 1190 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1427
9999 mem: location 1190 is 1452
9999 run: address to copy is 1454
9999 run: its type is address
9999 mem: location 1454 is 1427
9999 mem: storing 1427 in location 1192
 106 run: x:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1190 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1427
9999 mem: location 1190 is 1452
9999 run: address to copy is 1453
9999 mem: storing 1453 in location 1193
 106 run: *x <- copy 0
9999 mem: location 1193 is 1453
9999 mem: storing 0 in location 1453
 106 run: x <- get-address *in, prev:offset
9999 mem: location 1190 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 0
9999 mem: location 1454 is 1427
9999 mem: location 1190 is 1452
9999 run: address to copy is 1454
9999 mem: storing 1454 in location 1193
 106 run: *x <- copy 0
9999 mem: location 1193 is 1454
9999 mem: storing 0 in location 1454
 106 run: break-unless next-node, 
9999 mem: location 1191 is 1455
9999 run: jump-unless fell through
 106 run: x <- get-address *next-node, prev:offset
9999 mem: location 1191 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1191 is 1455
9999 run: address to copy is 1457
9999 mem: storing 1457 in location 1193
 106 run: *x <- copy prev-node
9999 mem: location 1192 is 1427
9999 mem: location 1193 is 1457
9999 mem: storing 1427 in location 1457
 106 run: break-unless prev-node, 
9999 mem: location 1192 is 1427
9999 run: jump-unless fell through
 106 run: x <- get-address *prev-node, next:offset
9999 mem: location 1192 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1452
9999 mem: location 1429 is 1147
9999 mem: location 1192 is 1427
9999 run: address to copy is 1428
9999 mem: storing 1428 in location 1193
 106 run: *x <- copy next-node
9999 mem: location 1191 is 1455
9999 mem: location 1193 is 1428
9999 mem: storing 1455 in location 1428
 106 run: reply prev-node
9999 mem: location 1192 is 1427
9999 trace: reply: decrementing callstack depth from 5
 105 run: deleted-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1505 is 101
9999 mem: storing 0 in location 1506
 105 run: jump-unless deleted-newline?, 1:offset
9999 mem: location 1506 is 0
9999 run: jumping to instruction 12
 105 run: curr:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1503 is 1118
9999 mem: location 1118 is 1427
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1427
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1455
9999 mem: location 1429 is 1147
9999 mem: location 1179 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1455
9999 mem: storing 1455 in location 1180
 106 run: reply result
9999 mem: location 1180 is 1455
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1507
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1501 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1501 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1508
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1501 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1501 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1509
 105 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1502 is 1009
9999 mem: location 1508 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1509 is 1122
9999 mem: location 1122 is 1
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 106 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 106 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1185
 106 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 106 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 106 run: *column <- copy new-column
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1012
9999 mem: storing 1 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1502
 105 run: curr-column:number <- copy *cursor-column
9999 mem: location 1509 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1510
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1502 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1179
 106 run: break-unless sc, 
9999 mem: location 1179 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1179 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 106 run: reply width
9999 mem: location 1180 is 10
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 10
9999 mem: storing 10 in location 1511
 105 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1510 is 1
9999 mem: location 1511 is 10
9999 mem: storing 0 in location 1512
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1512 is 0
9999 run: jumping to instruction 22
 105 run: break-unless curr, 
9999 mem: location 1507 is 1455
9999 run: jump-unless fell through
 105 run: currc:character <- get *curr, value:offset
9999 mem: location 1507 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1427
9999 mem: location 1507 is 1455
9999 run: address to copy is 1455
9999 run: its type is character
9999 mem: location 1455 is 102
9999 mem: storing 102 in location 1505
 105 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1505 is 102
9999 mem: storing 0 in location 1513
 105 run: break-if at-newline?, 
9999 mem: location 1513 is 0
9999 run: jump-if fell through
 105 run: screen <- print-character screen, currc
9999 mem: location 1502 is 1009
9999 mem: location 1505 is 102
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 102
  90 print-character: 102 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 102
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 102
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 11
9999 mem: storing 1037 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1037
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1215 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 102
9999 mem: location 1216 is 1037
9999 mem: storing 102 in location 1037
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1037
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1215 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1038
9999 mem: storing 7 in location 1038
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1502
 105 run: curr-column <- add curr-column, 1
9999 mem: location 1510 is 1
9999 mem: storing 2 in location 1510
 105 run: curr <- next-duplex curr
9999 mem: location 1507 is 1455
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1455 in location 1179
 106 run: jump-if in, 1:offset
9999 mem: location 1179 is 1455
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1427
9999 mem: location 1179 is 1455
9999 run: address to copy is 1456
9999 run: its type is address
9999 mem: location 1456 is 0
9999 mem: storing 0 in location 1180
 106 run: reply result
9999 mem: location 1180 is 0
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 0
9999 mem: storing 0 in location 1507
 105 run: loop 
9999 run: jumping to instruction 19
 105 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1510 is 2
9999 mem: location 1511 is 10
9999 mem: storing 0 in location 1512
 105 run: jump-unless at-right?, 1:offset
9999 mem: location 1512 is 0
9999 run: jumping to instruction 22
 105 run: break-unless curr, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 30
 105 run: screen <- print-character screen, 32/space
9999 mem: location 1502 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 106 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 106 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 106 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 106 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 106 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1210
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 106 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 106 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 12
9999 mem: storing 1039 in location 1215
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 102
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1216
 106 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1039
9999 mem: storing 32 in location 1039
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1217
 106 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1040
9999 mem: storing 7 in location 1040
 106 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 106 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1502
 105 run: reply editor/same-as-ingredient:0, screen/same-as-ingredient:1, 0/no-more-render, candidate/deleted-cell
9999 mem: location 1501 is 1115
9999 mem: location 1502 is 1009
9999 mem: location 1504 is 1452
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1115
9999 run: result 1 is 1009
9999 run: result 2 is 0
9999 run: result 3 is 1452
9999 mem: storing 1115 in location 1313
9999 mem: storing 1009 in location 1312
9999 mem: storing 0 in location 1370
9999 mem: storing 1452 in location 1390
 104 run: break-unless deleted-cell, 
9999 mem: location 1390 is 1452
9999 run: jump-unless fell through
 104 run: top-after:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1364
 104 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1331
 104 run: break-unless *undo, 
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1589
9999 run: jump-unless fell through
 104 run: op:address:operation/skiptypecheck <- first *undo
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1589
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 1589 in location 1179
 105 run: result:location <- get *in, value:offset
9999 mem: location 1179 is 1589
9999 mem: location 1589 is 1578
9999 mem: location 1590 is 1576
9999 mem: location 1179 is 1589
9999 run: address to copy is 1589
9999 run: its type is number
9999 mem: location 1589 is 1578
9999 mem: storing 1578 in location 1180
 105 run: reply result
9999 mem: location 1180 is 1578
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1578
9999 mem: storing 1578 in location 1330
 104 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1330 is 1578
9999 mem: location 1578 is 2
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1452
9999 mem: location 1588 is 2
9999 mem: location 1330 is 1578
9999 mem: storing 1579 in location 1332
 104 run: break-unless deletion, 
9999 mem: location 1332 is 1579
9999 run: jump-unless fell through
 104 run: previous-coalesce-tag:number <- get *deletion, tag:offset
9999 mem: location 1332 is 1579
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1452
9999 mem: location 1588 is 2
9999 mem: location 1332 is 1579
9999 run: address to copy is 1588
9999 run: its type is number
9999 mem: location 1588 is 2
9999 mem: storing 2 in location 1354
 104 run: coalesce?:boolean <- equal previous-coalesce-tag, 2/coalesce-delete
9999 mem: location 1354 is 2
9999 mem: storing 1 in location 1355
 104 run: break-unless coalesce?, 
9999 mem: location 1355 is 1
9999 run: jump-unless fell through
 104 run: delete-until:address:address:duplex-list <- get-address *deletion, delete-until:offset
9999 mem: location 1332 is 1579
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1452
9999 mem: location 1588 is 2
9999 mem: location 1332 is 1579
9999 run: address to copy is 1587
9999 mem: storing 1587 in location 1391
 104 run: *delete-until <- next-duplex *before-cursor
9999 mem: location 1322 is 1118
9999 mem: location 1118 is 1427
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1179
 105 run: jump-if in, 1:offset
9999 mem: location 1179 is 1427
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1455
9999 mem: location 1429 is 1147
9999 mem: location 1179 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1455
9999 mem: storing 1455 in location 1180
 105 run: reply result
9999 mem: location 1180 is 1455
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1455
9999 mem: location 1391 is 1587
9999 mem: storing 1455 in location 1587
 104 run: deleted-so-far:address:address:duplex-list <- get-address *deletion, deleted-text:offset
9999 mem: location 1332 is 1579
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1455
9999 mem: location 1588 is 2
9999 mem: location 1332 is 1579
9999 run: address to copy is 1585
9999 mem: storing 1585 in location 1392
 104 run: *deleted-so-far <- append-duplex *deleted-so-far, deleted-cell
9999 mem: location 1392 is 1585
9999 mem: location 1585 is 1449
9999 mem: location 1390 is 1452
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1190
 105 run: new:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1191
 105 run: last:address:duplex-list <- last-duplex in
9999 mem: location 1190 is 1449
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
9999 mem: new alloc: 1591
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1593
 106 run: result:address:duplex-list <- copy in
9999 mem: location 1593 is 1449
9999 mem: storing 1449 in location 1594
 106 run: next:address:duplex-list <- next-duplex result
9999 mem: location 1594 is 1449
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1179
 107 run: jump-if in, 1:offset
9999 mem: location 1179 is 1449
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1179 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 0
9999 mem: location 1451 is 0
9999 mem: location 1179 is 1449
9999 run: address to copy is 1450
9999 run: its type is address
9999 mem: location 1450 is 0
9999 mem: storing 0 in location 1180
 107 run: reply result
9999 mem: location 1180 is 0
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 0
9999 mem: storing 0 in location 1595
 106 run: break-unless next, 
9999 mem: location 1595 is 0
9999 run: jumping to instruction 8
 106 run: reply result
9999 mem: location 1594 is 1449
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1449
9999 mem: storing 1449 in location 1192
 105 run: dest:address:address:duplex-list <- get-address *last, next:offset
9999 mem: location 1192 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 0
9999 mem: location 1451 is 0
9999 mem: location 1192 is 1449
9999 run: address to copy is 1450
9999 mem: storing 1450 in location 1193
 105 run: *dest <- copy new
9999 mem: location 1191 is 1452
9999 mem: location 1193 is 1450
9999 mem: storing 1452 in location 1450
 105 run: jump-if new, 1:offset
9999 mem: location 1191 is 1452
9999 run: jumping to instruction 8
 105 run: dest <- get-address *new, prev:offset
9999 mem: location 1191 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 0
9999 mem: location 1454 is 0
9999 mem: location 1191 is 1452
9999 run: address to copy is 1454
9999 mem: storing 1454 in location 1193
 105 run: *dest <- copy last
9999 mem: location 1192 is 1449
9999 mem: location 1193 is 1454
9999 mem: storing 1449 in location 1454
 105 run: reply in/same-as-ingredient:0
9999 mem: location 1190 is 1449
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1449
9999 mem: location 1392 is 1585
9999 mem: storing 1449 in location 1585
 104 run: after-row:address:number <- get-address *deletion, after-row:offset
9999 mem: location 1332 is 1579
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1455
9999 mem: location 1588 is 2
9999 mem: location 1332 is 1579
9999 run: address to copy is 1582
9999 mem: storing 1582 in location 1356
 104 run: *after-row <- copy *cursor-row
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1356 is 1582
9999 mem: storing 1 in location 1582
 104 run: after-column:address:number <- get-address *deletion, after-column:offset
9999 mem: location 1332 is 1579
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1455
9999 mem: location 1588 is 2
9999 mem: location 1332 is 1579
9999 run: address to copy is 1583
9999 mem: storing 1583 in location 1357
 104 run: *after-column <- copy *cursor-column
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1357 is 1583
9999 mem: storing 1 in location 1583
 104 run: after-top:address:address:duplex-list:character <- get-address *deletion, after-top-of-screen:offset
9999 mem: location 1332 is 1579
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1455
9999 mem: location 1588 is 2
9999 mem: location 1332 is 1579
9999 run: address to copy is 1584
9999 mem: storing 1584 in location 1358
 104 run: *after-top <- get *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: location 1358 is 1584
9999 mem: storing 1147 in location 1584
 104 run: break +done-adding-delete-operation:label
9999 run: jumping to instruction 786
 104 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1312 is 1009
9999 mem: location 1313 is 1115
9999 mem: location 1370 is 0
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1297
9999 mem: storing 1115 in location 1299
9999 mem: storing 0 in location 1309
 103 run: break-unless go-render?, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 25
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1301
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 1
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1185
 104 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 104 run: *column <- copy new-column
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 103 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1293
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 104 run: x:address:console <- next-ingredient 
9999 mem: storing 1293 in location 1222
 104 run: break-unless x, 
9999 mem: location 1222 is 1293
9999 run: jump-unless fell through
 104 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 11
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1293
9999 mem: storing 1293 in location 1223
 104 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1293
9999 mem: location 1293 is 11
9999 mem: location 1294 is 1248
9999 mem: location 1222 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1248
9999 mem: storing 1248 in location 1224
 104 run: max:number <- length *buf
9999 mem: location 1224 is 1248
9999 mem: storing 11 in location 1225
 104 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1293
9999 mem: location 1293 is 11
9999 mem: location 1225 is 11
9999 mem: storing 1 in location 1226
 104 run: break-unless done?, 
9999 mem: location 1226 is 1
9999 run: jump-unless fell through
 104 run: dummy:address:event <- new event:type
9999 mem: storing 1177 in location 1227
 104 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1227 is 1177
9999 mem: location 1177 is 0
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1222 is 1293
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1293
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1293 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 1 in location 1307
 103 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 103 run: break-if quit?, 
9999 mem: location 1307 is 1
9999 run: jumping to instruction 28
9999 trace: fall-through: exiting editor-event-loop; decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .af        .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 3
 102 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 4
 102 run: memory-should-contain [
    3 <- 1
    4 <- 1
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: assume-console [
    press ctrl-z
  ]
9999 parse: instruction: press
9999 parse:   ingredient: {"ctrl-z": <>}
 102 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
9999 parse: instruction: editor-event-loop
9999 parse:   ingredient: {"screen": "address"}
9999 parse:   ingredient: {"console": "address"}
9999 parse:   ingredient: {"2": <"address" : "editor-data">}
9999 after-brace: recipe run1001
9999 after-brace: editor-event-loop ...
9999 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1601
9999 mem: location 2 is 1115
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1297
 104 run: console:address <- next-ingredient 
9999 mem: storing 1601 in location 1298
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1299
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1301
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1185
 105 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 105 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 105 run: *column <- copy new-column
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 104 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1601
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1601 in location 1222
 105 run: break-unless x, 
9999 mem: location 1222 is 1601
9999 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1601
9999 mem: location 1601 is 0
9999 mem: location 1602 is 1596
9999 mem: location 1222 is 1601
9999 run: address to copy is 1601
9999 mem: storing 1601 in location 1223
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1601
9999 mem: location 1601 is 0
9999 mem: location 1602 is 1596
9999 mem: location 1222 is 1601
9999 run: address to copy is 1602
9999 run: its type is address
9999 mem: location 1602 is 1596
9999 mem: storing 1596 in location 1224
 105 run: max:number <- length *buf
9999 mem: location 1224 is 1596
9999 mem: storing 1 in location 1225
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1601
9999 mem: location 1601 is 0
9999 mem: location 1225 is 1
9999 mem: storing 0 in location 1226
 105 run: break-unless done?, 
9999 mem: location 1226 is 0
9999 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1224 is 1596
9999 mem: location 1223 is 1601
9999 mem: location 1601 is 0
9999 run: address to copy is 1597
9999 run: its type is event
9999 mem: location 1597 is 0
9999 mem: location 1598 is 26
9999 mem: location 1599 is 0
9999 mem: location 1600 is 0
9999 mem: storing 0 in location 1228
9999 mem: storing 26 in location 1229
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 105 run: *idx <- add *idx, 1
9999 mem: location 1223 is 1601
9999 mem: location 1601 is 0
9999 mem: location 1223 is 1601
9999 mem: storing 1 in location 1601
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1228 is 0
9999 mem: location 1229 is 26
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1222 is 1601
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is [0, 26, 0, 0]
9999 run: result 1 is 1601
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1302
9999 mem: storing 26 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1601 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 0 in location 1307
 104 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 104 run: break-if quit?, 
9999 mem: location 1307 is 0
9999 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1302 is 0
9999 mem: location 1303 is 26
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: storing 0 in location 1308
 104 run: break-unless t, 
9999 mem: location 1308 is 0
9999 run: jumping to instruction 18
 104 run: break-if t, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 mem: location 1302 is 0
9999 mem: location 1303 is 26
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1312
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1313
 105 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1314
9999 mem: storing 26 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
 105 run: jump-if editor, 1:offset
9999 mem: location 1313 is 1115
9999 run: jumping to instruction 6
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1603
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1605
 106 run: break-unless sc, 
9999 mem: location 1605 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1605 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1605 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1606
 106 run: reply width
9999 mem: location 1606 is 10
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 10
9999 mem: storing 10 in location 1318
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1605
 106 run: break-unless sc, 
9999 mem: location 1605 is 1009
9999 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1605 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1605 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1606
 106 run: reply height
9999 mem: location 1606 is 5
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1319
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1320
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1321
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1322
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1323
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1324
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1325
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1326
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1314 is 0
9999 mem: location 1315 is 26
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 1315 in location 1327
 105 run: break-unless c, 
9999 mem: location 1327 is 1315
9999 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
9999 schedule: handle-keyboard-event/editor-event-loop/run1001/scenario-editor-can-undo-and-redo-delete
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 26
9999 mem: storing 0 in location 1328
 105 run: break-unless redo?, 
9999 mem: location 1328 is 0
9999 run: jumping to instruction 60
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 26
9999 mem: storing 1 in location 1339
 105 run: break-unless undo?, 
9999 mem: location 1339 is 1
9999 run: jump-unless fell through
 105 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1589
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1331
 105 run: break-unless *undo, 
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1589
9999 run: jump-unless fell through
 105 run: op:address:operation/skiptypecheck <- first *undo
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1589
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 1589 in location 1605
 106 run: result:location <- get *in, value:offset
9999 mem: location 1605 is 1589
9999 mem: location 1589 is 1578
9999 mem: location 1590 is 1576
9999 mem: location 1605 is 1589
9999 run: address to copy is 1589
9999 run: its type is number
9999 mem: location 1589 is 1578
9999 mem: storing 1578 in location 1606
 106 run: reply result
9999 mem: location 1606 is 1578
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1578
9999 mem: storing 1578 in location 1330
 105 run: *undo <- rest *undo
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1589
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 1589 in location 1605
 106 run: result:address:list <- get *in, next:offset
9999 mem: location 1605 is 1589
9999 mem: location 1589 is 1578
9999 mem: location 1590 is 1576
9999 mem: location 1605 is 1589
9999 run: address to copy is 1590
9999 run: its type is address
9999 mem: location 1590 is 1576
9999 mem: storing 1576 in location 1606
 106 run: reply result
9999 mem: location 1606 is 1576
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1576
9999 mem: location 1331 is 1124
9999 mem: storing 1576 in location 1124
 105 run: redo:address:address:list <- get-address *editor, redo:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1329
 105 run: *redo/skiptypecheck <- push op, *redo
9999 mem: location 1330 is 1578
9999 mem: location 1329 is 1125
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: x:location <- next-ingredient 
9999 mem: storing 1578 in location 1183
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 0 in location 1184
 106 run: result:address:list <- new list:type
9999 mem: new alloc: 1607
9999 mem: storing 1607 in location 1185
 106 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1185 is 1607
9999 mem: location 1607 is 0
9999 mem: location 1608 is 0
9999 mem: location 1185 is 1607
9999 run: address to copy is 1607
9999 mem: storing 1607 in location 1186
 106 run: *val <- copy x
9999 mem: location 1183 is 1578
9999 mem: location 1186 is 1607
9999 mem: storing 1578 in location 1607
 106 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1185 is 1607
9999 mem: location 1607 is 1578
9999 mem: location 1608 is 0
9999 mem: location 1185 is 1607
9999 run: address to copy is 1608
9999 mem: storing 1608 in location 1187
 106 run: *next <- copy in
9999 mem: location 1184 is 0
9999 mem: location 1187 is 1608
9999 mem: storing 0 in location 1608
 106 run: reply result
9999 mem: location 1185 is 1607
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1607
9999 mem: location 1329 is 1125
9999 mem: storing 1607 in location 1125
 105 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1330 is 1578
9999 mem: location 1578 is 2
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1455
9999 mem: location 1588 is 2
9999 mem: location 1330 is 1578
9999 mem: storing 1579 in location 1332
 105 run: break-unless deletion, 
9999 mem: location 1332 is 1579
9999 run: jump-unless fell through
 105 run: start2:address:address:duplex-list <- get-address *editor, data:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 1313 is 1115
9999 run: address to copy is 1115
9999 mem: storing 1115 in location 1340
 105 run: anchor:address:duplex-list <- get *deletion, delete-from:offset
9999 mem: location 1332 is 1579
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1455
9999 mem: location 1588 is 2
9999 mem: location 1332 is 1579
9999 run: address to copy is 1586
9999 run: its type is address
9999 mem: location 1586 is 1427
9999 mem: storing 1427 in location 1341
 105 run: break-unless anchor, 
9999 mem: location 1341 is 1427
9999 run: jump-unless fell through
 105 run: deleted:address:duplex-list <- get *deletion, deleted-text:offset
9999 mem: location 1332 is 1579
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1455
9999 mem: location 1588 is 2
9999 mem: location 1332 is 1579
9999 run: address to copy is 1585
9999 run: its type is address
9999 mem: location 1585 is 1449
9999 mem: storing 1449 in location 1342
 105 run: old-cursor:address:duplex-list <- last-duplex deleted
9999 mem: location 1342 is 1449
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1593
 106 run: result:address:duplex-list <- copy in
9999 mem: location 1593 is 1449
9999 mem: storing 1449 in location 1594
 106 run: next:address:duplex-list <- next-duplex result
9999 mem: location 1594 is 1449
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1605
 107 run: jump-if in, 1:offset
9999 mem: location 1605 is 1449
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1605 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 0
9999 mem: location 1605 is 1449
9999 run: address to copy is 1450
9999 run: its type is address
9999 mem: location 1450 is 1452
9999 mem: storing 1452 in location 1606
 107 run: reply result
9999 mem: location 1606 is 1452
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1452
9999 mem: storing 1452 in location 1595
 106 run: break-unless next, 
9999 mem: location 1595 is 1452
9999 run: jump-unless fell through
 106 run: result <- copy next
9999 mem: location 1595 is 1452
9999 mem: storing 1452 in location 1594
 106 run: loop 
9999 run: jumping to instruction 4
 106 run: next:address:duplex-list <- next-duplex result
9999 mem: location 1594 is 1452
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1605
 107 run: jump-if in, 1:offset
9999 mem: location 1605 is 1452
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1605 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 0
9999 mem: location 1454 is 1449
9999 mem: location 1605 is 1452
9999 run: address to copy is 1453
9999 run: its type is address
9999 mem: location 1453 is 0
9999 mem: storing 0 in location 1606
 107 run: reply result
9999 mem: location 1606 is 0
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 0
9999 mem: storing 0 in location 1595
 106 run: break-unless next, 
9999 mem: location 1595 is 0
9999 run: jumping to instruction 8
 106 run: reply result
9999 mem: location 1594 is 1452
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1452
9999 mem: storing 1452 in location 1343
 105 run: insert-duplex-range anchor, deleted
9999 mem: location 1341 is 1427
9999 mem: location 1342 is 1449
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1183
 106 run: start:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1184
 106 run: jump-if in, 1:offset
9999 mem: location 1183 is 1427
9999 run: jumping to instruction 5
 106 run: jump-if start, 1:offset
9999 mem: location 1184 is 1449
9999 run: jumping to instruction 7
 106 run: end:address:duplex-list <- copy start
9999 mem: location 1184 is 1449
9999 mem: storing 1449 in location 1185
 106 run: next:address:duplex-list <- next-duplex end
9999 mem: location 1185 is 1449
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1605
 107 run: jump-if in, 1:offset
9999 mem: location 1605 is 1449
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1605 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 0
9999 mem: location 1605 is 1449
9999 run: address to copy is 1450
9999 run: its type is address
9999 mem: location 1450 is 1452
9999 mem: storing 1452 in location 1606
 107 run: reply result
9999 mem: location 1606 is 1452
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1452
9999 mem: storing 1452 in location 1186
 106 run: break-unless next, 
9999 mem: location 1186 is 1452
9999 run: jump-unless fell through
 106 run: end <- copy next
9999 mem: location 1186 is 1452
9999 mem: storing 1452 in location 1185
 106 run: loop 
9999 run: jumping to instruction 9
 106 run: next:address:duplex-list <- next-duplex end
9999 mem: location 1185 is 1452
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1605
 107 run: jump-if in, 1:offset
9999 mem: location 1605 is 1452
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1605 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 0
9999 mem: location 1454 is 1449
9999 mem: location 1605 is 1452
9999 run: address to copy is 1453
9999 run: its type is address
9999 mem: location 1453 is 0
9999 mem: storing 0 in location 1606
 107 run: reply result
9999 mem: location 1606 is 0
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 0
9999 mem: storing 0 in location 1186
 106 run: break-unless next, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 13
 106 run: next:address:duplex-list <- next-duplex in
9999 mem: location 1183 is 1427
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1605
 107 run: jump-if in, 1:offset
9999 mem: location 1605 is 1427
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1605 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1455
9999 mem: location 1429 is 1147
9999 mem: location 1605 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1455
9999 mem: storing 1455 in location 1606
 107 run: reply result
9999 mem: location 1606 is 1455
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1186
 106 run: dest:address:address:duplex-list <- get-address *end, next:offset
9999 mem: location 1185 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 0
9999 mem: location 1454 is 1449
9999 mem: location 1185 is 1452
9999 run: address to copy is 1453
9999 mem: storing 1453 in location 1187
 106 run: *dest <- copy next
9999 mem: location 1186 is 1455
9999 mem: location 1187 is 1453
9999 mem: storing 1455 in location 1453
 106 run: break-unless next, 
9999 mem: location 1186 is 1455
9999 run: jump-unless fell through
 106 run: dest <- get-address *next, prev:offset
9999 mem: location 1186 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1427
9999 mem: location 1186 is 1455
9999 run: address to copy is 1457
9999 mem: storing 1457 in location 1187
 106 run: *dest <- copy end
9999 mem: location 1185 is 1452
9999 mem: location 1187 is 1457
9999 mem: storing 1452 in location 1457
 106 run: dest <- get-address *in, next:offset
9999 mem: location 1183 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1455
9999 mem: location 1429 is 1147
9999 mem: location 1183 is 1427
9999 run: address to copy is 1428
9999 mem: storing 1428 in location 1187
 106 run: *dest <- copy start
9999 mem: location 1184 is 1449
9999 mem: location 1187 is 1428
9999 mem: storing 1449 in location 1428
 106 run: dest <- get-address *start, prev:offset
9999 mem: location 1184 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 0
9999 mem: location 1184 is 1449
9999 run: address to copy is 1451
9999 mem: storing 1451 in location 1187
 106 run: *dest <- copy in
9999 mem: location 1183 is 1427
9999 mem: location 1187 is 1451
9999 mem: storing 1427 in location 1451
 106 run: reply in
9999 mem: location 1183 is 1427
9999 trace: reply: decrementing callstack depth from 5
 105 run: *before-cursor <- copy old-cursor
9999 mem: location 1343 is 1452
9999 mem: location 1322 is 1118
9999 mem: storing 1452 in location 1118
 105 run: *cursor-row <- get *deletion, before-row:offset
9999 mem: location 1332 is 1579
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1455
9999 mem: location 1588 is 2
9999 mem: location 1332 is 1579
9999 run: address to copy is 1579
9999 run: its type is number
9999 mem: location 1579 is 1
9999 mem: location 1323 is 1121
9999 mem: storing 1 in location 1121
 105 run: *cursor-column <- get *deletion, before-column:offset
9999 mem: location 1332 is 1579
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1455
9999 mem: location 1588 is 2
9999 mem: location 1332 is 1579
9999 run: address to copy is 1580
9999 run: its type is number
9999 mem: location 1580 is 1
9999 mem: location 1324 is 1122
9999 mem: storing 1 in location 1122
 105 run: top:address:address:duplex-list <- get-address *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1335
 105 run: *top <- get *deletion, before-top-of-screen:offset
9999 mem: location 1332 is 1579
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1455
9999 mem: location 1588 is 2
9999 mem: location 1332 is 1579
9999 run: address to copy is 1581
9999 run: its type is address
9999 mem: location 1581 is 1147
9999 mem: location 1335 is 1116
9999 mem: storing 1147 in location 1116
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1330 is 1578
9999 mem: location 1578 is 2
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1455
9999 mem: location 1588 is 2
9999 mem: location 1330 is 1578
9999 mem: storing 0 in location 1336
 105 run: break-unless move, 
9999 mem: location 1336 is 0
9999 run: jumping to instruction 93
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1330 is 1578
9999 mem: location 1578 is 2
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1455
9999 mem: location 1588 is 2
9999 mem: location 1330 is 1578
9999 mem: storing 0 in location 1337
 105 run: break-unless typing, 
9999 mem: location 1337 is 0
9999 run: jumping to instruction 105
 105 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 1/go-render
9999 mem: location 1312 is 1009
9999 mem: location 1313 is 1115
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 1
9999 mem: storing 1009 in location 1297
9999 mem: storing 1115 in location 1299
9999 mem: storing 1 in location 1309
 104 run: break-unless go-render?, 
9999 mem: location 1309 is 1
9999 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1141
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1142
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1142 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 1142 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1143
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1142 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 1142 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1144
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1141 is 1009
9999 mem: location 1142 is 1115
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1152
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1153
 106 run: jump-if editor, 1:offset
9999 mem: location 1153 is 1115
9999 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 1153 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1154
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1152 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1605
 107 run: break-unless sc, 
9999 mem: location 1605 is 1009
9999 run: jump-unless fell through
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1605 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1605 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1606
 107 run: reply height
9999 mem: location 1606 is 5
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 5
9999 mem: storing 5 in location 1155
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 1153 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1156
 106 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 1153 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1157
 106 run: prev:address:duplex-list <- copy curr
9999 mem: location 1157 is 1147
9999 mem: storing 1147 in location 1158
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1147
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1147 in location 1605
 107 run: jump-if in, 1:offset
9999 mem: location 1605 is 1147
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1605 is 1147
9999 mem: location 1147 is 167
9999 mem: location 1148 is 1427
9999 mem: location 1149 is 0
9999 mem: location 1605 is 1147
9999 run: address to copy is 1148
9999 run: its type is address
9999 mem: location 1148 is 1427
9999 mem: storing 1427 in location 1606
 107 run: reply result
9999 mem: location 1606 is 1427
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1427
9999 mem: storing 1427 in location 1157
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1159
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1160
 106 run: column:number <- copy left
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1161
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 1153 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1162
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 1153 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1163
 106 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1452
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 1153 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1164
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1152 is 1009
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 107 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 107 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 107 run: *column <- copy new-column
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1152
 106 run: break-unless curr, 
9999 mem: location 1157 is 1427
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 0
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 0
9999 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1449
9999 mem: location 1429 is 1147
9999 mem: location 1157 is 1427
9999 run: address to copy is 1427
9999 run: its type is character
9999 mem: location 1427 is 97
9999 mem: storing 97 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 97
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1609
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 97
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 97
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 97
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 0
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 97
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 97
  90 print-character: 97 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 97
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 97
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 10
9999 mem: storing 1035 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1215 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 97
9999 mem: location 1216 is 1035
9999 mem: storing 97 in location 1035
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1215 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1036
9999 mem: storing 7 in location 1036
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1427
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1605
 107 run: jump-if in, 1:offset
9999 mem: location 1605 is 1427
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1605 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1449
9999 mem: location 1429 is 1147
9999 mem: location 1605 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1449
9999 mem: storing 1449 in location 1606
 107 run: reply result
9999 mem: location 1606 is 1449
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1449
9999 mem: storing 1449 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1147
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1147 in location 1605
 107 run: jump-if in, 1:offset
9999 mem: location 1605 is 1147
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1605 is 1147
9999 mem: location 1147 is 167
9999 mem: location 1148 is 1427
9999 mem: location 1149 is 0
9999 mem: location 1605 is 1147
9999 run: address to copy is 1148
9999 run: its type is address
9999 mem: location 1148 is 1427
9999 mem: storing 1427 in location 1606
 107 run: reply result
9999 mem: location 1606 is 1427
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1427
9999 mem: storing 1427 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 0
9999 mem: storing 1 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 1449
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 1
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 1
9999 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1158 is 1427
9999 mem: location 1164 is 1118
9999 mem: storing 1427 in location 1118
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1427
9999 mem: location 1157 is 1449
9999 run: address to copy is 1449
9999 run: its type is character
9999 mem: location 1449 is 100
9999 mem: storing 100 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 100
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 100
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 100
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 1
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 100
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 100
  90 print-character: 100 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 100
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 100
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 11
9999 mem: storing 1037 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1037
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1215 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 100
9999 mem: location 1216 is 1037
9999 mem: storing 100 in location 1037
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1037
9999 mem: location 1037 is 100
9999 mem: location 1038 is 7
9999 mem: location 1215 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1038
9999 mem: storing 7 in location 1038
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1449
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1605
 107 run: jump-if in, 1:offset
9999 mem: location 1605 is 1449
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1605 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1427
9999 mem: location 1605 is 1449
9999 run: address to copy is 1450
9999 run: its type is address
9999 mem: location 1450 is 1452
9999 mem: storing 1452 in location 1606
 107 run: reply result
9999 mem: location 1606 is 1452
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1452
9999 mem: storing 1452 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1427
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1605
 107 run: jump-if in, 1:offset
9999 mem: location 1605 is 1427
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1605 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1449
9999 mem: location 1429 is 1147
9999 mem: location 1605 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1449
9999 mem: storing 1449 in location 1606
 107 run: reply result
9999 mem: location 1606 is 1449
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1449
9999 mem: storing 1449 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 1
9999 mem: storing 2 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 1452
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 2
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 0
9999 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1157 is 1452
9999 run: address to copy is 1452
9999 run: its type is character
9999 mem: location 1452 is 101
9999 mem: storing 101 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 101
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 101
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 101
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 2
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 101
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 101
  90 print-character: 101 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 101
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 101
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 12
9999 mem: storing 1039 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 101
9999 mem: location 1216 is 1039
9999 mem: storing 101 in location 1039
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 101
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1040
9999 mem: storing 7 in location 1040
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1452
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1605
 107 run: jump-if in, 1:offset
9999 mem: location 1605 is 1452
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1605 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1605 is 1452
9999 run: address to copy is 1453
9999 run: its type is address
9999 mem: location 1453 is 1455
9999 mem: storing 1455 in location 1606
 107 run: reply result
9999 mem: location 1606 is 1455
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1449
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1605
 107 run: jump-if in, 1:offset
9999 mem: location 1605 is 1449
9999 run: jumping to instruction 4
9999 schedule: next-duplex/render/editor-render/editor-event-loop/run1001/scenario-editor-can-undo-and-redo-delete
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1605 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1427
9999 mem: location 1605 is 1449
9999 run: address to copy is 1450
9999 run: its type is address
9999 mem: location 1450 is 1452
9999 mem: storing 1452 in location 1606
 107 run: reply result
9999 mem: location 1606 is 1452
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1452
9999 mem: storing 1452 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 2
9999 mem: storing 3 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 1455
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 3
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 0
9999 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1157 is 1455
9999 run: address to copy is 1455
9999 run: its type is character
9999 mem: location 1455 is 102
9999 mem: storing 102 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 102
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 102
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 102
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 3
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 102
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 102
  90 print-character: 102 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 102
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 102
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 13
9999 mem: storing 1041 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1215 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 102
9999 mem: location 1216 is 1041
9999 mem: storing 102 in location 1041
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1041
9999 mem: location 1041 is 102
9999 mem: location 1042 is 7
9999 mem: location 1215 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1042
9999 mem: storing 7 in location 1042
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1455
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1455 in location 1605
 107 run: jump-if in, 1:offset
9999 mem: location 1605 is 1455
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1605 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1605 is 1455
9999 run: address to copy is 1456
9999 run: its type is address
9999 mem: location 1456 is 0
9999 mem: storing 0 in location 1606
 107 run: reply result
9999 mem: location 1606 is 0
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 0
9999 mem: storing 0 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1452
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1605
 107 run: jump-if in, 1:offset
9999 mem: location 1605 is 1452
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1605 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1605 is 1452
9999 run: address to copy is 1453
9999 run: its type is address
9999 mem: location 1453 is 1455
9999 mem: storing 1455 in location 1606
 107 run: reply result
9999 mem: location 1606 is 1455
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 3
9999 mem: storing 4 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 0
9999 run: jumping to instruction 67
 106 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 1153 is 1115
9999 run: address to copy is 1117
9999 mem: storing 1117 in location 1172
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1157 is 0
9999 mem: location 1172 is 1117
9999 mem: storing 0 in location 1117
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1161 is 4
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1173
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1166 is 1
9999 mem: location 1173 is 0
9999 mem: storing 0 in location 1174
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1175
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: storing 0 in location 1176
 106 run: break-unless before-cursor?, 
9999 mem: location 1176 is 0
9999 run: jumping to instruction 80
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1152 is 1009
9999 mem: location 1153 is 1115
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1
9999 run: result 1 is 4
9999 mem: storing 1 in location 1145
9999 mem: storing 4 in location 1146
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1141 is 1009
9999 mem: location 1146 is 4
9999 mem: location 1144 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1190
 106 run: column:number <- next-ingredient 
9999 mem: storing 4 in location 1191
 106 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1192
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 4
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 14
9999 mem: storing 1043 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1215 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1043
9999 mem: storing 32 in location 1043
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1215 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1044
9999 mem: storing 7 in location 1044
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 4
9999 mem: storing 5 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 5
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 15
9999 mem: storing 1045 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1215 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1045
9999 mem: storing 32 in location 1045
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1215 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1046
9999 mem: storing 7 in location 1046
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 5
9999 mem: storing 6 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 6
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 16
9999 mem: storing 1047 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1215 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1047
9999 mem: storing 32 in location 1047
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1215 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1048
9999 mem: storing 7 in location 1048
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 6
9999 mem: storing 7 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 7
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 17 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 17
9999 mem: storing 1049 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1215 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1049
9999 mem: storing 32 in location 1049
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1215 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1050
9999 mem: storing 7 in location 1050
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 7
9999 mem: storing 8 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 8
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 18 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 18
9999 mem: storing 1051 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1215 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1051
9999 mem: storing 32 in location 1051
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1215 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1052
9999 mem: storing 7 in location 1052
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 8
9999 mem: storing 9 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 9
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 19 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 19
9999 mem: storing 1053 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1215 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1053
9999 mem: storing 32 in location 1053
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1215 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1054
9999 mem: storing 7 in location 1054
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 9
9999 mem: storing 10 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 10
9999 mem: location 1192 is 9
9999 mem: storing 1 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 1
9999 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1145 is 1
9999 mem: storing 2 in location 1145
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1141 is 1009
9999 mem: location 1145 is 2
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1222
 106 run: row:number <- next-ingredient 
9999 mem: storing 2 in location 1223
 106 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 1224
 106 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1225
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1226
9999 mem: storing 1 in location 1227
 106 run: break-if style-found?, 
9999 mem: location 1227 is 1
9999 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1228
9999 mem: storing 0 in location 1229
 106 run: break-if color-found?, 
9999 mem: location 1229 is 0
9999 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1228
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 106 run: break-if bg-color-found?, 
9999 mem: location 1231 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1230
9999 schedule: draw-horizontal/editor-render/editor-event-loop/run1001/scenario-editor-can-undo-and-redo-delete
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1222 is 1009
9999 mem: location 1223 is 2
9999 mem: location 1224 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1184
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 107 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 107 run: *row <- copy new-row
9999 mem: location 1184 is 2
9999 mem: location 1186 is 1011
9999 mem: storing 2 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 107 run: *column <- copy new-column
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1222
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 0
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 20
9999 mem: storing 1055 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1055
9999 mem: location 1055 is 9480
9999 mem: location 1056 is 245
9999 mem: location 1215 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1055
9999 mem: storing 9480 in location 1055
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1055
9999 mem: location 1055 is 9480
9999 mem: location 1056 is 245
9999 mem: location 1215 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1056
9999 mem: storing 245 in location 1056
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 0
9999 mem: storing 1 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 1
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 21
9999 mem: storing 1057 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1057
9999 mem: location 1057 is 9480
9999 mem: location 1058 is 245
9999 mem: location 1215 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1057
9999 mem: storing 9480 in location 1057
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1057
9999 mem: location 1057 is 9480
9999 mem: location 1058 is 245
9999 mem: location 1215 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1058
9999 mem: storing 245 in location 1058
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 1
9999 mem: storing 2 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 2
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 22
9999 mem: storing 1059 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1059
9999 mem: location 1059 is 9480
9999 mem: location 1060 is 245
9999 mem: location 1215 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1059
9999 mem: storing 9480 in location 1059
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1059
9999 mem: location 1059 is 9480
9999 mem: location 1060 is 245
9999 mem: location 1215 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1060
9999 mem: storing 245 in location 1060
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 2
9999 mem: storing 3 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 3
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 23
9999 mem: storing 1061 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1061
9999 mem: location 1061 is 9480
9999 mem: location 1062 is 245
9999 mem: location 1215 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1061
9999 mem: storing 9480 in location 1061
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1061
9999 mem: location 1061 is 9480
9999 mem: location 1062 is 245
9999 mem: location 1215 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1062
9999 mem: storing 245 in location 1062
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 3
9999 mem: storing 4 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 4
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 24
9999 mem: storing 1063 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1063
9999 mem: location 1063 is 9480
9999 mem: location 1064 is 245
9999 mem: location 1215 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1063
9999 mem: storing 9480 in location 1063
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1063
9999 mem: location 1063 is 9480
9999 mem: location 1064 is 245
9999 mem: location 1215 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1064
9999 mem: storing 245 in location 1064
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 4
9999 mem: storing 5 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 5
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 25 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 25
9999 mem: storing 1065 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1065
9999 mem: location 1065 is 9480
9999 mem: location 1066 is 245
9999 mem: location 1215 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1065
9999 mem: storing 9480 in location 1065
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1065
9999 mem: location 1065 is 9480
9999 mem: location 1066 is 245
9999 mem: location 1215 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1066
9999 mem: storing 245 in location 1066
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 5
9999 mem: storing 6 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 6
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 26 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 26
9999 mem: storing 1067 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1067
9999 mem: location 1067 is 9480
9999 mem: location 1068 is 245
9999 mem: location 1215 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1067
9999 mem: storing 9480 in location 1067
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1067
9999 mem: location 1067 is 9480
9999 mem: location 1068 is 245
9999 mem: location 1215 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1068
9999 mem: storing 245 in location 1068
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 6
9999 mem: storing 7 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 7
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 27 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 27
9999 mem: storing 1069 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1069
9999 mem: location 1069 is 9480
9999 mem: location 1070 is 245
9999 mem: location 1215 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1069
9999 mem: storing 9480 in location 1069
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1069
9999 mem: location 1069 is 9480
9999 mem: location 1070 is 245
9999 mem: location 1215 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1070
9999 mem: storing 245 in location 1070
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 7
9999 mem: storing 8 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 8
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 28 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 28
9999 mem: storing 1071 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1071
9999 mem: location 1071 is 9480
9999 mem: location 1072 is 245
9999 mem: location 1215 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1071
9999 mem: storing 9480 in location 1071
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1071
9999 mem: location 1071 is 9480
9999 mem: location 1072 is 245
9999 mem: location 1215 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1072
9999 mem: storing 245 in location 1072
9999 schedule: print-character/draw-horizontal/editor-render/editor-event-loop/run1001/scenario-editor-can-undo-and-redo-delete
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 8
9999 mem: storing 9 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 9
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 29 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 29
9999 mem: storing 1073 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1073
9999 mem: location 1073 is 9480
9999 mem: location 1074 is 245
9999 mem: location 1215 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1073
9999 mem: storing 9480 in location 1073
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1073
9999 mem: location 1073 is 9480
9999 mem: location 1074 is 245
9999 mem: location 1215 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1074
9999 mem: storing 245 in location 1074
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 9
9999 mem: storing 10 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 10
9999 mem: location 1225 is 9
9999 mem: storing 0 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 27
9999 trace: fall-through: exiting draw-horizontal; decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1145 is 2
9999 mem: storing 3 in location 1145
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1141 is 1009
9999 mem: location 1145 is 3
9999 mem: location 1143 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1183
 106 run: row:number <- next-ingredient 
9999 mem: storing 3 in location 1184
 106 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 106 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1186
 106 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1187
 106 run: break-if screen, 
9999 mem: location 1183 is 1009
9999 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1183 is 1009
9999 mem: location 1184 is 3
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1236
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1237
 107 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1238
 107 run: *row <- copy new-row
9999 mem: location 1236 is 3
9999 mem: location 1238 is 1011
9999 mem: storing 3 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 107 run: *column <- copy new-column
9999 mem: location 1237 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1183
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1183 is 1009
9999 mem: location 1185 is 0
9999 mem: location 1187 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 107 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1190
 107 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1191
 107 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1192
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 0
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 30
9999 mem: storing 1075 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1075
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1215 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1075
9999 mem: storing 32 in location 1075
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1075
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1215 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1076
9999 mem: storing 7 in location 1076
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 0
9999 mem: storing 1 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 1
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 31
9999 mem: storing 1077 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1215 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1077
9999 mem: storing 32 in location 1077
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1215 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1078
9999 mem: storing 7 in location 1078
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 1
9999 mem: storing 2 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 2
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 32
9999 mem: storing 1079 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1215 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1079
9999 mem: storing 32 in location 1079
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1215 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1080
9999 mem: storing 7 in location 1080
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 2
9999 mem: storing 3 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 3
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 33
9999 mem: storing 1081 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1215 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1081
9999 mem: storing 32 in location 1081
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1215 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1082
9999 mem: storing 7 in location 1082
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 3
9999 mem: storing 4 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 4
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 34
9999 mem: storing 1083 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1215 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1083
9999 mem: storing 32 in location 1083
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1215 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1084
9999 mem: storing 7 in location 1084
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 4
9999 mem: storing 5 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 5
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 35 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 35
9999 mem: storing 1085 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1085
9999 mem: location 1085 is 32
9999 mem: location 1086 is 7
9999 mem: location 1215 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1085
9999 mem: storing 32 in location 1085
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1085
9999 mem: location 1085 is 32
9999 mem: location 1086 is 7
9999 mem: location 1215 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1086
9999 mem: storing 7 in location 1086
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 5
9999 mem: storing 6 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 6
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 36 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 36
9999 mem: storing 1087 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1087
9999 mem: location 1087 is 32
9999 mem: location 1088 is 7
9999 mem: location 1215 is 1087
9999 run: address to copy is 1087
9999 mem: storing 1087 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1087
9999 mem: storing 32 in location 1087
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1087
9999 mem: location 1087 is 32
9999 mem: location 1088 is 7
9999 mem: location 1215 is 1087
9999 run: address to copy is 1088
9999 mem: storing 1088 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1088
9999 mem: storing 7 in location 1088
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 6
9999 mem: storing 7 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 7
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
9999 schedule: print-character/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run1001/scenario-editor-can-undo-and-redo-delete
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 37 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 37
9999 mem: storing 1089 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1089
9999 mem: location 1089 is 32
9999 mem: location 1090 is 7
9999 mem: location 1215 is 1089
9999 run: address to copy is 1089
9999 mem: storing 1089 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1089
9999 mem: storing 32 in location 1089
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1089
9999 mem: location 1089 is 32
9999 mem: location 1090 is 7
9999 mem: location 1215 is 1089
9999 run: address to copy is 1090
9999 mem: storing 1090 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1090
9999 mem: storing 7 in location 1090
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 7
9999 mem: storing 8 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 8
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 38 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 38
9999 mem: storing 1091 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1091
9999 mem: location 1091 is 32
9999 mem: location 1092 is 7
9999 mem: location 1215 is 1091
9999 run: address to copy is 1091
9999 mem: storing 1091 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1091
9999 mem: storing 32 in location 1091
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1091
9999 mem: location 1091 is 32
9999 mem: location 1092 is 7
9999 mem: location 1215 is 1091
9999 run: address to copy is 1092
9999 mem: storing 1092 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1092
9999 mem: storing 7 in location 1092
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 8
9999 mem: storing 9 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 9
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 39 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 39
9999 mem: storing 1093 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1093
9999 mem: location 1093 is 32
9999 mem: location 1094 is 7
9999 mem: location 1215 is 1093
9999 run: address to copy is 1093
9999 mem: storing 1093 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1093
9999 mem: storing 32 in location 1093
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1093
9999 mem: location 1093 is 32
9999 mem: location 1094 is 7
9999 mem: location 1215 is 1093
9999 run: address to copy is 1094
9999 mem: storing 1094 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1094
9999 mem: storing 7 in location 1094
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 9
9999 mem: storing 10 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 10
9999 mem: location 1192 is 9
9999 mem: storing 1 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 1
9999 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1183 is 1009
9999 mem: location 1184 is 3
9999 mem: location 1186 is 0
9999 mem: location 1187 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 107 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1242
 107 run: row:number <- next-ingredient 
9999 mem: storing 3 in location 1243
 107 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1244
 107 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1245
 107 run: row <- add row, 1
9999 mem: location 1243 is 3
9999 mem: storing 4 in location 1243
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1242 is 1009
9999 mem: location 1243 is 4
9999 mem: location 1244 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 108 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1236
 108 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1237
 108 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1238
 108 run: *row <- copy new-row
9999 mem: location 1236 is 4
9999 mem: location 1238 is 1011
9999 mem: storing 4 in location 1011
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: *column <- copy new-column
9999 mem: location 1237 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 0 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
9999 trace: reply: decrementing callstack depth from 7
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1242
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1242 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1605
 108 run: break-unless sc, 
9999 mem: location 1605 is 1009
9999 run: jump-unless fell through
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1605 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1605 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1606
 108 run: reply height
9999 mem: location 1606 is 5
9999 trace: reply: decrementing callstack depth from 7
9999 run: result 0 is 5
9999 mem: storing 5 in location 1246
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1243 is 4
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1247
 107 run: break-if at-bottom-of-screen?, 
9999 mem: location 1247 is 0
9999 run: jump-if fell through
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1242 is 1009
9999 mem: location 1243 is 4
9999 mem: location 1244 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 108 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1236
 108 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1237
 108 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1238
 108 run: *row <- copy new-row
9999 mem: location 1236 is 4
9999 mem: location 1238 is 1011
9999 mem: storing 4 in location 1011
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: *column <- copy new-column
9999 mem: location 1237 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 0 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
9999 trace: reply: decrementing callstack depth from 7
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1242
 107 run: clear-line-delimited screen, left, right
9999 mem: location 1242 is 1009
9999 mem: location 1244 is 0
9999 mem: location 1245 is 9
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 108 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1190
 108 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1191
 108 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1192
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 0
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 40
9999 mem: storing 1095 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1095
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1215 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1095
9999 mem: storing 32 in location 1095
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1095
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1215 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1096
9999 mem: storing 7 in location 1096
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 0
9999 mem: storing 1 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 1
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 41
9999 mem: storing 1097 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1215 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1097
9999 mem: storing 32 in location 1097
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1215 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1098
9999 mem: storing 7 in location 1098
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 1
9999 mem: storing 2 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 2
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 42
9999 mem: storing 1099 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1215 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1099
9999 mem: storing 32 in location 1099
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1215 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1100
9999 mem: storing 7 in location 1100
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 2
9999 mem: storing 3 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 3
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 43
9999 mem: storing 1101 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1215 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1101
9999 mem: storing 32 in location 1101
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1215 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1102
9999 mem: storing 7 in location 1102
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 3
9999 mem: storing 4 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 4
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 44
9999 mem: storing 1103 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1215 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1103
9999 mem: storing 32 in location 1103
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1215 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1104
9999 mem: storing 7 in location 1104
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 4
9999 mem: storing 5 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 5
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
9999 schedule: clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run1001/scenario-editor-can-undo-and-redo-delete
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 45 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 45
9999 mem: storing 1105 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1105
9999 mem: location 1105 is 32
9999 mem: location 1106 is 7
9999 mem: location 1215 is 1105
9999 run: address to copy is 1105
9999 mem: storing 1105 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1105
9999 mem: storing 32 in location 1105
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1105
9999 mem: location 1105 is 32
9999 mem: location 1106 is 7
9999 mem: location 1215 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1106
9999 mem: storing 7 in location 1106
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 5
9999 mem: storing 6 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 6
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 46 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 46
9999 mem: storing 1107 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1107
9999 mem: location 1107 is 32
9999 mem: location 1108 is 7
9999 mem: location 1215 is 1107
9999 run: address to copy is 1107
9999 mem: storing 1107 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1107
9999 mem: storing 32 in location 1107
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1107
9999 mem: location 1107 is 32
9999 mem: location 1108 is 7
9999 mem: location 1215 is 1107
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1108
9999 mem: storing 7 in location 1108
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 6
9999 mem: storing 7 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 7
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 47 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 47
9999 mem: storing 1109 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1109
9999 mem: location 1109 is 32
9999 mem: location 1110 is 7
9999 mem: location 1215 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1109
9999 mem: storing 32 in location 1109
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1109
9999 mem: location 1109 is 32
9999 mem: location 1110 is 7
9999 mem: location 1215 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1110
9999 mem: storing 7 in location 1110
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 7
9999 mem: storing 8 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 8
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 48 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 48
9999 mem: storing 1111 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1111
9999 mem: location 1111 is 32
9999 mem: location 1112 is 7
9999 mem: location 1215 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1111
9999 mem: storing 32 in location 1111
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1111
9999 mem: location 1111 is 32
9999 mem: location 1112 is 7
9999 mem: location 1215 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1112
9999 mem: storing 7 in location 1112
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 8
9999 mem: storing 9 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 9
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 49 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 49
9999 mem: storing 1113 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1113
9999 mem: location 1113 is 32
9999 mem: location 1114 is 7
9999 mem: location 1215 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1113
9999 mem: storing 32 in location 1113
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1113
9999 mem: location 1113 is 32
9999 mem: location 1114 is 7
9999 mem: location 1215 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1114
9999 mem: storing 7 in location 1114
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 9
9999 mem: storing 10 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 10
9999 mem: location 1192 is 9
9999 mem: storing 1 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 1
9999 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 7
 107 run: row <- add row, 1
9999 mem: location 1243 is 4
9999 mem: storing 5 in location 1243
 107 run: loop 
9999 run: jumping to instruction 9
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1243 is 5
9999 mem: location 1246 is 5
9999 mem: storing 1 in location 1247
 107 run: break-if at-bottom-of-screen?, 
9999 mem: location 1247 is 1
9999 run: jumping to instruction 15
9999 trace: fall-through: exiting clear-rest-of-screen; decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 trace: fall-through: exiting editor-render; decrementing callstack depth from 4
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1301
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1185
 105 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 105 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 105 run: *column <- copy new-column
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 104 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1601
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1601 in location 1222
 105 run: break-unless x, 
9999 mem: location 1222 is 1601
9999 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1601
9999 mem: location 1601 is 1
9999 mem: location 1602 is 1596
9999 mem: location 1222 is 1601
9999 run: address to copy is 1601
9999 mem: storing 1601 in location 1223
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1601
9999 mem: location 1601 is 1
9999 mem: location 1602 is 1596
9999 mem: location 1222 is 1601
9999 run: address to copy is 1602
9999 run: its type is address
9999 mem: location 1602 is 1596
9999 mem: storing 1596 in location 1224
 105 run: max:number <- length *buf
9999 mem: location 1224 is 1596
9999 mem: storing 1 in location 1225
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1601
9999 mem: location 1601 is 1
9999 mem: location 1225 is 1
9999 mem: storing 1 in location 1226
 105 run: break-unless done?, 
9999 mem: location 1226 is 1
9999 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1603 in location 1227
 105 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1227 is 1603
9999 mem: location 1603 is 0
9999 mem: location 1604 is 0
9999 mem: location 1605 is 0
9999 mem: location 1606 is 0
9999 mem: location 1222 is 1601
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1601
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1601 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 1 in location 1307
 104 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 104 run: break-if quit?, 
9999 mem: location 1307 is 1
9999 run: jumping to instruction 28
9999 trace: fall-through: exiting editor-event-loop; decrementing callstack depth from 3
9999 trace: fall-through: exiting run1001; decrementing callstack depth from 2
 102 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 2 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 3
 102 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 2 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 4
 102 run: memory-should-contain [
    3 <- 1
    4 <- 1
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: screen-should-contain [
    .          .
    .adef      .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: assume-console [
    press ctrl-z
  ]
9999 parse: instruction: press
9999 parse:   ingredient: {"ctrl-z": <>}
 102 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
9999 parse: instruction: editor-event-loop
9999 parse:   ingredient: {"screen": "address"}
9999 parse:   ingredient: {"console": "address"}
9999 parse:   ingredient: {"2": <"address" : "editor-data">}
9999 after-brace: recipe run1002
9999 after-brace: editor-event-loop ...
9999 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1625
9999 mem: location 2 is 1115
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1297
 104 run: console:address <- next-ingredient 
9999 mem: storing 1625 in location 1298
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1299
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1301
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1185
 105 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 105 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 105 run: *column <- copy new-column
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 104 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1625
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1625 in location 1222
 105 run: break-unless x, 
9999 mem: location 1222 is 1625
9999 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1625
9999 mem: location 1625 is 0
9999 mem: location 1626 is 1620
9999 mem: location 1222 is 1625
9999 run: address to copy is 1625
9999 mem: storing 1625 in location 1223
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1625
9999 mem: location 1625 is 0
9999 mem: location 1626 is 1620
9999 mem: location 1222 is 1625
9999 run: address to copy is 1626
9999 run: its type is address
9999 mem: location 1626 is 1620
9999 mem: storing 1620 in location 1224
 105 run: max:number <- length *buf
9999 mem: location 1224 is 1620
9999 mem: storing 1 in location 1225
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1625
9999 mem: location 1625 is 0
9999 mem: location 1225 is 1
9999 mem: storing 0 in location 1226
 105 run: break-unless done?, 
9999 mem: location 1226 is 0
9999 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1224 is 1620
9999 mem: location 1223 is 1625
9999 mem: location 1625 is 0
9999 run: address to copy is 1621
9999 run: its type is event
9999 mem: location 1621 is 0
9999 mem: location 1622 is 26
9999 mem: location 1623 is 0
9999 mem: location 1624 is 0
9999 mem: storing 0 in location 1228
9999 mem: storing 26 in location 1229
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 105 run: *idx <- add *idx, 1
9999 mem: location 1223 is 1625
9999 mem: location 1625 is 0
9999 mem: location 1223 is 1625
9999 mem: storing 1 in location 1625
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1228 is 0
9999 mem: location 1229 is 26
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1222 is 1625
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is [0, 26, 0, 0]
9999 run: result 1 is 1625
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1302
9999 mem: storing 26 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1625 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 0 in location 1307
 104 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 104 run: break-if quit?, 
9999 mem: location 1307 is 0
9999 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1302 is 0
9999 mem: location 1303 is 26
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: storing 0 in location 1308
 104 run: break-unless t, 
9999 mem: location 1308 is 0
9999 run: jumping to instruction 18
 104 run: break-if t, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 mem: location 1302 is 0
9999 mem: location 1303 is 26
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1312
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1313
 105 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1314
9999 mem: storing 26 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
 105 run: jump-if editor, 1:offset
9999 mem: location 1313 is 1115
9999 run: jumping to instruction 6
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1627
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1629
 106 run: break-unless sc, 
9999 mem: location 1629 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1629 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1629 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1630
 106 run: reply width
9999 mem: location 1630 is 10
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 10
9999 mem: storing 10 in location 1318
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1629
 106 run: break-unless sc, 
9999 mem: location 1629 is 1009
9999 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1629 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1629 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1630
 106 run: reply height
9999 mem: location 1630 is 5
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1319
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 1313 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1320
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 1313 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1321
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 1313 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1322
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 1313 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1323
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 1313 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1324
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1325
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1326
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1314 is 0
9999 mem: location 1315 is 26
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 1315 in location 1327
 105 run: break-unless c, 
9999 mem: location 1327 is 1315
9999 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 26
9999 mem: storing 0 in location 1328
 105 run: break-unless redo?, 
9999 mem: location 1328 is 0
9999 run: jumping to instruction 60
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 26
9999 mem: storing 1 in location 1339
 105 run: break-unless undo?, 
9999 mem: location 1339 is 1
9999 run: jump-unless fell through
 105 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1576
9999 mem: location 1125 is 1607
9999 mem: location 1313 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1331
 105 run: break-unless *undo, 
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1576
9999 run: jump-unless fell through
 105 run: op:address:operation/skiptypecheck <- first *undo
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1576
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 1576 in location 1629
 106 run: result:location <- get *in, value:offset
9999 mem: location 1629 is 1576
9999 mem: location 1576 is 1565
9999 mem: location 1577 is 1525
9999 mem: location 1629 is 1576
9999 run: address to copy is 1576
9999 run: its type is number
9999 mem: location 1576 is 1565
9999 mem: storing 1565 in location 1630
 106 run: reply result
9999 mem: location 1630 is 1565
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1565
9999 mem: storing 1565 in location 1330
 105 run: *undo <- rest *undo
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1576
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 1576 in location 1629
 106 run: result:address:list <- get *in, next:offset
9999 mem: location 1629 is 1576
9999 mem: location 1576 is 1565
9999 mem: location 1577 is 1525
9999 mem: location 1629 is 1576
9999 run: address to copy is 1577
9999 run: its type is address
9999 mem: location 1577 is 1525
9999 mem: storing 1525 in location 1630
 106 run: reply result
9999 mem: location 1630 is 1525
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1525
9999 mem: location 1331 is 1124
9999 mem: storing 1525 in location 1124
 105 run: redo:address:address:list <- get-address *editor, redo:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1607
9999 mem: location 1313 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1329
 105 run: *redo/skiptypecheck <- push op, *redo
9999 mem: location 1330 is 1565
9999 mem: location 1329 is 1125
9999 mem: location 1125 is 1607
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: x:location <- next-ingredient 
9999 mem: storing 1565 in location 1183
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 1607 in location 1184
 106 run: result:address:list <- new list:type
9999 mem: new alloc: 1631
9999 mem: storing 1631 in location 1185
 106 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1185 is 1631
9999 mem: location 1631 is 0
9999 mem: location 1632 is 0
9999 mem: location 1185 is 1631
9999 run: address to copy is 1631
9999 mem: storing 1631 in location 1186
 106 run: *val <- copy x
9999 mem: location 1183 is 1565
9999 mem: location 1186 is 1631
9999 mem: storing 1565 in location 1631
 106 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1185 is 1631
9999 mem: location 1631 is 1565
9999 mem: location 1632 is 0
9999 mem: location 1185 is 1631
9999 run: address to copy is 1632
9999 mem: storing 1632 in location 1187
 106 run: *next <- copy in
9999 mem: location 1184 is 1607
9999 mem: location 1187 is 1632
9999 mem: storing 1607 in location 1632
 106 run: reply result
9999 mem: location 1185 is 1631
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1631
9999 mem: location 1329 is 1125
9999 mem: storing 1631 in location 1125
 105 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1330 is 1565
9999 mem: location 1565 is 2
9999 mem: location 1566 is 1
9999 mem: location 1567 is 2
9999 mem: location 1568 is 1147
9999 mem: location 1569 is 1
9999 mem: location 1570 is 1
9999 mem: location 1571 is 1147
9999 mem: location 1572 is 1443
9999 mem: location 1573 is 1427
9999 mem: location 1574 is 1449
9999 mem: location 1575 is 1
9999 mem: location 1330 is 1565
9999 mem: storing 1566 in location 1332
 105 run: break-unless deletion, 
9999 mem: location 1332 is 1566
9999 run: jump-unless fell through
 105 run: start2:address:address:duplex-list <- get-address *editor, data:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 1313 is 1115
9999 run: address to copy is 1115
9999 mem: storing 1115 in location 1340
 105 run: anchor:address:duplex-list <- get *deletion, delete-from:offset
9999 mem: location 1332 is 1566
9999 mem: location 1566 is 1
9999 mem: location 1567 is 2
9999 mem: location 1568 is 1147
9999 mem: location 1569 is 1
9999 mem: location 1570 is 1
9999 mem: location 1571 is 1147
9999 mem: location 1572 is 1443
9999 mem: location 1573 is 1427
9999 mem: location 1574 is 1449
9999 mem: location 1575 is 1
9999 mem: location 1332 is 1566
9999 run: address to copy is 1573
9999 run: its type is address
9999 mem: location 1573 is 1427
9999 mem: storing 1427 in location 1341
 105 run: break-unless anchor, 
9999 mem: location 1341 is 1427
9999 run: jump-unless fell through
 105 run: deleted:address:duplex-list <- get *deletion, deleted-text:offset
9999 mem: location 1332 is 1566
9999 mem: location 1566 is 1
9999 mem: location 1567 is 2
9999 mem: location 1568 is 1147
9999 mem: location 1569 is 1
9999 mem: location 1570 is 1
9999 mem: location 1571 is 1147
9999 mem: location 1572 is 1443
9999 mem: location 1573 is 1427
9999 mem: location 1574 is 1449
9999 mem: location 1575 is 1
9999 mem: location 1332 is 1566
9999 run: address to copy is 1572
9999 run: its type is address
9999 mem: location 1572 is 1443
9999 mem: storing 1443 in location 1342
 105 run: old-cursor:address:duplex-list <- last-duplex deleted
9999 mem: location 1342 is 1443
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1593
 106 run: result:address:duplex-list <- copy in
9999 mem: location 1593 is 1443
9999 mem: storing 1443 in location 1594
 106 run: next:address:duplex-list <- next-duplex result
9999 mem: location 1594 is 1443
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1629
 107 run: jump-if in, 1:offset
9999 mem: location 1629 is 1443
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1629 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 0
9999 mem: location 1445 is 0
9999 mem: location 1629 is 1443
9999 run: address to copy is 1444
9999 run: its type is address
9999 mem: location 1444 is 0
9999 mem: storing 0 in location 1630
 107 run: reply result
9999 mem: location 1630 is 0
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 0
9999 mem: storing 0 in location 1595
 106 run: break-unless next, 
9999 mem: location 1595 is 0
9999 run: jumping to instruction 8
 106 run: reply result
9999 mem: location 1594 is 1443
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1443
9999 mem: storing 1443 in location 1343
 105 run: insert-duplex-range anchor, deleted
9999 mem: location 1341 is 1427
9999 mem: location 1342 is 1443
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1183
 106 run: start:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1184
 106 run: jump-if in, 1:offset
9999 mem: location 1183 is 1427
9999 run: jumping to instruction 5
 106 run: jump-if start, 1:offset
9999 mem: location 1184 is 1443
9999 run: jumping to instruction 7
 106 run: end:address:duplex-list <- copy start
9999 mem: location 1184 is 1443
9999 mem: storing 1443 in location 1185
 106 run: next:address:duplex-list <- next-duplex end
9999 mem: location 1185 is 1443
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1629
 107 run: jump-if in, 1:offset
9999 mem: location 1629 is 1443
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1629 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 0
9999 mem: location 1445 is 0
9999 mem: location 1629 is 1443
9999 run: address to copy is 1444
9999 run: its type is address
9999 mem: location 1444 is 0
9999 mem: storing 0 in location 1630
 107 run: reply result
9999 mem: location 1630 is 0
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 0
9999 mem: storing 0 in location 1186
 106 run: break-unless next, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 13
 106 run: next:address:duplex-list <- next-duplex in
9999 mem: location 1183 is 1427
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1629
 107 run: jump-if in, 1:offset
9999 mem: location 1629 is 1427
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1629 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1449
9999 mem: location 1429 is 1147
9999 mem: location 1629 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1449
9999 mem: storing 1449 in location 1630
 107 run: reply result
9999 mem: location 1630 is 1449
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1449
9999 mem: storing 1449 in location 1186
 106 run: dest:address:address:duplex-list <- get-address *end, next:offset
9999 mem: location 1185 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 0
9999 mem: location 1445 is 0
9999 mem: location 1185 is 1443
9999 run: address to copy is 1444
9999 mem: storing 1444 in location 1187
 106 run: *dest <- copy next
9999 mem: location 1186 is 1449
9999 mem: location 1187 is 1444
9999 mem: storing 1449 in location 1444
 106 run: break-unless next, 
9999 mem: location 1186 is 1449
9999 run: jump-unless fell through
 106 run: dest <- get-address *next, prev:offset
9999 mem: location 1186 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1427
9999 mem: location 1186 is 1449
9999 run: address to copy is 1451
9999 mem: storing 1451 in location 1187
 106 run: *dest <- copy end
9999 mem: location 1185 is 1443
9999 mem: location 1187 is 1451
9999 mem: storing 1443 in location 1451
 106 run: dest <- get-address *in, next:offset
9999 mem: location 1183 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1449
9999 mem: location 1429 is 1147
9999 mem: location 1183 is 1427
9999 run: address to copy is 1428
9999 mem: storing 1428 in location 1187
 106 run: *dest <- copy start
9999 mem: location 1184 is 1443
9999 mem: location 1187 is 1428
9999 mem: storing 1443 in location 1428
 106 run: dest <- get-address *start, prev:offset
9999 mem: location 1184 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1449
9999 mem: location 1445 is 0
9999 mem: location 1184 is 1443
9999 run: address to copy is 1445
9999 mem: storing 1445 in location 1187
 106 run: *dest <- copy in
9999 mem: location 1183 is 1427
9999 mem: location 1187 is 1445
9999 mem: storing 1427 in location 1445
 106 run: reply in
9999 mem: location 1183 is 1427
9999 trace: reply: decrementing callstack depth from 5
 105 run: *before-cursor <- copy old-cursor
9999 mem: location 1343 is 1443
9999 mem: location 1322 is 1118
9999 mem: storing 1443 in location 1118
 105 run: *cursor-row <- get *deletion, before-row:offset
9999 mem: location 1332 is 1566
9999 mem: location 1566 is 1
9999 mem: location 1567 is 2
9999 mem: location 1568 is 1147
9999 mem: location 1569 is 1
9999 mem: location 1570 is 1
9999 mem: location 1571 is 1147
9999 mem: location 1572 is 1443
9999 mem: location 1573 is 1427
9999 mem: location 1574 is 1449
9999 mem: location 1575 is 1
9999 mem: location 1332 is 1566
9999 run: address to copy is 1566
9999 run: its type is number
9999 mem: location 1566 is 1
9999 mem: location 1323 is 1121
9999 mem: storing 1 in location 1121
 105 run: *cursor-column <- get *deletion, before-column:offset
9999 mem: location 1332 is 1566
9999 mem: location 1566 is 1
9999 mem: location 1567 is 2
9999 mem: location 1568 is 1147
9999 mem: location 1569 is 1
9999 mem: location 1570 is 1
9999 mem: location 1571 is 1147
9999 mem: location 1572 is 1443
9999 mem: location 1573 is 1427
9999 mem: location 1574 is 1449
9999 mem: location 1575 is 1
9999 mem: location 1332 is 1566
9999 run: address to copy is 1567
9999 run: its type is number
9999 mem: location 1567 is 2
9999 mem: location 1324 is 1122
9999 mem: storing 2 in location 1122
 105 run: top:address:address:duplex-list <- get-address *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1335
 105 run: *top <- get *deletion, before-top-of-screen:offset
9999 mem: location 1332 is 1566
9999 mem: location 1566 is 1
9999 mem: location 1567 is 2
9999 mem: location 1568 is 1147
9999 mem: location 1569 is 1
9999 mem: location 1570 is 1
9999 mem: location 1571 is 1147
9999 mem: location 1572 is 1443
9999 mem: location 1573 is 1427
9999 mem: location 1574 is 1449
9999 mem: location 1575 is 1
9999 mem: location 1332 is 1566
9999 run: address to copy is 1568
9999 run: its type is address
9999 mem: location 1568 is 1147
9999 mem: location 1335 is 1116
9999 mem: storing 1147 in location 1116
9999 schedule: handle-keyboard-event/editor-event-loop/run1002/scenario-editor-can-undo-and-redo-delete
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1330 is 1565
9999 mem: location 1565 is 2
9999 mem: location 1566 is 1
9999 mem: location 1567 is 2
9999 mem: location 1568 is 1147
9999 mem: location 1569 is 1
9999 mem: location 1570 is 1
9999 mem: location 1571 is 1147
9999 mem: location 1572 is 1443
9999 mem: location 1573 is 1427
9999 mem: location 1574 is 1449
9999 mem: location 1575 is 1
9999 mem: location 1330 is 1565
9999 mem: storing 0 in location 1336
 105 run: break-unless move, 
9999 mem: location 1336 is 0
9999 run: jumping to instruction 93
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1330 is 1565
9999 mem: location 1565 is 2
9999 mem: location 1566 is 1
9999 mem: location 1567 is 2
9999 mem: location 1568 is 1147
9999 mem: location 1569 is 1
9999 mem: location 1570 is 1
9999 mem: location 1571 is 1147
9999 mem: location 1572 is 1443
9999 mem: location 1573 is 1427
9999 mem: location 1574 is 1449
9999 mem: location 1575 is 1
9999 mem: location 1330 is 1565
9999 mem: storing 0 in location 1337
 105 run: break-unless typing, 
9999 mem: location 1337 is 0
9999 run: jumping to instruction 105
 105 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 1/go-render
9999 mem: location 1312 is 1009
9999 mem: location 1313 is 1115
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 1
9999 mem: storing 1009 in location 1297
9999 mem: storing 1115 in location 1299
9999 mem: storing 1 in location 1309
 104 run: break-unless go-render?, 
9999 mem: location 1309 is 1
9999 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1141
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1142
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1142 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 1142 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1143
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1142 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 1142 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1144
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1141 is 1009
9999 mem: location 1142 is 1115
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1152
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1153
 106 run: jump-if editor, 1:offset
9999 mem: location 1153 is 1115
9999 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 1153 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1154
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1152 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1629
 107 run: break-unless sc, 
9999 mem: location 1629 is 1009
9999 run: jump-unless fell through
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1629 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1629 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1630
 107 run: reply height
9999 mem: location 1630 is 5
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 5
9999 mem: storing 5 in location 1155
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 1153 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1156
 106 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 1153 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1157
 106 run: prev:address:duplex-list <- copy curr
9999 mem: location 1157 is 1147
9999 mem: storing 1147 in location 1158
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1147
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1147 in location 1629
 107 run: jump-if in, 1:offset
9999 mem: location 1629 is 1147
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1629 is 1147
9999 mem: location 1147 is 167
9999 mem: location 1148 is 1427
9999 mem: location 1149 is 0
9999 mem: location 1629 is 1147
9999 run: address to copy is 1148
9999 run: its type is address
9999 mem: location 1148 is 1427
9999 mem: storing 1427 in location 1630
 107 run: reply result
9999 mem: location 1630 is 1427
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1427
9999 mem: storing 1427 in location 1157
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1159
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1160
 106 run: column:number <- copy left
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1161
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 1153 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1162
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 1153 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1163
 106 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 1153 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1164
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1152 is 1009
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 107 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 107 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 107 run: *column <- copy new-column
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1152
 106 run: break-unless curr, 
9999 mem: location 1157 is 1427
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 0
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 0 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 0
9999 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1443
9999 mem: location 1429 is 1147
9999 mem: location 1157 is 1427
9999 run: address to copy is 1427
9999 run: its type is character
9999 mem: location 1427 is 97
9999 mem: storing 97 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 97
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 97
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 97
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 97
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 0
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 97
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 97
  90 print-character: 97 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 97
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 97
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 10
9999 mem: storing 1035 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1215 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 97
9999 mem: location 1216 is 1035
9999 mem: storing 97 in location 1035
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1215 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1036
9999 mem: storing 7 in location 1036
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1427
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1629
 107 run: jump-if in, 1:offset
9999 mem: location 1629 is 1427
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1629 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1443
9999 mem: location 1429 is 1147
9999 mem: location 1629 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1443
9999 mem: storing 1443 in location 1630
 107 run: reply result
9999 mem: location 1630 is 1443
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1443
9999 mem: storing 1443 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1147
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1147 in location 1629
 107 run: jump-if in, 1:offset
9999 mem: location 1629 is 1147
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1629 is 1147
9999 mem: location 1147 is 167
9999 mem: location 1148 is 1427
9999 mem: location 1149 is 0
9999 mem: location 1629 is 1147
9999 run: address to copy is 1148
9999 run: its type is address
9999 mem: location 1148 is 1427
9999 mem: storing 1427 in location 1630
 107 run: reply result
9999 mem: location 1630 is 1427
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1427
9999 mem: storing 1427 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 0
9999 mem: storing 1 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 1443
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 1
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 0 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 0
9999 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1449
9999 mem: location 1445 is 1427
9999 mem: location 1157 is 1443
9999 run: address to copy is 1443
9999 run: its type is character
9999 mem: location 1443 is 98
9999 mem: storing 98 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 98
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 98
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 98
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 98
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 1
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 98
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 98
  90 print-character: 98 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 98
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 98
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 11
9999 mem: storing 1037 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1037
9999 mem: location 1037 is 100
9999 mem: location 1038 is 7
9999 mem: location 1215 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 98
9999 mem: location 1216 is 1037
9999 mem: storing 98 in location 1037
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1215 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1038
9999 mem: storing 7 in location 1038
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1443
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1629
 107 run: jump-if in, 1:offset
9999 mem: location 1629 is 1443
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1629 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1449
9999 mem: location 1445 is 1427
9999 mem: location 1629 is 1443
9999 run: address to copy is 1444
9999 run: its type is address
9999 mem: location 1444 is 1449
9999 mem: storing 1449 in location 1630
 107 run: reply result
9999 mem: location 1630 is 1449
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1449
9999 mem: storing 1449 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1427
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1629
 107 run: jump-if in, 1:offset
9999 mem: location 1629 is 1427
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1629 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1443
9999 mem: location 1429 is 1147
9999 mem: location 1629 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1443
9999 mem: storing 1443 in location 1630
 107 run: reply result
9999 mem: location 1630 is 1443
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1443
9999 mem: storing 1443 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 1
9999 mem: storing 2 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 1449
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 2
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 1 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 1
9999 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1158 is 1443
9999 mem: location 1164 is 1118
9999 mem: storing 1443 in location 1118
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1443
9999 mem: location 1157 is 1449
9999 run: address to copy is 1449
9999 run: its type is character
9999 mem: location 1449 is 100
9999 mem: storing 100 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 100
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 100
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 100
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 2
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 100
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 100
  90 print-character: 100 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 100
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 100
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 12
9999 mem: storing 1039 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 101
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 100
9999 mem: location 1216 is 1039
9999 mem: storing 100 in location 1039
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 100
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1040
9999 mem: storing 7 in location 1040
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1449
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1629
 107 run: jump-if in, 1:offset
9999 mem: location 1629 is 1449
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1629 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1443
9999 mem: location 1629 is 1449
9999 run: address to copy is 1450
9999 run: its type is address
9999 mem: location 1450 is 1452
9999 mem: storing 1452 in location 1630
 107 run: reply result
9999 mem: location 1630 is 1452
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1452
9999 mem: storing 1452 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1443
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1629
 107 run: jump-if in, 1:offset
9999 mem: location 1629 is 1443
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1629 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1449
9999 mem: location 1445 is 1427
9999 mem: location 1629 is 1443
9999 run: address to copy is 1444
9999 run: its type is address
9999 mem: location 1444 is 1449
9999 mem: storing 1449 in location 1630
 107 run: reply result
9999 mem: location 1630 is 1449
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1449
9999 mem: storing 1449 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 2
9999 mem: storing 3 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 1452
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 3
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 0 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 0
9999 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1157 is 1452
9999 run: address to copy is 1452
9999 run: its type is character
9999 mem: location 1452 is 101
9999 mem: storing 101 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 101
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 101
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 101
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 3
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 101
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 101
  90 print-character: 101 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 101
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 101
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 13
9999 mem: storing 1041 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1041
9999 mem: location 1041 is 102
9999 mem: location 1042 is 7
9999 mem: location 1215 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 101
9999 mem: location 1216 is 1041
9999 mem: storing 101 in location 1041
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1041
9999 mem: location 1041 is 101
9999 mem: location 1042 is 7
9999 mem: location 1215 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1042
9999 mem: storing 7 in location 1042
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1452
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1629
 107 run: jump-if in, 1:offset
9999 mem: location 1629 is 1452
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1629 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1629 is 1452
9999 run: address to copy is 1453
9999 run: its type is address
9999 mem: location 1453 is 1455
9999 mem: storing 1455 in location 1630
 107 run: reply result
9999 mem: location 1630 is 1455
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1449
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1629
 107 run: jump-if in, 1:offset
9999 mem: location 1629 is 1449
9999 run: jumping to instruction 4
9999 schedule: next-duplex/render/editor-render/editor-event-loop/run1002/scenario-editor-can-undo-and-redo-delete
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1629 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1443
9999 mem: location 1629 is 1449
9999 run: address to copy is 1450
9999 run: its type is address
9999 mem: location 1450 is 1452
9999 mem: storing 1452 in location 1630
 107 run: reply result
9999 mem: location 1630 is 1452
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1452
9999 mem: storing 1452 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 3
9999 mem: storing 4 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 1455
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 4
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 0 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 0
9999 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1157 is 1455
9999 run: address to copy is 1455
9999 run: its type is character
9999 mem: location 1455 is 102
9999 mem: storing 102 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 102
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 102
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 102
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 4
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 102
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 102
  90 print-character: 102 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 102
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 102
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 14
9999 mem: storing 1043 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1215 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 102
9999 mem: location 1216 is 1043
9999 mem: storing 102 in location 1043
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1043
9999 mem: location 1043 is 102
9999 mem: location 1044 is 7
9999 mem: location 1215 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1044
9999 mem: storing 7 in location 1044
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1455
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1455 in location 1629
 107 run: jump-if in, 1:offset
9999 mem: location 1629 is 1455
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1629 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1629 is 1455
9999 run: address to copy is 1456
9999 run: its type is address
9999 mem: location 1456 is 0
9999 mem: storing 0 in location 1630
 107 run: reply result
9999 mem: location 1630 is 0
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 0
9999 mem: storing 0 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1452
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1629
 107 run: jump-if in, 1:offset
9999 mem: location 1629 is 1452
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1629 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1629 is 1452
9999 run: address to copy is 1453
9999 run: its type is address
9999 mem: location 1453 is 1455
9999 mem: storing 1455 in location 1630
 107 run: reply result
9999 mem: location 1630 is 1455
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 4
9999 mem: storing 5 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 0
9999 run: jumping to instruction 67
 106 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 1153 is 1115
9999 run: address to copy is 1117
9999 mem: storing 1117 in location 1172
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1157 is 0
9999 mem: location 1172 is 1117
9999 mem: storing 0 in location 1117
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1161 is 5
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 0 in location 1173
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1166 is 1
9999 mem: location 1173 is 0
9999 mem: storing 0 in location 1174
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1175
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: storing 0 in location 1176
 106 run: break-unless before-cursor?, 
9999 mem: location 1176 is 0
9999 run: jumping to instruction 80
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 5
9999 mem: location 1152 is 1009
9999 mem: location 1153 is 1115
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1
9999 run: result 1 is 5
9999 mem: storing 1 in location 1145
9999 mem: storing 5 in location 1146
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1141 is 1009
9999 mem: location 1146 is 5
9999 mem: location 1144 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1190
 106 run: column:number <- next-ingredient 
9999 mem: storing 5 in location 1191
 106 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1192
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 5
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 15
9999 mem: storing 1045 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1215 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1045
9999 mem: storing 32 in location 1045
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1215 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1046
9999 mem: storing 7 in location 1046
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 5
9999 mem: storing 6 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 6
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 16
9999 mem: storing 1047 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1215 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1047
9999 mem: storing 32 in location 1047
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1215 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1048
9999 mem: storing 7 in location 1048
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 6
9999 mem: storing 7 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 7
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 17 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 17
9999 mem: storing 1049 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1215 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1049
9999 mem: storing 32 in location 1049
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1215 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1050
9999 mem: storing 7 in location 1050
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 7
9999 mem: storing 8 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 8
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 18 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 18
9999 mem: storing 1051 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1215 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1051
9999 mem: storing 32 in location 1051
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1215 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1052
9999 mem: storing 7 in location 1052
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 8
9999 mem: storing 9 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 9
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 19 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 19
9999 mem: storing 1053 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1215 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1053
9999 mem: storing 32 in location 1053
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1215 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1054
9999 mem: storing 7 in location 1054
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 9
9999 mem: storing 10 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 10
9999 mem: location 1192 is 9
9999 mem: storing 1 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 1
9999 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1145 is 1
9999 mem: storing 2 in location 1145
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1141 is 1009
9999 mem: location 1145 is 2
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1222
 106 run: row:number <- next-ingredient 
9999 mem: storing 2 in location 1223
 106 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 1224
 106 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1225
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1226
9999 mem: storing 1 in location 1227
 106 run: break-if style-found?, 
9999 mem: location 1227 is 1
9999 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1228
9999 mem: storing 0 in location 1229
 106 run: break-if color-found?, 
9999 mem: location 1229 is 0
9999 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1228
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 106 run: break-if bg-color-found?, 
9999 mem: location 1231 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1230
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1222 is 1009
9999 mem: location 1223 is 2
9999 mem: location 1224 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1184
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 107 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 107 run: *row <- copy new-row
9999 mem: location 1184 is 2
9999 mem: location 1186 is 1011
9999 mem: storing 2 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 107 run: *column <- copy new-column
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1222
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 0
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 20
9999 mem: storing 1055 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1055
9999 mem: location 1055 is 9480
9999 mem: location 1056 is 245
9999 mem: location 1215 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1055
9999 mem: storing 9480 in location 1055
9999 schedule: print-character/draw-horizontal/editor-render/editor-event-loop/run1002/scenario-editor-can-undo-and-redo-delete
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1055
9999 mem: location 1055 is 9480
9999 mem: location 1056 is 245
9999 mem: location 1215 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1056
9999 mem: storing 245 in location 1056
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 0
9999 mem: storing 1 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 1
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 21
9999 mem: storing 1057 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1057
9999 mem: location 1057 is 9480
9999 mem: location 1058 is 245
9999 mem: location 1215 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1057
9999 mem: storing 9480 in location 1057
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1057
9999 mem: location 1057 is 9480
9999 mem: location 1058 is 245
9999 mem: location 1215 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1058
9999 mem: storing 245 in location 1058
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 1
9999 mem: storing 2 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 2
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 22
9999 mem: storing 1059 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1059
9999 mem: location 1059 is 9480
9999 mem: location 1060 is 245
9999 mem: location 1215 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1059
9999 mem: storing 9480 in location 1059
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1059
9999 mem: location 1059 is 9480
9999 mem: location 1060 is 245
9999 mem: location 1215 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1060
9999 mem: storing 245 in location 1060
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 2
9999 mem: storing 3 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 3
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 23
9999 mem: storing 1061 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1061
9999 mem: location 1061 is 9480
9999 mem: location 1062 is 245
9999 mem: location 1215 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1061
9999 mem: storing 9480 in location 1061
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1061
9999 mem: location 1061 is 9480
9999 mem: location 1062 is 245
9999 mem: location 1215 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1062
9999 mem: storing 245 in location 1062
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 3
9999 mem: storing 4 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 4
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 24
9999 mem: storing 1063 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1063
9999 mem: location 1063 is 9480
9999 mem: location 1064 is 245
9999 mem: location 1215 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1063
9999 mem: storing 9480 in location 1063
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1063
9999 mem: location 1063 is 9480
9999 mem: location 1064 is 245
9999 mem: location 1215 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1064
9999 mem: storing 245 in location 1064
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 4
9999 mem: storing 5 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 5
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 25 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 25
9999 mem: storing 1065 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1065
9999 mem: location 1065 is 9480
9999 mem: location 1066 is 245
9999 mem: location 1215 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1065
9999 mem: storing 9480 in location 1065
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1065
9999 mem: location 1065 is 9480
9999 mem: location 1066 is 245
9999 mem: location 1215 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1066
9999 mem: storing 245 in location 1066
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 5
9999 mem: storing 6 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 6
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 26 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 26
9999 mem: storing 1067 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1067
9999 mem: location 1067 is 9480
9999 mem: location 1068 is 245
9999 mem: location 1215 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1067
9999 mem: storing 9480 in location 1067
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1067
9999 mem: location 1067 is 9480
9999 mem: location 1068 is 245
9999 mem: location 1215 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1068
9999 mem: storing 245 in location 1068
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 6
9999 mem: storing 7 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 7
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 27 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 27
9999 mem: storing 1069 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1069
9999 mem: location 1069 is 9480
9999 mem: location 1070 is 245
9999 mem: location 1215 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1069
9999 mem: storing 9480 in location 1069
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1069
9999 mem: location 1069 is 9480
9999 mem: location 1070 is 245
9999 mem: location 1215 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1070
9999 mem: storing 245 in location 1070
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 7
9999 mem: storing 8 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 8
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 28 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 28
9999 mem: storing 1071 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1071
9999 mem: location 1071 is 9480
9999 mem: location 1072 is 245
9999 mem: location 1215 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1071
9999 mem: storing 9480 in location 1071
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1071
9999 mem: location 1071 is 9480
9999 mem: location 1072 is 245
9999 mem: location 1215 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1072
9999 mem: storing 245 in location 1072
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 8
9999 mem: storing 9 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 9
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 29 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 29
9999 mem: storing 1073 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1073
9999 mem: location 1073 is 9480
9999 mem: location 1074 is 245
9999 mem: location 1215 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1073
9999 mem: storing 9480 in location 1073
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1073
9999 mem: location 1073 is 9480
9999 mem: location 1074 is 245
9999 mem: location 1215 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1074
9999 mem: storing 245 in location 1074
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
9999 schedule: print-character/draw-horizontal/editor-render/editor-event-loop/run1002/scenario-editor-can-undo-and-redo-delete
 107 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 9
9999 mem: storing 10 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 10
9999 mem: location 1225 is 9
9999 mem: storing 0 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 27
9999 trace: fall-through: exiting draw-horizontal; decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1145 is 2
9999 mem: storing 3 in location 1145
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1141 is 1009
9999 mem: location 1145 is 3
9999 mem: location 1143 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1183
 106 run: row:number <- next-ingredient 
9999 mem: storing 3 in location 1184
 106 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 106 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1186
 106 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1187
 106 run: break-if screen, 
9999 mem: location 1183 is 1009
9999 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1183 is 1009
9999 mem: location 1184 is 3
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1236
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1237
 107 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1238
 107 run: *row <- copy new-row
9999 mem: location 1236 is 3
9999 mem: location 1238 is 1011
9999 mem: storing 3 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 107 run: *column <- copy new-column
9999 mem: location 1237 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1183
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1183 is 1009
9999 mem: location 1185 is 0
9999 mem: location 1187 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 107 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1190
 107 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1191
 107 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1192
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 0
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 30
9999 mem: storing 1075 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1075
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1215 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1075
9999 mem: storing 32 in location 1075
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1075
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1215 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1076
9999 mem: storing 7 in location 1076
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 0
9999 mem: storing 1 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 1
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 31
9999 mem: storing 1077 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1215 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1077
9999 mem: storing 32 in location 1077
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1215 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1078
9999 mem: storing 7 in location 1078
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 1
9999 mem: storing 2 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 2
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 32
9999 mem: storing 1079 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1215 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1079
9999 mem: storing 32 in location 1079
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1215 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1080
9999 mem: storing 7 in location 1080
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 2
9999 mem: storing 3 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 3
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 33
9999 mem: storing 1081 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1215 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1081
9999 mem: storing 32 in location 1081
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1215 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1082
9999 mem: storing 7 in location 1082
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 3
9999 mem: storing 4 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 4
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 34
9999 mem: storing 1083 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1215 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1083
9999 mem: storing 32 in location 1083
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1215 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1084
9999 mem: storing 7 in location 1084
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 4
9999 mem: storing 5 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 5
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 35 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 35
9999 mem: storing 1085 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1085
9999 mem: location 1085 is 32
9999 mem: location 1086 is 7
9999 mem: location 1215 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1085
9999 mem: storing 32 in location 1085
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1085
9999 mem: location 1085 is 32
9999 mem: location 1086 is 7
9999 mem: location 1215 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1086
9999 mem: storing 7 in location 1086
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 5
9999 mem: storing 6 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 6
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 36 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 36
9999 mem: storing 1087 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1087
9999 mem: location 1087 is 32
9999 mem: location 1088 is 7
9999 mem: location 1215 is 1087
9999 run: address to copy is 1087
9999 mem: storing 1087 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1087
9999 mem: storing 32 in location 1087
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1087
9999 mem: location 1087 is 32
9999 mem: location 1088 is 7
9999 mem: location 1215 is 1087
9999 run: address to copy is 1088
9999 mem: storing 1088 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1088
9999 mem: storing 7 in location 1088
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 6
9999 mem: storing 7 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 7
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 37 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 37
9999 mem: storing 1089 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1089
9999 mem: location 1089 is 32
9999 mem: location 1090 is 7
9999 mem: location 1215 is 1089
9999 run: address to copy is 1089
9999 mem: storing 1089 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1089
9999 mem: storing 32 in location 1089
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1089
9999 mem: location 1089 is 32
9999 mem: location 1090 is 7
9999 mem: location 1215 is 1089
9999 run: address to copy is 1090
9999 mem: storing 1090 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1090
9999 mem: storing 7 in location 1090
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 7
9999 mem: storing 8 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 8
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
9999 schedule: print-character/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run1002/scenario-editor-can-undo-and-redo-delete
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 38 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 38
9999 mem: storing 1091 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1091
9999 mem: location 1091 is 32
9999 mem: location 1092 is 7
9999 mem: location 1215 is 1091
9999 run: address to copy is 1091
9999 mem: storing 1091 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1091
9999 mem: storing 32 in location 1091
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1091
9999 mem: location 1091 is 32
9999 mem: location 1092 is 7
9999 mem: location 1215 is 1091
9999 run: address to copy is 1092
9999 mem: storing 1092 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1092
9999 mem: storing 7 in location 1092
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 8
9999 mem: storing 9 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 9
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 39 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 39
9999 mem: storing 1093 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1093
9999 mem: location 1093 is 32
9999 mem: location 1094 is 7
9999 mem: location 1215 is 1093
9999 run: address to copy is 1093
9999 mem: storing 1093 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1093
9999 mem: storing 32 in location 1093
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1093
9999 mem: location 1093 is 32
9999 mem: location 1094 is 7
9999 mem: location 1215 is 1093
9999 run: address to copy is 1094
9999 mem: storing 1094 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1094
9999 mem: storing 7 in location 1094
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 9
9999 mem: storing 10 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 10
9999 mem: location 1192 is 9
9999 mem: storing 1 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 1
9999 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1183 is 1009
9999 mem: location 1184 is 3
9999 mem: location 1186 is 0
9999 mem: location 1187 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 107 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1242
 107 run: row:number <- next-ingredient 
9999 mem: storing 3 in location 1243
 107 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1244
 107 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1245
 107 run: row <- add row, 1
9999 mem: location 1243 is 3
9999 mem: storing 4 in location 1243
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1242 is 1009
9999 mem: location 1243 is 4
9999 mem: location 1244 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 108 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1236
 108 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1237
 108 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1238
 108 run: *row <- copy new-row
9999 mem: location 1236 is 4
9999 mem: location 1238 is 1011
9999 mem: storing 4 in location 1011
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: *column <- copy new-column
9999 mem: location 1237 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 0 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
9999 trace: reply: decrementing callstack depth from 7
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1242
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1242 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1629
 108 run: break-unless sc, 
9999 mem: location 1629 is 1009
9999 run: jump-unless fell through
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1629 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1629 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1630
 108 run: reply height
9999 mem: location 1630 is 5
9999 trace: reply: decrementing callstack depth from 7
9999 run: result 0 is 5
9999 mem: storing 5 in location 1246
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1243 is 4
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1247
 107 run: break-if at-bottom-of-screen?, 
9999 mem: location 1247 is 0
9999 run: jump-if fell through
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1242 is 1009
9999 mem: location 1243 is 4
9999 mem: location 1244 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 108 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1236
 108 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1237
 108 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1238
 108 run: *row <- copy new-row
9999 mem: location 1236 is 4
9999 mem: location 1238 is 1011
9999 mem: storing 4 in location 1011
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: *column <- copy new-column
9999 mem: location 1237 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 0 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
9999 trace: reply: decrementing callstack depth from 7
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1242
 107 run: clear-line-delimited screen, left, right
9999 mem: location 1242 is 1009
9999 mem: location 1244 is 0
9999 mem: location 1245 is 9
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 108 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1190
 108 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1191
 108 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1192
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 0
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 40
9999 mem: storing 1095 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1095
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1215 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1095
9999 mem: storing 32 in location 1095
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1095
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1215 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1096
9999 mem: storing 7 in location 1096
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 0
9999 mem: storing 1 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 1
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 41
9999 mem: storing 1097 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1215 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1097
9999 mem: storing 32 in location 1097
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1215 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1098
9999 mem: storing 7 in location 1098
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 1
9999 mem: storing 2 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 2
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 42
9999 mem: storing 1099 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1215 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1099
9999 mem: storing 32 in location 1099
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1215 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1100
9999 mem: storing 7 in location 1100
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 2
9999 mem: storing 3 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 3
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 43
9999 mem: storing 1101 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1215 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1101
9999 mem: storing 32 in location 1101
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1215 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1102
9999 mem: storing 7 in location 1102
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 3
9999 mem: storing 4 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 4
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 44
9999 mem: storing 1103 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1215 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1103
9999 mem: storing 32 in location 1103
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1215 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1104
9999 mem: storing 7 in location 1104
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 4
9999 mem: storing 5 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 5
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 45 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 45
9999 mem: storing 1105 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1105
9999 mem: location 1105 is 32
9999 mem: location 1106 is 7
9999 mem: location 1215 is 1105
9999 run: address to copy is 1105
9999 mem: storing 1105 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1105
9999 mem: storing 32 in location 1105
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1105
9999 mem: location 1105 is 32
9999 mem: location 1106 is 7
9999 mem: location 1215 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1106
9999 mem: storing 7 in location 1106
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 5
9999 mem: storing 6 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 6
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
9999 schedule: clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run1002/scenario-editor-can-undo-and-redo-delete
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 46 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 46
9999 mem: storing 1107 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1107
9999 mem: location 1107 is 32
9999 mem: location 1108 is 7
9999 mem: location 1215 is 1107
9999 run: address to copy is 1107
9999 mem: storing 1107 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1107
9999 mem: storing 32 in location 1107
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1107
9999 mem: location 1107 is 32
9999 mem: location 1108 is 7
9999 mem: location 1215 is 1107
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1108
9999 mem: storing 7 in location 1108
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 6
9999 mem: storing 7 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 7
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 47 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 47
9999 mem: storing 1109 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1109
9999 mem: location 1109 is 32
9999 mem: location 1110 is 7
9999 mem: location 1215 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1109
9999 mem: storing 32 in location 1109
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1109
9999 mem: location 1109 is 32
9999 mem: location 1110 is 7
9999 mem: location 1215 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1110
9999 mem: storing 7 in location 1110
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 7
9999 mem: storing 8 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 8
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 48 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 48
9999 mem: storing 1111 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1111
9999 mem: location 1111 is 32
9999 mem: location 1112 is 7
9999 mem: location 1215 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1111
9999 mem: storing 32 in location 1111
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1111
9999 mem: location 1111 is 32
9999 mem: location 1112 is 7
9999 mem: location 1215 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1112
9999 mem: storing 7 in location 1112
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 8
9999 mem: storing 9 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 9
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 49 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 49
9999 mem: storing 1113 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1113
9999 mem: location 1113 is 32
9999 mem: location 1114 is 7
9999 mem: location 1215 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1113
9999 mem: storing 32 in location 1113
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1113
9999 mem: location 1113 is 32
9999 mem: location 1114 is 7
9999 mem: location 1215 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1114
9999 mem: storing 7 in location 1114
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 9
9999 mem: storing 10 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 10
9999 mem: location 1192 is 9
9999 mem: storing 1 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 1
9999 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 7
 107 run: row <- add row, 1
9999 mem: location 1243 is 4
9999 mem: storing 5 in location 1243
 107 run: loop 
9999 run: jumping to instruction 9
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1243 is 5
9999 mem: location 1246 is 5
9999 mem: storing 1 in location 1247
 107 run: break-if at-bottom-of-screen?, 
9999 mem: location 1247 is 1
9999 run: jumping to instruction 15
9999 trace: fall-through: exiting clear-rest-of-screen; decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 trace: fall-through: exiting editor-render; decrementing callstack depth from 4
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1301
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 2 in location 1185
 105 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 105 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 105 run: *column <- copy new-column
9999 mem: location 1185 is 2
9999 mem: location 1187 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 104 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1625
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1625 in location 1222
 105 run: break-unless x, 
9999 mem: location 1222 is 1625
9999 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1625
9999 mem: location 1625 is 1
9999 mem: location 1626 is 1620
9999 mem: location 1222 is 1625
9999 run: address to copy is 1625
9999 mem: storing 1625 in location 1223
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1625
9999 mem: location 1625 is 1
9999 mem: location 1626 is 1620
9999 mem: location 1222 is 1625
9999 run: address to copy is 1626
9999 run: its type is address
9999 mem: location 1626 is 1620
9999 mem: storing 1620 in location 1224
 105 run: max:number <- length *buf
9999 mem: location 1224 is 1620
9999 mem: storing 1 in location 1225
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1625
9999 mem: location 1625 is 1
9999 mem: location 1225 is 1
9999 mem: storing 1 in location 1226
 105 run: break-unless done?, 
9999 mem: location 1226 is 1
9999 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1627 in location 1227
 105 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1227 is 1627
9999 mem: location 1627 is 0
9999 mem: location 1628 is 0
9999 mem: location 1629 is 0
9999 mem: location 1630 is 0
9999 mem: location 1222 is 1625
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1625
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1625 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 1 in location 1307
 104 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 104 run: break-if quit?, 
9999 mem: location 1307 is 1
9999 run: jumping to instruction 28
9999 trace: fall-through: exiting editor-event-loop; decrementing callstack depth from 3
9999 trace: fall-through: exiting run1002; decrementing callstack depth from 2
 102 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 2 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 3
 102 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 2 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 4
 102 run: memory-should-contain [
    3 <- 1
    4 <- 2
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: screen-should-contain [
    .          .
    .abdef     .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: assume-console [
    press ctrl-z
  ]
9999 parse: instruction: press
9999 parse:   ingredient: {"ctrl-z": <>}
 102 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
9999 parse: instruction: editor-event-loop
9999 parse:   ingredient: {"screen": "address"}
9999 parse:   ingredient: {"console": "address"}
9999 parse:   ingredient: {"2": <"address" : "editor-data">}
9999 after-brace: recipe run1003
9999 after-brace: editor-event-loop ...
9999 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1638
9999 mem: location 2 is 1115
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1297
 104 run: console:address <- next-ingredient 
9999 mem: storing 1638 in location 1298
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1299
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1301
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 2 in location 1185
 105 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 105 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 105 run: *column <- copy new-column
9999 mem: location 1185 is 2
9999 mem: location 1187 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 104 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1638
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1638 in location 1222
 105 run: break-unless x, 
9999 mem: location 1222 is 1638
9999 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1638
9999 mem: location 1638 is 0
9999 mem: location 1639 is 1633
9999 mem: location 1222 is 1638
9999 run: address to copy is 1638
9999 mem: storing 1638 in location 1223
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1638
9999 mem: location 1638 is 0
9999 mem: location 1639 is 1633
9999 mem: location 1222 is 1638
9999 run: address to copy is 1639
9999 run: its type is address
9999 mem: location 1639 is 1633
9999 mem: storing 1633 in location 1224
 105 run: max:number <- length *buf
9999 mem: location 1224 is 1633
9999 mem: storing 1 in location 1225
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1638
9999 mem: location 1638 is 0
9999 mem: location 1225 is 1
9999 mem: storing 0 in location 1226
 105 run: break-unless done?, 
9999 mem: location 1226 is 0
9999 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1224 is 1633
9999 mem: location 1223 is 1638
9999 mem: location 1638 is 0
9999 run: address to copy is 1634
9999 run: its type is event
9999 mem: location 1634 is 0
9999 mem: location 1635 is 26
9999 mem: location 1636 is 0
9999 mem: location 1637 is 0
9999 mem: storing 0 in location 1228
9999 mem: storing 26 in location 1229
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 105 run: *idx <- add *idx, 1
9999 mem: location 1223 is 1638
9999 mem: location 1638 is 0
9999 mem: location 1223 is 1638
9999 mem: storing 1 in location 1638
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1228 is 0
9999 mem: location 1229 is 26
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1222 is 1638
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is [0, 26, 0, 0]
9999 run: result 1 is 1638
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1302
9999 mem: storing 26 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1638 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 0 in location 1307
 104 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 104 run: break-if quit?, 
9999 mem: location 1307 is 0
9999 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1302 is 0
9999 mem: location 1303 is 26
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: storing 0 in location 1308
 104 run: break-unless t, 
9999 mem: location 1308 is 0
9999 run: jumping to instruction 18
 104 run: break-if t, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 mem: location 1302 is 0
9999 mem: location 1303 is 26
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1312
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1313
 105 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1314
9999 mem: storing 26 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
 105 run: jump-if editor, 1:offset
9999 mem: location 1313 is 1115
9999 run: jumping to instruction 6
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1640
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1642
 106 run: break-unless sc, 
9999 mem: location 1642 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1642 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1642 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1643
 106 run: reply width
9999 mem: location 1643 is 10
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 10
9999 mem: storing 10 in location 1318
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1642
 106 run: break-unless sc, 
9999 mem: location 1642 is 1009
9999 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1642 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1642 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1643
 106 run: reply height
9999 mem: location 1643 is 5
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1319
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 1313 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1320
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 1313 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1321
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 1313 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1322
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 1313 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1323
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 1313 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1324
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1325
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1326
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1314 is 0
9999 mem: location 1315 is 26
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 1315 in location 1327
 105 run: break-unless c, 
9999 mem: location 1327 is 1315
9999 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 26
9999 mem: storing 0 in location 1328
 105 run: break-unless redo?, 
9999 mem: location 1328 is 0
9999 run: jumping to instruction 60
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 26
9999 mem: storing 1 in location 1339
 105 run: break-unless undo?, 
9999 mem: location 1339 is 1
9999 run: jump-unless fell through
 105 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1525
9999 mem: location 1125 is 1631
9999 mem: location 1313 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1331
 105 run: break-unless *undo, 
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1525
9999 run: jump-unless fell through
 105 run: op:address:operation/skiptypecheck <- first *undo
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1525
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 1525 in location 1642
 106 run: result:location <- get *in, value:offset
9999 mem: location 1642 is 1525
9999 mem: location 1525 is 1514
9999 mem: location 1526 is 1497
9999 mem: location 1642 is 1525
9999 run: address to copy is 1525
9999 run: its type is number
9999 mem: location 1525 is 1514
9999 mem: storing 1514 in location 1643
 106 run: reply result
9999 mem: location 1643 is 1514
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1514
9999 mem: storing 1514 in location 1330
 105 run: *undo <- rest *undo
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1525
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 1525 in location 1642
 106 run: result:address:list <- get *in, next:offset
9999 mem: location 1642 is 1525
9999 mem: location 1525 is 1514
9999 mem: location 1526 is 1497
9999 mem: location 1642 is 1525
9999 run: address to copy is 1526
9999 run: its type is address
9999 mem: location 1526 is 1497
9999 mem: storing 1497 in location 1643
 106 run: reply result
9999 mem: location 1643 is 1497
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1497
9999 mem: location 1331 is 1124
9999 mem: storing 1497 in location 1124
 105 run: redo:address:address:list <- get-address *editor, redo:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1631
9999 mem: location 1313 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1329
 105 run: *redo/skiptypecheck <- push op, *redo
9999 mem: location 1330 is 1514
9999 mem: location 1329 is 1125
9999 mem: location 1125 is 1631
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: x:location <- next-ingredient 
9999 mem: storing 1514 in location 1183
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 1631 in location 1184
 106 run: result:address:list <- new list:type
9999 mem: new alloc: 1644
9999 mem: storing 1644 in location 1185
 106 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1185 is 1644
9999 mem: location 1644 is 0
9999 mem: location 1645 is 0
9999 mem: location 1185 is 1644
9999 run: address to copy is 1644
9999 mem: storing 1644 in location 1186
 106 run: *val <- copy x
9999 mem: location 1183 is 1514
9999 mem: location 1186 is 1644
9999 mem: storing 1514 in location 1644
 106 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1185 is 1644
9999 mem: location 1644 is 1514
9999 mem: location 1645 is 0
9999 mem: location 1185 is 1644
9999 run: address to copy is 1645
9999 mem: storing 1645 in location 1187
 106 run: *next <- copy in
9999 mem: location 1184 is 1631
9999 mem: location 1187 is 1645
9999 mem: storing 1631 in location 1645
 106 run: reply result
9999 mem: location 1185 is 1644
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1644
9999 mem: location 1329 is 1125
9999 mem: storing 1644 in location 1125
 105 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1330 is 1514
9999 mem: location 1514 is 2
9999 mem: location 1515 is 1
9999 mem: location 1516 is 2
9999 mem: location 1517 is 1147
9999 mem: location 1518 is 1
9999 mem: location 1519 is 2
9999 mem: location 1520 is 1147
9999 mem: location 1521 is 1446
9999 mem: location 1522 is 1443
9999 mem: location 1523 is 1449
9999 mem: location 1524 is 2
9999 mem: location 1330 is 1514
9999 mem: storing 1515 in location 1332
 105 run: break-unless deletion, 
9999 mem: location 1332 is 1515
9999 run: jump-unless fell through
 105 run: start2:address:address:duplex-list <- get-address *editor, data:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 1313 is 1115
9999 run: address to copy is 1115
9999 mem: storing 1115 in location 1340
 105 run: anchor:address:duplex-list <- get *deletion, delete-from:offset
9999 mem: location 1332 is 1515
9999 mem: location 1515 is 1
9999 mem: location 1516 is 2
9999 mem: location 1517 is 1147
9999 mem: location 1518 is 1
9999 mem: location 1519 is 2
9999 mem: location 1520 is 1147
9999 mem: location 1521 is 1446
9999 mem: location 1522 is 1443
9999 mem: location 1523 is 1449
9999 mem: location 1524 is 2
9999 mem: location 1332 is 1515
9999 run: address to copy is 1522
9999 run: its type is address
9999 mem: location 1522 is 1443
9999 mem: storing 1443 in location 1341
 105 run: break-unless anchor, 
9999 mem: location 1341 is 1443
9999 run: jump-unless fell through
 105 run: deleted:address:duplex-list <- get *deletion, deleted-text:offset
9999 mem: location 1332 is 1515
9999 mem: location 1515 is 1
9999 mem: location 1516 is 2
9999 mem: location 1517 is 1147
9999 mem: location 1518 is 1
9999 mem: location 1519 is 2
9999 mem: location 1520 is 1147
9999 mem: location 1521 is 1446
9999 mem: location 1522 is 1443
9999 mem: location 1523 is 1449
9999 mem: location 1524 is 2
9999 mem: location 1332 is 1515
9999 run: address to copy is 1521
9999 run: its type is address
9999 mem: location 1521 is 1446
9999 mem: storing 1446 in location 1342
 105 run: old-cursor:address:duplex-list <- last-duplex deleted
9999 mem: location 1342 is 1446
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1446 in location 1593
 106 run: result:address:duplex-list <- copy in
9999 mem: location 1593 is 1446
9999 mem: storing 1446 in location 1594
 106 run: next:address:duplex-list <- next-duplex result
9999 mem: location 1594 is 1446
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1446 in location 1642
 107 run: jump-if in, 1:offset
9999 mem: location 1642 is 1446
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1642 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 0
9999 mem: location 1448 is 0
9999 mem: location 1642 is 1446
9999 run: address to copy is 1447
9999 run: its type is address
9999 mem: location 1447 is 0
9999 mem: storing 0 in location 1643
 107 run: reply result
9999 mem: location 1643 is 0
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 0
9999 mem: storing 0 in location 1595
 106 run: break-unless next, 
9999 mem: location 1595 is 0
9999 run: jumping to instruction 8
 106 run: reply result
9999 mem: location 1594 is 1446
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1446
9999 mem: storing 1446 in location 1343
 105 run: insert-duplex-range anchor, deleted
9999 mem: location 1341 is 1443
9999 mem: location 1342 is 1446
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1183
 106 run: start:address:duplex-list <- next-ingredient 
9999 mem: storing 1446 in location 1184
 106 run: jump-if in, 1:offset
9999 mem: location 1183 is 1443
9999 run: jumping to instruction 5
 106 run: jump-if start, 1:offset
9999 mem: location 1184 is 1446
9999 run: jumping to instruction 7
 106 run: end:address:duplex-list <- copy start
9999 mem: location 1184 is 1446
9999 mem: storing 1446 in location 1185
 106 run: next:address:duplex-list <- next-duplex end
9999 mem: location 1185 is 1446
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1446 in location 1642
 107 run: jump-if in, 1:offset
9999 mem: location 1642 is 1446
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1642 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 0
9999 mem: location 1448 is 0
9999 mem: location 1642 is 1446
9999 run: address to copy is 1447
9999 run: its type is address
9999 mem: location 1447 is 0
9999 mem: storing 0 in location 1643
 107 run: reply result
9999 mem: location 1643 is 0
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 0
9999 mem: storing 0 in location 1186
 106 run: break-unless next, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 13
 106 run: next:address:duplex-list <- next-duplex in
9999 mem: location 1183 is 1443
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1642
 107 run: jump-if in, 1:offset
9999 mem: location 1642 is 1443
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1642 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1449
9999 mem: location 1445 is 1427
9999 mem: location 1642 is 1443
9999 run: address to copy is 1444
9999 run: its type is address
9999 mem: location 1444 is 1449
9999 mem: storing 1449 in location 1643
 107 run: reply result
9999 mem: location 1643 is 1449
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1449
9999 mem: storing 1449 in location 1186
 106 run: dest:address:address:duplex-list <- get-address *end, next:offset
9999 mem: location 1185 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 0
9999 mem: location 1448 is 0
9999 mem: location 1185 is 1446
9999 run: address to copy is 1447
9999 mem: storing 1447 in location 1187
 106 run: *dest <- copy next
9999 mem: location 1186 is 1449
9999 mem: location 1187 is 1447
9999 mem: storing 1449 in location 1447
 106 run: break-unless next, 
9999 mem: location 1186 is 1449
9999 run: jump-unless fell through
 106 run: dest <- get-address *next, prev:offset
9999 mem: location 1186 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1443
9999 mem: location 1186 is 1449
9999 run: address to copy is 1451
9999 mem: storing 1451 in location 1187
 106 run: *dest <- copy end
9999 mem: location 1185 is 1446
9999 mem: location 1187 is 1451
9999 mem: storing 1446 in location 1451
 106 run: dest <- get-address *in, next:offset
9999 mem: location 1183 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1449
9999 mem: location 1445 is 1427
9999 mem: location 1183 is 1443
9999 run: address to copy is 1444
9999 mem: storing 1444 in location 1187
 106 run: *dest <- copy start
9999 mem: location 1184 is 1446
9999 mem: location 1187 is 1444
9999 mem: storing 1446 in location 1444
 106 run: dest <- get-address *start, prev:offset
9999 mem: location 1184 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 1449
9999 mem: location 1448 is 0
9999 mem: location 1184 is 1446
9999 run: address to copy is 1448
9999 mem: storing 1448 in location 1187
 106 run: *dest <- copy in
9999 mem: location 1183 is 1443
9999 mem: location 1187 is 1448
9999 mem: storing 1443 in location 1448
 106 run: reply in
9999 mem: location 1183 is 1443
9999 trace: reply: decrementing callstack depth from 5
 105 run: *before-cursor <- copy old-cursor
9999 mem: location 1343 is 1446
9999 mem: location 1322 is 1118
9999 mem: storing 1446 in location 1118
 105 run: *cursor-row <- get *deletion, before-row:offset
9999 mem: location 1332 is 1515
9999 mem: location 1515 is 1
9999 mem: location 1516 is 2
9999 mem: location 1517 is 1147
9999 mem: location 1518 is 1
9999 mem: location 1519 is 2
9999 mem: location 1520 is 1147
9999 mem: location 1521 is 1446
9999 mem: location 1522 is 1443
9999 mem: location 1523 is 1449
9999 mem: location 1524 is 2
9999 mem: location 1332 is 1515
9999 run: address to copy is 1515
9999 run: its type is number
9999 mem: location 1515 is 1
9999 mem: location 1323 is 1121
9999 mem: storing 1 in location 1121
 105 run: *cursor-column <- get *deletion, before-column:offset
9999 mem: location 1332 is 1515
9999 mem: location 1515 is 1
9999 mem: location 1516 is 2
9999 mem: location 1517 is 1147
9999 mem: location 1518 is 1
9999 mem: location 1519 is 2
9999 mem: location 1520 is 1147
9999 mem: location 1521 is 1446
9999 mem: location 1522 is 1443
9999 mem: location 1523 is 1449
9999 mem: location 1524 is 2
9999 mem: location 1332 is 1515
9999 run: address to copy is 1516
9999 run: its type is number
9999 mem: location 1516 is 2
9999 mem: location 1324 is 1122
9999 mem: storing 2 in location 1122
 105 run: top:address:address:duplex-list <- get-address *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1335
 105 run: *top <- get *deletion, before-top-of-screen:offset
9999 mem: location 1332 is 1515
9999 mem: location 1515 is 1
9999 mem: location 1516 is 2
9999 mem: location 1517 is 1147
9999 mem: location 1518 is 1
9999 mem: location 1519 is 2
9999 mem: location 1520 is 1147
9999 mem: location 1521 is 1446
9999 mem: location 1522 is 1443
9999 mem: location 1523 is 1449
9999 mem: location 1524 is 2
9999 mem: location 1332 is 1515
9999 run: address to copy is 1517
9999 run: its type is address
9999 mem: location 1517 is 1147
9999 mem: location 1335 is 1116
9999 mem: storing 1147 in location 1116
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1330 is 1514
9999 mem: location 1514 is 2
9999 mem: location 1515 is 1
9999 mem: location 1516 is 2
9999 mem: location 1517 is 1147
9999 mem: location 1518 is 1
9999 mem: location 1519 is 2
9999 mem: location 1520 is 1147
9999 mem: location 1521 is 1446
9999 mem: location 1522 is 1443
9999 mem: location 1523 is 1449
9999 mem: location 1524 is 2
9999 mem: location 1330 is 1514
9999 mem: storing 0 in location 1336
 105 run: break-unless move, 
9999 mem: location 1336 is 0
9999 run: jumping to instruction 93
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1330 is 1514
9999 mem: location 1514 is 2
9999 mem: location 1515 is 1
9999 mem: location 1516 is 2
9999 mem: location 1517 is 1147
9999 mem: location 1518 is 1
9999 mem: location 1519 is 2
9999 mem: location 1520 is 1147
9999 mem: location 1521 is 1446
9999 mem: location 1522 is 1443
9999 mem: location 1523 is 1449
9999 mem: location 1524 is 2
9999 mem: location 1330 is 1514
9999 mem: storing 0 in location 1337
 105 run: break-unless typing, 
9999 mem: location 1337 is 0
9999 run: jumping to instruction 105
 105 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 1/go-render
9999 mem: location 1312 is 1009
9999 mem: location 1313 is 1115
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 1
9999 mem: storing 1009 in location 1297
9999 mem: storing 1115 in location 1299
9999 mem: storing 1 in location 1309
 104 run: break-unless go-render?, 
9999 mem: location 1309 is 1
9999 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1141
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1142
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1142 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 1142 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1143
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1142 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 1142 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1144
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1141 is 1009
9999 mem: location 1142 is 1115
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1152
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1153
 106 run: jump-if editor, 1:offset
9999 mem: location 1153 is 1115
9999 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 1153 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1154
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1152 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1642
 107 run: break-unless sc, 
9999 mem: location 1642 is 1009
9999 run: jump-unless fell through
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1642 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1642 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1643
 107 run: reply height
9999 mem: location 1643 is 5
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 5
9999 mem: storing 5 in location 1155
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 1153 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1156
 106 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 1153 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1157
 106 run: prev:address:duplex-list <- copy curr
9999 mem: location 1157 is 1147
9999 mem: storing 1147 in location 1158
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1147
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1147 in location 1642
 107 run: jump-if in, 1:offset
9999 mem: location 1642 is 1147
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1642 is 1147
9999 mem: location 1147 is 167
9999 mem: location 1148 is 1427
9999 mem: location 1149 is 0
9999 mem: location 1642 is 1147
9999 run: address to copy is 1148
9999 run: its type is address
9999 mem: location 1148 is 1427
9999 mem: storing 1427 in location 1643
 107 run: reply result
9999 mem: location 1643 is 1427
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1427
9999 mem: storing 1427 in location 1157
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1159
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1160
 106 run: column:number <- copy left
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1161
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 1153 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1162
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 1153 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1163
 106 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1446
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 1153 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1164
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1152 is 1009
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 107 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 107 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 107 run: *column <- copy new-column
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1012
9999 mem: storing 0 in location 1012
9999 schedule: move-cursor/render/editor-render/editor-event-loop/run1003/scenario-editor-can-undo-and-redo-delete
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1152
 106 run: break-unless curr, 
9999 mem: location 1157 is 1427
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 0
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 0 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 0
9999 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1443
9999 mem: location 1429 is 1147
9999 mem: location 1157 is 1427
9999 run: address to copy is 1427
9999 run: its type is character
9999 mem: location 1427 is 97
9999 mem: storing 97 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 97
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 97
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 97
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 97
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 0
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 97
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 97
  90 print-character: 97 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 97
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 97
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 10
9999 mem: storing 1035 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1215 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 97
9999 mem: location 1216 is 1035
9999 mem: storing 97 in location 1035
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1215 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1036
9999 mem: storing 7 in location 1036
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1427
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1642
 107 run: jump-if in, 1:offset
9999 mem: location 1642 is 1427
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1642 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1443
9999 mem: location 1429 is 1147
9999 mem: location 1642 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1443
9999 mem: storing 1443 in location 1643
 107 run: reply result
9999 mem: location 1643 is 1443
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1443
9999 mem: storing 1443 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1147
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1147 in location 1642
 107 run: jump-if in, 1:offset
9999 mem: location 1642 is 1147
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1642 is 1147
9999 mem: location 1147 is 167
9999 mem: location 1148 is 1427
9999 mem: location 1149 is 0
9999 mem: location 1642 is 1147
9999 run: address to copy is 1148
9999 run: its type is address
9999 mem: location 1148 is 1427
9999 mem: storing 1427 in location 1643
 107 run: reply result
9999 mem: location 1643 is 1427
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1427
9999 mem: storing 1427 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 0
9999 mem: storing 1 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 1443
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 1
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 0 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 0
9999 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1446
9999 mem: location 1445 is 1427
9999 mem: location 1157 is 1443
9999 run: address to copy is 1443
9999 run: its type is character
9999 mem: location 1443 is 98
9999 mem: storing 98 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 98
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 98
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 98
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 98
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 1
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 98
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 98
  90 print-character: 98 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 98
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 98
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 11
9999 mem: storing 1037 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1215 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 98
9999 mem: location 1216 is 1037
9999 mem: storing 98 in location 1037
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1215 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1038
9999 mem: storing 7 in location 1038
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1443
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1642
 107 run: jump-if in, 1:offset
9999 mem: location 1642 is 1443
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1642 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1446
9999 mem: location 1445 is 1427
9999 mem: location 1642 is 1443
9999 run: address to copy is 1444
9999 run: its type is address
9999 mem: location 1444 is 1446
9999 mem: storing 1446 in location 1643
 107 run: reply result
9999 mem: location 1643 is 1446
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1446
9999 mem: storing 1446 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1427
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1642
 107 run: jump-if in, 1:offset
9999 mem: location 1642 is 1427
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1642 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1443
9999 mem: location 1429 is 1147
9999 mem: location 1642 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1443
9999 mem: storing 1443 in location 1643
 107 run: reply result
9999 mem: location 1643 is 1443
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1443
9999 mem: storing 1443 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 1
9999 mem: storing 2 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 1446
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 2
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 1 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 1
9999 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1158 is 1443
9999 mem: location 1164 is 1118
9999 mem: storing 1443 in location 1118
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 1449
9999 mem: location 1448 is 1443
9999 mem: location 1157 is 1446
9999 run: address to copy is 1446
9999 run: its type is character
9999 mem: location 1446 is 99
9999 mem: storing 99 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 99
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 99
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 99
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 99
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 2
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 99
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 99
  90 print-character: 99 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 99
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 99
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 12
9999 mem: storing 1039 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 100
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 99
9999 mem: location 1216 is 1039
9999 mem: storing 99 in location 1039
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1040
9999 mem: storing 7 in location 1040
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1446
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1446 in location 1642
 107 run: jump-if in, 1:offset
9999 mem: location 1642 is 1446
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1642 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 1449
9999 mem: location 1448 is 1443
9999 mem: location 1642 is 1446
9999 run: address to copy is 1447
9999 run: its type is address
9999 mem: location 1447 is 1449
9999 mem: storing 1449 in location 1643
 107 run: reply result
9999 mem: location 1643 is 1449
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1449
9999 mem: storing 1449 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1443
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1642
 107 run: jump-if in, 1:offset
9999 mem: location 1642 is 1443
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1642 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1446
9999 mem: location 1445 is 1427
9999 mem: location 1642 is 1443
9999 run: address to copy is 1444
9999 run: its type is address
9999 mem: location 1444 is 1446
9999 mem: storing 1446 in location 1643
 107 run: reply result
9999 mem: location 1643 is 1446
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1446
9999 mem: storing 1446 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 2
9999 mem: storing 3 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 1449
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 3
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 0 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 0
9999 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1446
9999 mem: location 1157 is 1449
9999 run: address to copy is 1449
9999 run: its type is character
9999 mem: location 1449 is 100
9999 mem: storing 100 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 100
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 100
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 100
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 3
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 100
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 100
  90 print-character: 100 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 100
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 100
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 13
9999 mem: storing 1041 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1041
9999 mem: location 1041 is 101
9999 mem: location 1042 is 7
9999 mem: location 1215 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 100
9999 mem: location 1216 is 1041
9999 mem: storing 100 in location 1041
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1041
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1215 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1042
9999 mem: storing 7 in location 1042
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1449
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1642
 107 run: jump-if in, 1:offset
9999 mem: location 1642 is 1449
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1642 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1446
9999 mem: location 1642 is 1449
9999 run: address to copy is 1450
9999 run: its type is address
9999 mem: location 1450 is 1452
9999 mem: storing 1452 in location 1643
 107 run: reply result
9999 mem: location 1643 is 1452
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1452
9999 mem: storing 1452 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1446
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1446 in location 1642
 107 run: jump-if in, 1:offset
9999 mem: location 1642 is 1446
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1642 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 1449
9999 mem: location 1448 is 1443
9999 mem: location 1642 is 1446
9999 run: address to copy is 1447
9999 run: its type is address
9999 mem: location 1447 is 1449
9999 mem: storing 1449 in location 1643
 107 run: reply result
9999 mem: location 1643 is 1449
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1449
9999 mem: storing 1449 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 3
9999 mem: storing 4 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 1452
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 4
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 0 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 0
9999 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1157 is 1452
9999 run: address to copy is 1452
9999 run: its type is character
9999 mem: location 1452 is 101
9999 mem: storing 101 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 101
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 101
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 101
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 4
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 101
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
9999 schedule: print-character/render/editor-render/editor-event-loop/run1003/scenario-editor-can-undo-and-redo-delete
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 101
  90 print-character: 101 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 101
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 101
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 14
9999 mem: storing 1043 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1043
9999 mem: location 1043 is 102
9999 mem: location 1044 is 7
9999 mem: location 1215 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 101
9999 mem: location 1216 is 1043
9999 mem: storing 101 in location 1043
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1043
9999 mem: location 1043 is 101
9999 mem: location 1044 is 7
9999 mem: location 1215 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1044
9999 mem: storing 7 in location 1044
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1452
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1642
 107 run: jump-if in, 1:offset
9999 mem: location 1642 is 1452
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1642 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1642 is 1452
9999 run: address to copy is 1453
9999 run: its type is address
9999 mem: location 1453 is 1455
9999 mem: storing 1455 in location 1643
 107 run: reply result
9999 mem: location 1643 is 1455
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1449
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1642
 107 run: jump-if in, 1:offset
9999 mem: location 1642 is 1449
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1642 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1446
9999 mem: location 1642 is 1449
9999 run: address to copy is 1450
9999 run: its type is address
9999 mem: location 1450 is 1452
9999 mem: storing 1452 in location 1643
 107 run: reply result
9999 mem: location 1643 is 1452
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1452
9999 mem: storing 1452 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 4
9999 mem: storing 5 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 1455
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 5
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 0 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 0
9999 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1157 is 1455
9999 run: address to copy is 1455
9999 run: its type is character
9999 mem: location 1455 is 102
9999 mem: storing 102 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 102
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 102
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 102
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 5
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 102
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 102
  90 print-character: 102 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 102
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 102
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 15
9999 mem: storing 1045 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1215 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 102
9999 mem: location 1216 is 1045
9999 mem: storing 102 in location 1045
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1045
9999 mem: location 1045 is 102
9999 mem: location 1046 is 7
9999 mem: location 1215 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1046
9999 mem: storing 7 in location 1046
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1455
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1455 in location 1642
 107 run: jump-if in, 1:offset
9999 mem: location 1642 is 1455
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1642 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1642 is 1455
9999 run: address to copy is 1456
9999 run: its type is address
9999 mem: location 1456 is 0
9999 mem: storing 0 in location 1643
 107 run: reply result
9999 mem: location 1643 is 0
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 0
9999 mem: storing 0 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1452
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1642
 107 run: jump-if in, 1:offset
9999 mem: location 1642 is 1452
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1642 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1642 is 1452
9999 run: address to copy is 1453
9999 run: its type is address
9999 mem: location 1453 is 1455
9999 mem: storing 1455 in location 1643
 107 run: reply result
9999 mem: location 1643 is 1455
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 5
9999 mem: storing 6 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 0
9999 run: jumping to instruction 67
 106 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 1153 is 1115
9999 run: address to copy is 1117
9999 mem: storing 1117 in location 1172
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1157 is 0
9999 mem: location 1172 is 1117
9999 mem: storing 0 in location 1117
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1161 is 6
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 0 in location 1173
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1166 is 1
9999 mem: location 1173 is 0
9999 mem: storing 0 in location 1174
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1175
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: storing 0 in location 1176
 106 run: break-unless before-cursor?, 
9999 mem: location 1176 is 0
9999 run: jumping to instruction 80
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 6
9999 mem: location 1152 is 1009
9999 mem: location 1153 is 1115
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1
9999 run: result 1 is 6
9999 mem: storing 1 in location 1145
9999 mem: storing 6 in location 1146
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1141 is 1009
9999 mem: location 1146 is 6
9999 mem: location 1144 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1190
 106 run: column:number <- next-ingredient 
9999 mem: storing 6 in location 1191
 106 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1192
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 6
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 16
9999 mem: storing 1047 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1215 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1047
9999 mem: storing 32 in location 1047
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1215 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1048
9999 mem: storing 7 in location 1048
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 6
9999 mem: storing 7 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 7
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 17 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 17
9999 mem: storing 1049 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1215 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1049
9999 mem: storing 32 in location 1049
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1215 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1050
9999 mem: storing 7 in location 1050
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 7
9999 mem: storing 8 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 8
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 18 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 18
9999 mem: storing 1051 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1215 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1051
9999 mem: storing 32 in location 1051
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1215 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1052
9999 mem: storing 7 in location 1052
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 8
9999 mem: storing 9 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 9
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 19 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 19
9999 mem: storing 1053 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1215 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1053
9999 mem: storing 32 in location 1053
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1215 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1054
9999 mem: storing 7 in location 1054
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 9
9999 mem: storing 10 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 10
9999 mem: location 1192 is 9
9999 mem: storing 1 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 1
9999 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1145 is 1
9999 mem: storing 2 in location 1145
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1141 is 1009
9999 mem: location 1145 is 2
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1222
 106 run: row:number <- next-ingredient 
9999 mem: storing 2 in location 1223
 106 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 1224
 106 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1225
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1226
9999 mem: storing 1 in location 1227
 106 run: break-if style-found?, 
9999 mem: location 1227 is 1
9999 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1228
9999 mem: storing 0 in location 1229
 106 run: break-if color-found?, 
9999 mem: location 1229 is 0
9999 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1228
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 106 run: break-if bg-color-found?, 
9999 mem: location 1231 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1230
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1222 is 1009
9999 mem: location 1223 is 2
9999 mem: location 1224 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1184
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 107 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 107 run: *row <- copy new-row
9999 mem: location 1184 is 2
9999 mem: location 1186 is 1011
9999 mem: storing 2 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 107 run: *column <- copy new-column
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1222
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 0
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 20
9999 mem: storing 1055 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1055
9999 mem: location 1055 is 9480
9999 mem: location 1056 is 245
9999 mem: location 1215 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1055
9999 mem: storing 9480 in location 1055
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1055
9999 mem: location 1055 is 9480
9999 mem: location 1056 is 245
9999 mem: location 1215 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1056
9999 mem: storing 245 in location 1056
9999 schedule: print-character/draw-horizontal/editor-render/editor-event-loop/run1003/scenario-editor-can-undo-and-redo-delete
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 0
9999 mem: storing 1 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 1
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 21
9999 mem: storing 1057 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1057
9999 mem: location 1057 is 9480
9999 mem: location 1058 is 245
9999 mem: location 1215 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1057
9999 mem: storing 9480 in location 1057
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1057
9999 mem: location 1057 is 9480
9999 mem: location 1058 is 245
9999 mem: location 1215 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1058
9999 mem: storing 245 in location 1058
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 1
9999 mem: storing 2 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 2
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 22
9999 mem: storing 1059 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1059
9999 mem: location 1059 is 9480
9999 mem: location 1060 is 245
9999 mem: location 1215 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1059
9999 mem: storing 9480 in location 1059
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1059
9999 mem: location 1059 is 9480
9999 mem: location 1060 is 245
9999 mem: location 1215 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1060
9999 mem: storing 245 in location 1060
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 2
9999 mem: storing 3 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 3
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 23
9999 mem: storing 1061 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1061
9999 mem: location 1061 is 9480
9999 mem: location 1062 is 245
9999 mem: location 1215 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1061
9999 mem: storing 9480 in location 1061
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1061
9999 mem: location 1061 is 9480
9999 mem: location 1062 is 245
9999 mem: location 1215 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1062
9999 mem: storing 245 in location 1062
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 3
9999 mem: storing 4 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 4
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 24
9999 mem: storing 1063 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1063
9999 mem: location 1063 is 9480
9999 mem: location 1064 is 245
9999 mem: location 1215 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1063
9999 mem: storing 9480 in location 1063
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1063
9999 mem: location 1063 is 9480
9999 mem: location 1064 is 245
9999 mem: location 1215 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1064
9999 mem: storing 245 in location 1064
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 4
9999 mem: storing 5 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 5
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 25 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 25
9999 mem: storing 1065 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1065
9999 mem: location 1065 is 9480
9999 mem: location 1066 is 245
9999 mem: location 1215 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1065
9999 mem: storing 9480 in location 1065
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1065
9999 mem: location 1065 is 9480
9999 mem: location 1066 is 245
9999 mem: location 1215 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1066
9999 mem: storing 245 in location 1066
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 5
9999 mem: storing 6 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 6
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 26 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 26
9999 mem: storing 1067 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1067
9999 mem: location 1067 is 9480
9999 mem: location 1068 is 245
9999 mem: location 1215 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1067
9999 mem: storing 9480 in location 1067
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1067
9999 mem: location 1067 is 9480
9999 mem: location 1068 is 245
9999 mem: location 1215 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1068
9999 mem: storing 245 in location 1068
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 6
9999 mem: storing 7 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 7
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 27 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 27
9999 mem: storing 1069 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1069
9999 mem: location 1069 is 9480
9999 mem: location 1070 is 245
9999 mem: location 1215 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1069
9999 mem: storing 9480 in location 1069
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1069
9999 mem: location 1069 is 9480
9999 mem: location 1070 is 245
9999 mem: location 1215 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1070
9999 mem: storing 245 in location 1070
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 7
9999 mem: storing 8 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 8
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 28 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 28
9999 mem: storing 1071 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1071
9999 mem: location 1071 is 9480
9999 mem: location 1072 is 245
9999 mem: location 1215 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1071
9999 mem: storing 9480 in location 1071
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1071
9999 mem: location 1071 is 9480
9999 mem: location 1072 is 245
9999 mem: location 1215 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1072
9999 mem: storing 245 in location 1072
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 8
9999 mem: storing 9 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 9
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 29 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 29
9999 mem: storing 1073 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1073
9999 mem: location 1073 is 9480
9999 mem: location 1074 is 245
9999 mem: location 1215 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1073
9999 mem: storing 9480 in location 1073
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1073
9999 mem: location 1073 is 9480
9999 mem: location 1074 is 245
9999 mem: location 1215 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1074
9999 mem: storing 245 in location 1074
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
9999 schedule: draw-horizontal/editor-render/editor-event-loop/run1003/scenario-editor-can-undo-and-redo-delete
 106 run: x <- add x, 1
9999 mem: location 1224 is 9
9999 mem: storing 10 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 10
9999 mem: location 1225 is 9
9999 mem: storing 0 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 27
9999 trace: fall-through: exiting draw-horizontal; decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1145 is 2
9999 mem: storing 3 in location 1145
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1141 is 1009
9999 mem: location 1145 is 3
9999 mem: location 1143 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1183
 106 run: row:number <- next-ingredient 
9999 mem: storing 3 in location 1184
 106 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 106 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1186
 106 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1187
 106 run: break-if screen, 
9999 mem: location 1183 is 1009
9999 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1183 is 1009
9999 mem: location 1184 is 3
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1236
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1237
 107 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1238
 107 run: *row <- copy new-row
9999 mem: location 1236 is 3
9999 mem: location 1238 is 1011
9999 mem: storing 3 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 107 run: *column <- copy new-column
9999 mem: location 1237 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1183
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1183 is 1009
9999 mem: location 1185 is 0
9999 mem: location 1187 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 107 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1190
 107 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1191
 107 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1192
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 0
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 30
9999 mem: storing 1075 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1075
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1215 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1075
9999 mem: storing 32 in location 1075
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1075
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1215 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1076
9999 mem: storing 7 in location 1076
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 0
9999 mem: storing 1 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 1
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 31
9999 mem: storing 1077 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1215 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1077
9999 mem: storing 32 in location 1077
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1215 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1078
9999 mem: storing 7 in location 1078
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 1
9999 mem: storing 2 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 2
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 32
9999 mem: storing 1079 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1215 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1079
9999 mem: storing 32 in location 1079
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1215 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1080
9999 mem: storing 7 in location 1080
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 2
9999 mem: storing 3 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 3
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 33
9999 mem: storing 1081 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1215 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1081
9999 mem: storing 32 in location 1081
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1215 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1082
9999 mem: storing 7 in location 1082
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 3
9999 mem: storing 4 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 4
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 34
9999 mem: storing 1083 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1215 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1083
9999 mem: storing 32 in location 1083
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1215 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1084
9999 mem: storing 7 in location 1084
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 4
9999 mem: storing 5 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 5
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 35 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 35
9999 mem: storing 1085 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1085
9999 mem: location 1085 is 32
9999 mem: location 1086 is 7
9999 mem: location 1215 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1085
9999 mem: storing 32 in location 1085
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1085
9999 mem: location 1085 is 32
9999 mem: location 1086 is 7
9999 mem: location 1215 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1086
9999 mem: storing 7 in location 1086
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 5
9999 mem: storing 6 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 6
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 36 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 36
9999 mem: storing 1087 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1087
9999 mem: location 1087 is 32
9999 mem: location 1088 is 7
9999 mem: location 1215 is 1087
9999 run: address to copy is 1087
9999 mem: storing 1087 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1087
9999 mem: storing 32 in location 1087
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1087
9999 mem: location 1087 is 32
9999 mem: location 1088 is 7
9999 mem: location 1215 is 1087
9999 run: address to copy is 1088
9999 mem: storing 1088 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1088
9999 mem: storing 7 in location 1088
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 6
9999 mem: storing 7 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 7
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 37 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 37
9999 mem: storing 1089 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1089
9999 mem: location 1089 is 32
9999 mem: location 1090 is 7
9999 mem: location 1215 is 1089
9999 run: address to copy is 1089
9999 mem: storing 1089 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1089
9999 mem: storing 32 in location 1089
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1089
9999 mem: location 1089 is 32
9999 mem: location 1090 is 7
9999 mem: location 1215 is 1089
9999 run: address to copy is 1090
9999 mem: storing 1090 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1090
9999 mem: storing 7 in location 1090
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 7
9999 mem: storing 8 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 8
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
9999 schedule: print-character/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run1003/scenario-editor-can-undo-and-redo-delete
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 38 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 38
9999 mem: storing 1091 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1091
9999 mem: location 1091 is 32
9999 mem: location 1092 is 7
9999 mem: location 1215 is 1091
9999 run: address to copy is 1091
9999 mem: storing 1091 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1091
9999 mem: storing 32 in location 1091
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1091
9999 mem: location 1091 is 32
9999 mem: location 1092 is 7
9999 mem: location 1215 is 1091
9999 run: address to copy is 1092
9999 mem: storing 1092 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1092
9999 mem: storing 7 in location 1092
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 8
9999 mem: storing 9 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 9
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 39 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 39
9999 mem: storing 1093 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1093
9999 mem: location 1093 is 32
9999 mem: location 1094 is 7
9999 mem: location 1215 is 1093
9999 run: address to copy is 1093
9999 mem: storing 1093 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1093
9999 mem: storing 32 in location 1093
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1093
9999 mem: location 1093 is 32
9999 mem: location 1094 is 7
9999 mem: location 1215 is 1093
9999 run: address to copy is 1094
9999 mem: storing 1094 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1094
9999 mem: storing 7 in location 1094
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 9
9999 mem: storing 10 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 10
9999 mem: location 1192 is 9
9999 mem: storing 1 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 1
9999 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1183 is 1009
9999 mem: location 1184 is 3
9999 mem: location 1186 is 0
9999 mem: location 1187 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 107 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1242
 107 run: row:number <- next-ingredient 
9999 mem: storing 3 in location 1243
 107 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1244
 107 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1245
 107 run: row <- add row, 1
9999 mem: location 1243 is 3
9999 mem: storing 4 in location 1243
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1242 is 1009
9999 mem: location 1243 is 4
9999 mem: location 1244 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 108 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1236
 108 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1237
 108 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1238
 108 run: *row <- copy new-row
9999 mem: location 1236 is 4
9999 mem: location 1238 is 1011
9999 mem: storing 4 in location 1011
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: *column <- copy new-column
9999 mem: location 1237 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 0 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
9999 trace: reply: decrementing callstack depth from 7
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1242
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1242 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1642
 108 run: break-unless sc, 
9999 mem: location 1642 is 1009
9999 run: jump-unless fell through
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1642 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1642 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1643
 108 run: reply height
9999 mem: location 1643 is 5
9999 trace: reply: decrementing callstack depth from 7
9999 run: result 0 is 5
9999 mem: storing 5 in location 1246
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1243 is 4
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1247
 107 run: break-if at-bottom-of-screen?, 
9999 mem: location 1247 is 0
9999 run: jump-if fell through
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1242 is 1009
9999 mem: location 1243 is 4
9999 mem: location 1244 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 108 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1236
 108 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1237
 108 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1238
 108 run: *row <- copy new-row
9999 mem: location 1236 is 4
9999 mem: location 1238 is 1011
9999 mem: storing 4 in location 1011
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: *column <- copy new-column
9999 mem: location 1237 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 0 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
9999 trace: reply: decrementing callstack depth from 7
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1242
 107 run: clear-line-delimited screen, left, right
9999 mem: location 1242 is 1009
9999 mem: location 1244 is 0
9999 mem: location 1245 is 9
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 108 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1190
 108 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1191
 108 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1192
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 0
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 40
9999 mem: storing 1095 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1095
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1215 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1095
9999 mem: storing 32 in location 1095
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1095
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1215 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1096
9999 mem: storing 7 in location 1096
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 0
9999 mem: storing 1 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 1
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 41
9999 mem: storing 1097 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1215 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1097
9999 mem: storing 32 in location 1097
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1215 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1098
9999 mem: storing 7 in location 1098
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 1
9999 mem: storing 2 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 2
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 42
9999 mem: storing 1099 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1215 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1099
9999 mem: storing 32 in location 1099
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1215 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1100
9999 mem: storing 7 in location 1100
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 2
9999 mem: storing 3 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 3
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 43
9999 mem: storing 1101 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1215 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1101
9999 mem: storing 32 in location 1101
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1215 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1102
9999 mem: storing 7 in location 1102
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 3
9999 mem: storing 4 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 4
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 44
9999 mem: storing 1103 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1215 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1103
9999 mem: storing 32 in location 1103
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1215 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1104
9999 mem: storing 7 in location 1104
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 4
9999 mem: storing 5 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 5
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 45 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 45
9999 mem: storing 1105 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1105
9999 mem: location 1105 is 32
9999 mem: location 1106 is 7
9999 mem: location 1215 is 1105
9999 run: address to copy is 1105
9999 mem: storing 1105 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1105
9999 mem: storing 32 in location 1105
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1105
9999 mem: location 1105 is 32
9999 mem: location 1106 is 7
9999 mem: location 1215 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1106
9999 mem: storing 7 in location 1106
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 5
9999 mem: storing 6 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 6
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
9999 schedule: print-character/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run1003/scenario-editor-can-undo-and-redo-delete
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 46 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 46
9999 mem: storing 1107 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1107
9999 mem: location 1107 is 32
9999 mem: location 1108 is 7
9999 mem: location 1215 is 1107
9999 run: address to copy is 1107
9999 mem: storing 1107 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1107
9999 mem: storing 32 in location 1107
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1107
9999 mem: location 1107 is 32
9999 mem: location 1108 is 7
9999 mem: location 1215 is 1107
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1108
9999 mem: storing 7 in location 1108
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 6
9999 mem: storing 7 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 7
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 47 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 47
9999 mem: storing 1109 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1109
9999 mem: location 1109 is 32
9999 mem: location 1110 is 7
9999 mem: location 1215 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1109
9999 mem: storing 32 in location 1109
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1109
9999 mem: location 1109 is 32
9999 mem: location 1110 is 7
9999 mem: location 1215 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1110
9999 mem: storing 7 in location 1110
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 7
9999 mem: storing 8 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 8
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 48 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 48
9999 mem: storing 1111 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1111
9999 mem: location 1111 is 32
9999 mem: location 1112 is 7
9999 mem: location 1215 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1111
9999 mem: storing 32 in location 1111
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1111
9999 mem: location 1111 is 32
9999 mem: location 1112 is 7
9999 mem: location 1215 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1112
9999 mem: storing 7 in location 1112
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 8
9999 mem: storing 9 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 9
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 49 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 49
9999 mem: storing 1113 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1113
9999 mem: location 1113 is 32
9999 mem: location 1114 is 7
9999 mem: location 1215 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1113
9999 mem: storing 32 in location 1113
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1113
9999 mem: location 1113 is 32
9999 mem: location 1114 is 7
9999 mem: location 1215 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1114
9999 mem: storing 7 in location 1114
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 9
9999 mem: storing 10 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 10
9999 mem: location 1192 is 9
9999 mem: storing 1 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 1
9999 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 7
 107 run: row <- add row, 1
9999 mem: location 1243 is 4
9999 mem: storing 5 in location 1243
 107 run: loop 
9999 run: jumping to instruction 9
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1243 is 5
9999 mem: location 1246 is 5
9999 mem: storing 1 in location 1247
 107 run: break-if at-bottom-of-screen?, 
9999 mem: location 1247 is 1
9999 run: jumping to instruction 15
9999 trace: fall-through: exiting clear-rest-of-screen; decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 trace: fall-through: exiting editor-render; decrementing callstack depth from 4
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1301
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 2 in location 1185
 105 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 105 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 105 run: *column <- copy new-column
9999 mem: location 1185 is 2
9999 mem: location 1187 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 104 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1638
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1638 in location 1222
 105 run: break-unless x, 
9999 mem: location 1222 is 1638
9999 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1638
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1633
9999 mem: location 1222 is 1638
9999 run: address to copy is 1638
9999 mem: storing 1638 in location 1223
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1638
9999 mem: location 1638 is 1
9999 mem: location 1639 is 1633
9999 mem: location 1222 is 1638
9999 run: address to copy is 1639
9999 run: its type is address
9999 mem: location 1639 is 1633
9999 mem: storing 1633 in location 1224
 105 run: max:number <- length *buf
9999 mem: location 1224 is 1633
9999 mem: storing 1 in location 1225
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1638
9999 mem: location 1638 is 1
9999 mem: location 1225 is 1
9999 mem: storing 1 in location 1226
 105 run: break-unless done?, 
9999 mem: location 1226 is 1
9999 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1640 in location 1227
 105 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1227 is 1640
9999 mem: location 1640 is 0
9999 mem: location 1641 is 0
9999 mem: location 1642 is 0
9999 mem: location 1643 is 0
9999 mem: location 1222 is 1638
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1638
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1638 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 1 in location 1307
 104 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 104 run: break-if quit?, 
9999 mem: location 1307 is 1
9999 run: jumping to instruction 28
9999 trace: fall-through: exiting editor-event-loop; decrementing callstack depth from 3
9999 trace: fall-through: exiting run1003; decrementing callstack depth from 2
 102 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 2 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 3
 102 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 2 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 4
 102 run: memory-should-contain [
    3 <- 1
    4 <- 2
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: screen-should-contain [
    .          .
    .abcdef    .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: assume-console [
    press ctrl-y
  ]
9999 parse: instruction: press
9999 parse:   ingredient: {"ctrl-y": <>}
 102 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
9999 parse: instruction: editor-event-loop
9999 parse:   ingredient: {"screen": "address"}
9999 parse:   ingredient: {"console": "address"}
9999 parse:   ingredient: {"2": <"address" : "editor-data">}
9999 after-brace: recipe run1004
9999 after-brace: editor-event-loop ...
9999 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1651
9999 mem: location 2 is 1115
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1297
 104 run: console:address <- next-ingredient 
9999 mem: storing 1651 in location 1298
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1299
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1301
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 2 in location 1185
 105 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 105 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 105 run: *column <- copy new-column
9999 mem: location 1185 is 2
9999 mem: location 1187 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 104 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1651
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1651 in location 1222
 105 run: break-unless x, 
9999 mem: location 1222 is 1651
9999 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1651
9999 mem: location 1651 is 0
9999 mem: location 1652 is 1646
9999 mem: location 1222 is 1651
9999 run: address to copy is 1651
9999 mem: storing 1651 in location 1223
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1651
9999 mem: location 1651 is 0
9999 mem: location 1652 is 1646
9999 mem: location 1222 is 1651
9999 run: address to copy is 1652
9999 run: its type is address
9999 mem: location 1652 is 1646
9999 mem: storing 1646 in location 1224
 105 run: max:number <- length *buf
9999 mem: location 1224 is 1646
9999 mem: storing 1 in location 1225
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1651
9999 mem: location 1651 is 0
9999 mem: location 1225 is 1
9999 mem: storing 0 in location 1226
 105 run: break-unless done?, 
9999 mem: location 1226 is 0
9999 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1224 is 1646
9999 mem: location 1223 is 1651
9999 mem: location 1651 is 0
9999 run: address to copy is 1647
9999 run: its type is event
9999 mem: location 1647 is 0
9999 mem: location 1648 is 25
9999 mem: location 1649 is 0
9999 mem: location 1650 is 0
9999 mem: storing 0 in location 1228
9999 mem: storing 25 in location 1229
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 105 run: *idx <- add *idx, 1
9999 mem: location 1223 is 1651
9999 mem: location 1651 is 0
9999 mem: location 1223 is 1651
9999 mem: storing 1 in location 1651
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1228 is 0
9999 mem: location 1229 is 25
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1222 is 1651
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is [0, 25, 0, 0]
9999 run: result 1 is 1651
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1302
9999 mem: storing 25 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1651 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 0 in location 1307
 104 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 104 run: break-if quit?, 
9999 mem: location 1307 is 0
9999 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1302 is 0
9999 mem: location 1303 is 25
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: storing 0 in location 1308
 104 run: break-unless t, 
9999 mem: location 1308 is 0
9999 run: jumping to instruction 18
 104 run: break-if t, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 mem: location 1302 is 0
9999 mem: location 1303 is 25
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1312
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1313
 105 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1314
9999 mem: storing 25 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
 105 run: jump-if editor, 1:offset
9999 mem: location 1313 is 1115
9999 run: jumping to instruction 6
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1653
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1655
 106 run: break-unless sc, 
9999 mem: location 1655 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1655 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1655 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1656
 106 run: reply width
9999 mem: location 1656 is 10
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 10
9999 mem: storing 10 in location 1318
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1655
 106 run: break-unless sc, 
9999 mem: location 1655 is 1009
9999 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1655 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1655 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1656
 106 run: reply height
9999 mem: location 1656 is 5
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1319
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 1313 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1320
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 1313 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1321
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 1313 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1322
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 1313 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1323
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 1313 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1324
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1325
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1326
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1314 is 0
9999 mem: location 1315 is 25
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 1315 in location 1327
 105 run: break-unless c, 
9999 mem: location 1327 is 1315
9999 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 25
9999 mem: storing 1 in location 1328
 105 run: break-unless redo?, 
9999 mem: location 1328 is 1
9999 run: jump-unless fell through
 105 run: redo:address:address:list <- get-address *editor, redo:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1644
9999 mem: location 1313 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1329
 105 run: break-unless *redo, 
9999 mem: location 1329 is 1125
9999 mem: location 1125 is 1644
9999 run: jump-unless fell through
 105 run: op:address:operation/skiptypecheck <- first *redo
9999 mem: location 1329 is 1125
9999 mem: location 1125 is 1644
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 1644 in location 1655
 106 run: result:location <- get *in, value:offset
9999 mem: location 1655 is 1644
9999 mem: location 1644 is 1514
9999 mem: location 1645 is 1631
9999 mem: location 1655 is 1644
9999 run: address to copy is 1644
9999 run: its type is number
9999 mem: location 1644 is 1514
9999 mem: storing 1514 in location 1656
 106 run: reply result
9999 mem: location 1656 is 1514
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1514
9999 mem: storing 1514 in location 1330
 105 run: *redo <- rest *redo
9999 mem: location 1329 is 1125
9999 mem: location 1125 is 1644
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 1644 in location 1655
 106 run: result:address:list <- get *in, next:offset
9999 mem: location 1655 is 1644
9999 mem: location 1644 is 1514
9999 mem: location 1645 is 1631
9999 mem: location 1655 is 1644
9999 run: address to copy is 1645
9999 run: its type is address
9999 mem: location 1645 is 1631
9999 mem: storing 1631 in location 1656
 106 run: reply result
9999 mem: location 1656 is 1631
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1631
9999 mem: location 1329 is 1125
9999 mem: storing 1631 in location 1125
 105 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 1631
9999 mem: location 1313 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1331
 105 run: *undo/skiptypecheck <- push op, *undo
9999 mem: location 1330 is 1514
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1497
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: x:location <- next-ingredient 
9999 mem: storing 1514 in location 1183
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 1497 in location 1184
 106 run: result:address:list <- new list:type
9999 mem: new alloc: 1657
9999 mem: storing 1657 in location 1185
 106 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1185 is 1657
9999 mem: location 1657 is 0
9999 mem: location 1658 is 0
9999 mem: location 1185 is 1657
9999 run: address to copy is 1657
9999 mem: storing 1657 in location 1186
 106 run: *val <- copy x
9999 mem: location 1183 is 1514
9999 mem: location 1186 is 1657
9999 mem: storing 1514 in location 1657
 106 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1185 is 1657
9999 mem: location 1657 is 1514
9999 mem: location 1658 is 0
9999 mem: location 1185 is 1657
9999 run: address to copy is 1658
9999 mem: storing 1658 in location 1187
 106 run: *next <- copy in
9999 mem: location 1184 is 1497
9999 mem: location 1187 is 1658
9999 mem: storing 1497 in location 1658
 106 run: reply result
9999 mem: location 1185 is 1657
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1657
9999 mem: location 1331 is 1124
9999 mem: storing 1657 in location 1124
 105 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1330 is 1514
9999 mem: location 1514 is 2
9999 mem: location 1515 is 1
9999 mem: location 1516 is 2
9999 mem: location 1517 is 1147
9999 mem: location 1518 is 1
9999 mem: location 1519 is 2
9999 mem: location 1520 is 1147
9999 mem: location 1521 is 1446
9999 mem: location 1522 is 1443
9999 mem: location 1523 is 1449
9999 mem: location 1524 is 2
9999 mem: location 1330 is 1514
9999 mem: storing 1515 in location 1332
 105 run: break-unless deletion, 
9999 mem: location 1332 is 1515
9999 run: jump-unless fell through
 105 run: start:address:duplex-list <- get *deletion, delete-from:offset
9999 mem: location 1332 is 1515
9999 mem: location 1515 is 1
9999 mem: location 1516 is 2
9999 mem: location 1517 is 1147
9999 mem: location 1518 is 1
9999 mem: location 1519 is 2
9999 mem: location 1520 is 1147
9999 mem: location 1521 is 1446
9999 mem: location 1522 is 1443
9999 mem: location 1523 is 1449
9999 mem: location 1524 is 2
9999 mem: location 1332 is 1515
9999 run: address to copy is 1522
9999 run: its type is address
9999 mem: location 1522 is 1443
9999 mem: storing 1443 in location 1333
 105 run: end:address:duplex-list <- get *deletion, delete-until:offset
9999 mem: location 1332 is 1515
9999 mem: location 1515 is 1
9999 mem: location 1516 is 2
9999 mem: location 1517 is 1147
9999 mem: location 1518 is 1
9999 mem: location 1519 is 2
9999 mem: location 1520 is 1147
9999 mem: location 1521 is 1446
9999 mem: location 1522 is 1443
9999 mem: location 1523 is 1449
9999 mem: location 1524 is 2
9999 mem: location 1332 is 1515
9999 run: address to copy is 1523
9999 run: its type is address
9999 mem: location 1523 is 1449
9999 mem: storing 1449 in location 1334
 105 run: remove-duplex-between start, end
9999 mem: location 1333 is 1443
9999 mem: location 1334 is 1449
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: start:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1183
 106 run: end:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1184
 106 run: jump-if start, 1:offset
9999 mem: location 1183 is 1443
9999 run: jumping to instruction 5
 106 run: next:address:address:duplex-list <- get-address *start, next:offset
9999 mem: location 1183 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1446
9999 mem: location 1445 is 1427
9999 mem: location 1183 is 1443
9999 run: address to copy is 1444
9999 mem: storing 1444 in location 1185
 106 run: nothing-to-delete?:boolean <- equal *next, end
9999 mem: location 1185 is 1444
9999 mem: location 1444 is 1446
9999 mem: location 1184 is 1449
9999 mem: storing 0 in location 1186
 106 run: jump-unless nothing-to-delete?, 1:offset
9999 mem: location 1186 is 0
9999 run: jumping to instruction 9
 106 run: prev:address:address:duplex-list <- get-address **next, prev:offset
9999 mem: location 1185 is 1444
9999 mem: location 1444 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 1449
9999 mem: location 1448 is 1443
9999 mem: location 1185 is 1444
9999 mem: location 1444 is 1446
9999 run: address to copy is 1448
9999 mem: storing 1448 in location 1187
 106 run: *prev <- copy 0
9999 mem: location 1187 is 1448
9999 mem: storing 0 in location 1448
 106 run: *next <- copy end
9999 mem: location 1184 is 1449
9999 mem: location 1185 is 1444
9999 mem: storing 1449 in location 1444
 106 run: jump-if end, 1:offset
9999 mem: location 1184 is 1449
9999 run: jumping to instruction 14
 106 run: prev <- get-address *end, prev:offset
9999 mem: location 1184 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1446
9999 mem: location 1184 is 1449
9999 run: address to copy is 1451
9999 mem: storing 1451 in location 1187
 106 run: next <- get-address **prev, next:offset
9999 mem: location 1187 is 1451
9999 mem: location 1451 is 1446
9999 mem: location 1446 is 99
9999 mem: location 1447 is 1449
9999 mem: location 1448 is 0
9999 mem: location 1187 is 1451
9999 mem: location 1451 is 1446
9999 run: address to copy is 1447
9999 mem: storing 1447 in location 1185
 106 run: *next <- copy 0
9999 mem: location 1185 is 1447
9999 mem: storing 0 in location 1447
 106 run: *prev <- copy start
9999 mem: location 1183 is 1443
9999 mem: location 1187 is 1451
9999 mem: storing 1443 in location 1451
 106 run: reply start
9999 mem: location 1183 is 1443
9999 trace: reply: decrementing callstack depth from 5
 105 run: *cursor-row <- get *deletion, after-row:offset
9999 mem: location 1332 is 1515
9999 mem: location 1515 is 1
9999 mem: location 1516 is 2
9999 mem: location 1517 is 1147
9999 mem: location 1518 is 1
9999 mem: location 1519 is 2
9999 mem: location 1520 is 1147
9999 mem: location 1521 is 1446
9999 mem: location 1522 is 1443
9999 mem: location 1523 is 1449
9999 mem: location 1524 is 2
9999 mem: location 1332 is 1515
9999 run: address to copy is 1518
9999 run: its type is number
9999 mem: location 1518 is 1
9999 mem: location 1323 is 1121
9999 mem: storing 1 in location 1121
 105 run: *cursor-column <- get *deletion, after-column:offset
9999 mem: location 1332 is 1515
9999 mem: location 1515 is 1
9999 mem: location 1516 is 2
9999 mem: location 1517 is 1147
9999 mem: location 1518 is 1
9999 mem: location 1519 is 2
9999 mem: location 1520 is 1147
9999 mem: location 1521 is 1446
9999 mem: location 1522 is 1443
9999 mem: location 1523 is 1449
9999 mem: location 1524 is 2
9999 mem: location 1332 is 1515
9999 run: address to copy is 1519
9999 run: its type is number
9999 mem: location 1519 is 2
9999 mem: location 1324 is 1122
9999 mem: storing 2 in location 1122
 105 run: top:address:address:duplex-list <- get-address *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1631
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1335
 105 run: *top <- get *deletion, after-top-of-screen:offset
9999 mem: location 1332 is 1515
9999 mem: location 1515 is 1
9999 mem: location 1516 is 2
9999 mem: location 1517 is 1147
9999 mem: location 1518 is 1
9999 mem: location 1519 is 2
9999 mem: location 1520 is 1147
9999 mem: location 1521 is 1446
9999 mem: location 1522 is 1443
9999 mem: location 1523 is 1449
9999 mem: location 1524 is 2
9999 mem: location 1332 is 1515
9999 run: address to copy is 1520
9999 run: its type is address
9999 mem: location 1520 is 1147
9999 mem: location 1335 is 1116
9999 mem: storing 1147 in location 1116
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1330 is 1514
9999 mem: location 1514 is 2
9999 mem: location 1515 is 1
9999 mem: location 1516 is 2
9999 mem: location 1517 is 1147
9999 mem: location 1518 is 1
9999 mem: location 1519 is 2
9999 mem: location 1520 is 1147
9999 mem: location 1521 is 1446
9999 mem: location 1522 is 1443
9999 mem: location 1523 is 1449
9999 mem: location 1524 is 2
9999 mem: location 1330 is 1514
9999 mem: storing 0 in location 1336
 105 run: break-unless move, 
9999 mem: location 1336 is 0
9999 run: jumping to instruction 48
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1330 is 1514
9999 mem: location 1514 is 2
9999 mem: location 1515 is 1
9999 mem: location 1516 is 2
9999 mem: location 1517 is 1147
9999 mem: location 1518 is 1
9999 mem: location 1519 is 2
9999 mem: location 1520 is 1147
9999 mem: location 1521 is 1446
9999 mem: location 1522 is 1443
9999 mem: location 1523 is 1449
9999 mem: location 1524 is 2
9999 mem: location 1330 is 1514
9999 mem: storing 0 in location 1337
 105 run: break-unless typing, 
9999 mem: location 1337 is 0
9999 run: jumping to instruction 58
 105 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 1/go-render
9999 mem: location 1312 is 1009
9999 mem: location 1313 is 1115
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 1
9999 mem: storing 1009 in location 1297
9999 mem: storing 1115 in location 1299
9999 mem: storing 1 in location 1309
 104 run: break-unless go-render?, 
9999 mem: location 1309 is 1
9999 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1141
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1142
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1142 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1631
9999 mem: location 1142 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1143
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1142 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1631
9999 mem: location 1142 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1144
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1141 is 1009
9999 mem: location 1142 is 1115
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1152
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1153
 106 run: jump-if editor, 1:offset
9999 mem: location 1153 is 1115
9999 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1631
9999 mem: location 1153 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1154
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1152 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1655
 107 run: break-unless sc, 
9999 mem: location 1655 is 1009
9999 run: jump-unless fell through
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1655 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1655 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1656
 107 run: reply height
9999 mem: location 1656 is 5
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 5
9999 mem: storing 5 in location 1155
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1631
9999 mem: location 1153 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1156
 106 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1631
9999 mem: location 1153 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1157
 106 run: prev:address:duplex-list <- copy curr
9999 mem: location 1157 is 1147
9999 mem: storing 1147 in location 1158
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1147
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1147 in location 1655
 107 run: jump-if in, 1:offset
9999 mem: location 1655 is 1147
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1655 is 1147
9999 mem: location 1147 is 167
9999 mem: location 1148 is 1427
9999 mem: location 1149 is 0
9999 mem: location 1655 is 1147
9999 run: address to copy is 1148
9999 run: its type is address
9999 mem: location 1148 is 1427
9999 mem: storing 1427 in location 1656
 107 run: reply result
9999 mem: location 1656 is 1427
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1427
9999 mem: storing 1427 in location 1157
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1159
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1160
 106 run: column:number <- copy left
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1161
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1631
9999 mem: location 1153 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1162
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1631
9999 mem: location 1153 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1163
 106 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1631
9999 mem: location 1153 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1164
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1152 is 1009
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 107 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 107 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 107 run: *column <- copy new-column
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1152
 106 run: break-unless curr, 
9999 mem: location 1157 is 1427
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 0
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 0 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 0
9999 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1443
9999 mem: location 1429 is 1147
9999 mem: location 1157 is 1427
9999 run: address to copy is 1427
9999 run: its type is character
9999 mem: location 1427 is 97
9999 mem: storing 97 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 97
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 97
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 97
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 97
9999 mem: storing 0 in location 1169
9999 schedule: render/editor-render/editor-event-loop/run1004/scenario-editor-can-undo-and-redo-delete
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 0
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 97
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 97
  90 print-character: 97 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 97
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 97
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 10
9999 mem: storing 1035 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1215 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 97
9999 mem: location 1216 is 1035
9999 mem: storing 97 in location 1035
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1215 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1036
9999 mem: storing 7 in location 1036
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1427
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1655
 107 run: jump-if in, 1:offset
9999 mem: location 1655 is 1427
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1655 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1443
9999 mem: location 1429 is 1147
9999 mem: location 1655 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1443
9999 mem: storing 1443 in location 1656
 107 run: reply result
9999 mem: location 1656 is 1443
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1443
9999 mem: storing 1443 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1147
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1147 in location 1655
 107 run: jump-if in, 1:offset
9999 mem: location 1655 is 1147
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1655 is 1147
9999 mem: location 1147 is 167
9999 mem: location 1148 is 1427
9999 mem: location 1149 is 0
9999 mem: location 1655 is 1147
9999 run: address to copy is 1148
9999 run: its type is address
9999 mem: location 1148 is 1427
9999 mem: storing 1427 in location 1656
 107 run: reply result
9999 mem: location 1656 is 1427
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1427
9999 mem: storing 1427 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 0
9999 mem: storing 1 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 1443
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 1
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 0 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 0
9999 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1449
9999 mem: location 1445 is 1427
9999 mem: location 1157 is 1443
9999 run: address to copy is 1443
9999 run: its type is character
9999 mem: location 1443 is 98
9999 mem: storing 98 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 98
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 98
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 98
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 98
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 1
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 98
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 98
  90 print-character: 98 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 98
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 98
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 11
9999 mem: storing 1037 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1215 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 98
9999 mem: location 1216 is 1037
9999 mem: storing 98 in location 1037
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1215 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1038
9999 mem: storing 7 in location 1038
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1443
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1655
 107 run: jump-if in, 1:offset
9999 mem: location 1655 is 1443
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1655 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1449
9999 mem: location 1445 is 1427
9999 mem: location 1655 is 1443
9999 run: address to copy is 1444
9999 run: its type is address
9999 mem: location 1444 is 1449
9999 mem: storing 1449 in location 1656
 107 run: reply result
9999 mem: location 1656 is 1449
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1449
9999 mem: storing 1449 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1427
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1655
 107 run: jump-if in, 1:offset
9999 mem: location 1655 is 1427
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1655 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1443
9999 mem: location 1429 is 1147
9999 mem: location 1655 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1443
9999 mem: storing 1443 in location 1656
 107 run: reply result
9999 mem: location 1656 is 1443
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1443
9999 mem: storing 1443 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 1
9999 mem: storing 2 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 1449
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 2
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 1 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 1
9999 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1158 is 1443
9999 mem: location 1164 is 1118
9999 mem: storing 1443 in location 1118
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1443
9999 mem: location 1157 is 1449
9999 run: address to copy is 1449
9999 run: its type is character
9999 mem: location 1449 is 100
9999 mem: storing 100 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 100
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 100
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 100
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 2
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 100
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 100
  90 print-character: 100 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 100
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 100
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 12
9999 mem: storing 1039 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 100
9999 mem: location 1216 is 1039
9999 mem: storing 100 in location 1039
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 100
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1040
9999 mem: storing 7 in location 1040
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1449
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1655
 107 run: jump-if in, 1:offset
9999 mem: location 1655 is 1449
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1655 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1443
9999 mem: location 1655 is 1449
9999 run: address to copy is 1450
9999 run: its type is address
9999 mem: location 1450 is 1452
9999 mem: storing 1452 in location 1656
 107 run: reply result
9999 mem: location 1656 is 1452
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1452
9999 mem: storing 1452 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1443
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1443 in location 1655
 107 run: jump-if in, 1:offset
9999 mem: location 1655 is 1443
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1655 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1449
9999 mem: location 1445 is 1427
9999 mem: location 1655 is 1443
9999 run: address to copy is 1444
9999 run: its type is address
9999 mem: location 1444 is 1449
9999 mem: storing 1449 in location 1656
 107 run: reply result
9999 mem: location 1656 is 1449
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1449
9999 mem: storing 1449 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 2
9999 mem: storing 3 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 1452
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 3
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 0 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 0
9999 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1157 is 1452
9999 run: address to copy is 1452
9999 run: its type is character
9999 mem: location 1452 is 101
9999 mem: storing 101 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 101
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 101
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 101
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 3
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 101
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 101
  90 print-character: 101 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 101
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 101
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 13
9999 mem: storing 1041 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1041
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1215 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 101
9999 mem: location 1216 is 1041
9999 mem: storing 101 in location 1041
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1041
9999 mem: location 1041 is 101
9999 mem: location 1042 is 7
9999 mem: location 1215 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1042
9999 mem: storing 7 in location 1042
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1452
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1655
 107 run: jump-if in, 1:offset
9999 mem: location 1655 is 1452
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1655 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1655 is 1452
9999 run: address to copy is 1453
9999 run: its type is address
9999 mem: location 1453 is 1455
9999 mem: storing 1455 in location 1656
 107 run: reply result
9999 mem: location 1656 is 1455
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1449
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1655
 107 run: jump-if in, 1:offset
9999 mem: location 1655 is 1449
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1655 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1443
9999 mem: location 1655 is 1449
9999 run: address to copy is 1450
9999 run: its type is address
9999 mem: location 1450 is 1452
9999 mem: storing 1452 in location 1656
 107 run: reply result
9999 mem: location 1656 is 1452
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1452
9999 mem: storing 1452 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 3
9999 mem: storing 4 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 1455
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 4
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 0 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 0
9999 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1157 is 1455
9999 run: address to copy is 1455
9999 run: its type is character
9999 mem: location 1455 is 102
9999 mem: storing 102 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 102
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 102
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 102
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 4
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 102
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 102
  90 print-character: 102 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 102
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 102
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 14
9999 mem: storing 1043 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1043
9999 mem: location 1043 is 101
9999 mem: location 1044 is 7
9999 mem: location 1215 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 102
9999 mem: location 1216 is 1043
9999 mem: storing 102 in location 1043
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1043
9999 mem: location 1043 is 102
9999 mem: location 1044 is 7
9999 mem: location 1215 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1044
9999 mem: storing 7 in location 1044
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
9999 schedule: print-character/render/editor-render/editor-event-loop/run1004/scenario-editor-can-undo-and-redo-delete
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1455
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1455 in location 1655
 107 run: jump-if in, 1:offset
9999 mem: location 1655 is 1455
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1655 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1655 is 1455
9999 run: address to copy is 1456
9999 run: its type is address
9999 mem: location 1456 is 0
9999 mem: storing 0 in location 1656
 107 run: reply result
9999 mem: location 1656 is 0
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 0
9999 mem: storing 0 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1452
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1655
 107 run: jump-if in, 1:offset
9999 mem: location 1655 is 1452
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1655 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1655 is 1452
9999 run: address to copy is 1453
9999 run: its type is address
9999 mem: location 1453 is 1455
9999 mem: storing 1455 in location 1656
 107 run: reply result
9999 mem: location 1656 is 1455
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 4
9999 mem: storing 5 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 0
9999 run: jumping to instruction 67
 106 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1631
9999 mem: location 1153 is 1115
9999 run: address to copy is 1117
9999 mem: storing 1117 in location 1172
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1157 is 0
9999 mem: location 1172 is 1117
9999 mem: storing 0 in location 1117
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1161 is 5
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 0 in location 1173
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1166 is 1
9999 mem: location 1173 is 0
9999 mem: storing 0 in location 1174
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1175
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: storing 0 in location 1176
 106 run: break-unless before-cursor?, 
9999 mem: location 1176 is 0
9999 run: jumping to instruction 80
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 5
9999 mem: location 1152 is 1009
9999 mem: location 1153 is 1115
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1
9999 run: result 1 is 5
9999 mem: storing 1 in location 1145
9999 mem: storing 5 in location 1146
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1141 is 1009
9999 mem: location 1146 is 5
9999 mem: location 1144 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1190
 106 run: column:number <- next-ingredient 
9999 mem: storing 5 in location 1191
 106 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1192
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 5
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 15
9999 mem: storing 1045 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1045
9999 mem: location 1045 is 102
9999 mem: location 1046 is 7
9999 mem: location 1215 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1045
9999 mem: storing 32 in location 1045
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1215 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1046
9999 mem: storing 7 in location 1046
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 5
9999 mem: storing 6 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 6
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 16
9999 mem: storing 1047 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1215 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1047
9999 mem: storing 32 in location 1047
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1215 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1048
9999 mem: storing 7 in location 1048
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 6
9999 mem: storing 7 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 7
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 17 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 17
9999 mem: storing 1049 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1215 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1049
9999 mem: storing 32 in location 1049
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1215 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1050
9999 mem: storing 7 in location 1050
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 7
9999 mem: storing 8 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 8
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 18 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 18
9999 mem: storing 1051 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1215 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1051
9999 mem: storing 32 in location 1051
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1215 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1052
9999 mem: storing 7 in location 1052
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 8
9999 mem: storing 9 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 9
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 19 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 19
9999 mem: storing 1053 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1215 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1053
9999 mem: storing 32 in location 1053
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1215 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1054
9999 mem: storing 7 in location 1054
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 9
9999 mem: storing 10 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 10
9999 mem: location 1192 is 9
9999 mem: storing 1 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 1
9999 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1145 is 1
9999 mem: storing 2 in location 1145
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1141 is 1009
9999 mem: location 1145 is 2
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1222
 106 run: row:number <- next-ingredient 
9999 mem: storing 2 in location 1223
 106 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 1224
 106 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1225
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1226
9999 mem: storing 1 in location 1227
 106 run: break-if style-found?, 
9999 mem: location 1227 is 1
9999 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1228
9999 mem: storing 0 in location 1229
 106 run: break-if color-found?, 
9999 mem: location 1229 is 0
9999 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1228
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 106 run: break-if bg-color-found?, 
9999 mem: location 1231 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1230
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1222 is 1009
9999 mem: location 1223 is 2
9999 mem: location 1224 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1184
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 107 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 107 run: *row <- copy new-row
9999 mem: location 1184 is 2
9999 mem: location 1186 is 1011
9999 mem: storing 2 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 107 run: *column <- copy new-column
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1222
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 0
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 20
9999 mem: storing 1055 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1055
9999 mem: location 1055 is 9480
9999 mem: location 1056 is 245
9999 mem: location 1215 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1055
9999 mem: storing 9480 in location 1055
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1055
9999 mem: location 1055 is 9480
9999 mem: location 1056 is 245
9999 mem: location 1215 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1056
9999 mem: storing 245 in location 1056
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 0
9999 mem: storing 1 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 1
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 21
9999 mem: storing 1057 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1057
9999 mem: location 1057 is 9480
9999 mem: location 1058 is 245
9999 mem: location 1215 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1057
9999 mem: storing 9480 in location 1057
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1057
9999 mem: location 1057 is 9480
9999 mem: location 1058 is 245
9999 mem: location 1215 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1058
9999 mem: storing 245 in location 1058
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 1
9999 mem: storing 2 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 2
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
9999 schedule: print-character/draw-horizontal/editor-render/editor-event-loop/run1004/scenario-editor-can-undo-and-redo-delete
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 22
9999 mem: storing 1059 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1059
9999 mem: location 1059 is 9480
9999 mem: location 1060 is 245
9999 mem: location 1215 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1059
9999 mem: storing 9480 in location 1059
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1059
9999 mem: location 1059 is 9480
9999 mem: location 1060 is 245
9999 mem: location 1215 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1060
9999 mem: storing 245 in location 1060
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 2
9999 mem: storing 3 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 3
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 23
9999 mem: storing 1061 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1061
9999 mem: location 1061 is 9480
9999 mem: location 1062 is 245
9999 mem: location 1215 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1061
9999 mem: storing 9480 in location 1061
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1061
9999 mem: location 1061 is 9480
9999 mem: location 1062 is 245
9999 mem: location 1215 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1062
9999 mem: storing 245 in location 1062
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 3
9999 mem: storing 4 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 4
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 24
9999 mem: storing 1063 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1063
9999 mem: location 1063 is 9480
9999 mem: location 1064 is 245
9999 mem: location 1215 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1063
9999 mem: storing 9480 in location 1063
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1063
9999 mem: location 1063 is 9480
9999 mem: location 1064 is 245
9999 mem: location 1215 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1064
9999 mem: storing 245 in location 1064
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 4
9999 mem: storing 5 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 5
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 25 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 25
9999 mem: storing 1065 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1065
9999 mem: location 1065 is 9480
9999 mem: location 1066 is 245
9999 mem: location 1215 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1065
9999 mem: storing 9480 in location 1065
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1065
9999 mem: location 1065 is 9480
9999 mem: location 1066 is 245
9999 mem: location 1215 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1066
9999 mem: storing 245 in location 1066
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 5
9999 mem: storing 6 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 6
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 26 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 26
9999 mem: storing 1067 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1067
9999 mem: location 1067 is 9480
9999 mem: location 1068 is 245
9999 mem: location 1215 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1067
9999 mem: storing 9480 in location 1067
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1067
9999 mem: location 1067 is 9480
9999 mem: location 1068 is 245
9999 mem: location 1215 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1068
9999 mem: storing 245 in location 1068
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 6
9999 mem: storing 7 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 7
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 27 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 27
9999 mem: storing 1069 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1069
9999 mem: location 1069 is 9480
9999 mem: location 1070 is 245
9999 mem: location 1215 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1069
9999 mem: storing 9480 in location 1069
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1069
9999 mem: location 1069 is 9480
9999 mem: location 1070 is 245
9999 mem: location 1215 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1070
9999 mem: storing 245 in location 1070
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 7
9999 mem: storing 8 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 8
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 28 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 28
9999 mem: storing 1071 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1071
9999 mem: location 1071 is 9480
9999 mem: location 1072 is 245
9999 mem: location 1215 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1071
9999 mem: storing 9480 in location 1071
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1071
9999 mem: location 1071 is 9480
9999 mem: location 1072 is 245
9999 mem: location 1215 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1072
9999 mem: storing 245 in location 1072
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 8
9999 mem: storing 9 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 9
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 29 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 29
9999 mem: storing 1073 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1073
9999 mem: location 1073 is 9480
9999 mem: location 1074 is 245
9999 mem: location 1215 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1073
9999 mem: storing 9480 in location 1073
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1073
9999 mem: location 1073 is 9480
9999 mem: location 1074 is 245
9999 mem: location 1215 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1074
9999 mem: storing 245 in location 1074
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 9
9999 mem: storing 10 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 10
9999 mem: location 1225 is 9
9999 mem: storing 0 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 27
9999 trace: fall-through: exiting draw-horizontal; decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1145 is 2
9999 mem: storing 3 in location 1145
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1141 is 1009
9999 mem: location 1145 is 3
9999 mem: location 1143 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1183
 106 run: row:number <- next-ingredient 
9999 mem: storing 3 in location 1184
 106 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 106 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1186
 106 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1187
 106 run: break-if screen, 
9999 mem: location 1183 is 1009
9999 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1183 is 1009
9999 mem: location 1184 is 3
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1236
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1237
 107 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1238
 107 run: *row <- copy new-row
9999 mem: location 1236 is 3
9999 mem: location 1238 is 1011
9999 mem: storing 3 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 107 run: *column <- copy new-column
9999 mem: location 1237 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1183
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1183 is 1009
9999 mem: location 1185 is 0
9999 mem: location 1187 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 107 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1190
 107 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1191
 107 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1192
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 0
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 30
9999 mem: storing 1075 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1075
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1215 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1075
9999 mem: storing 32 in location 1075
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1075
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1215 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1076
9999 mem: storing 7 in location 1076
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 0
9999 mem: storing 1 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 1
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
9999 schedule: print-character/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run1004/scenario-editor-can-undo-and-redo-delete
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 31
9999 mem: storing 1077 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1215 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1077
9999 mem: storing 32 in location 1077
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1215 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1078
9999 mem: storing 7 in location 1078
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 1
9999 mem: storing 2 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 2
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 32
9999 mem: storing 1079 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1215 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1079
9999 mem: storing 32 in location 1079
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1215 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1080
9999 mem: storing 7 in location 1080
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 2
9999 mem: storing 3 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 3
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 33
9999 mem: storing 1081 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1215 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1081
9999 mem: storing 32 in location 1081
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1215 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1082
9999 mem: storing 7 in location 1082
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 3
9999 mem: storing 4 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 4
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 34
9999 mem: storing 1083 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1215 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1083
9999 mem: storing 32 in location 1083
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1215 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1084
9999 mem: storing 7 in location 1084
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 4
9999 mem: storing 5 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 5
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 35 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 35
9999 mem: storing 1085 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1085
9999 mem: location 1085 is 32
9999 mem: location 1086 is 7
9999 mem: location 1215 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1085
9999 mem: storing 32 in location 1085
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1085
9999 mem: location 1085 is 32
9999 mem: location 1086 is 7
9999 mem: location 1215 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1086
9999 mem: storing 7 in location 1086
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 5
9999 mem: storing 6 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 6
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 36 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 36
9999 mem: storing 1087 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1087
9999 mem: location 1087 is 32
9999 mem: location 1088 is 7
9999 mem: location 1215 is 1087
9999 run: address to copy is 1087
9999 mem: storing 1087 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1087
9999 mem: storing 32 in location 1087
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1087
9999 mem: location 1087 is 32
9999 mem: location 1088 is 7
9999 mem: location 1215 is 1087
9999 run: address to copy is 1088
9999 mem: storing 1088 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1088
9999 mem: storing 7 in location 1088
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 6
9999 mem: storing 7 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 7
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 37 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 37
9999 mem: storing 1089 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1089
9999 mem: location 1089 is 32
9999 mem: location 1090 is 7
9999 mem: location 1215 is 1089
9999 run: address to copy is 1089
9999 mem: storing 1089 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1089
9999 mem: storing 32 in location 1089
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1089
9999 mem: location 1089 is 32
9999 mem: location 1090 is 7
9999 mem: location 1215 is 1089
9999 run: address to copy is 1090
9999 mem: storing 1090 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1090
9999 mem: storing 7 in location 1090
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 7
9999 mem: storing 8 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 8
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 38 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 38
9999 mem: storing 1091 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1091
9999 mem: location 1091 is 32
9999 mem: location 1092 is 7
9999 mem: location 1215 is 1091
9999 run: address to copy is 1091
9999 mem: storing 1091 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1091
9999 mem: storing 32 in location 1091
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1091
9999 mem: location 1091 is 32
9999 mem: location 1092 is 7
9999 mem: location 1215 is 1091
9999 run: address to copy is 1092
9999 mem: storing 1092 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1092
9999 mem: storing 7 in location 1092
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 8
9999 mem: storing 9 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 9
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 39 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 39
9999 mem: storing 1093 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1093
9999 mem: location 1093 is 32
9999 mem: location 1094 is 7
9999 mem: location 1215 is 1093
9999 run: address to copy is 1093
9999 mem: storing 1093 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1093
9999 mem: storing 32 in location 1093
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1093
9999 mem: location 1093 is 32
9999 mem: location 1094 is 7
9999 mem: location 1215 is 1093
9999 run: address to copy is 1094
9999 mem: storing 1094 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1094
9999 mem: storing 7 in location 1094
9999 schedule: print-character/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run1004/scenario-editor-can-undo-and-redo-delete
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 9
9999 mem: storing 10 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 10
9999 mem: location 1192 is 9
9999 mem: storing 1 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 1
9999 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1183 is 1009
9999 mem: location 1184 is 3
9999 mem: location 1186 is 0
9999 mem: location 1187 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 107 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1242
 107 run: row:number <- next-ingredient 
9999 mem: storing 3 in location 1243
 107 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1244
 107 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1245
 107 run: row <- add row, 1
9999 mem: location 1243 is 3
9999 mem: storing 4 in location 1243
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1242 is 1009
9999 mem: location 1243 is 4
9999 mem: location 1244 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 108 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1236
 108 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1237
 108 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1238
 108 run: *row <- copy new-row
9999 mem: location 1236 is 4
9999 mem: location 1238 is 1011
9999 mem: storing 4 in location 1011
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: *column <- copy new-column
9999 mem: location 1237 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 0 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
9999 trace: reply: decrementing callstack depth from 7
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1242
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1242 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1655
 108 run: break-unless sc, 
9999 mem: location 1655 is 1009
9999 run: jump-unless fell through
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1655 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1655 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1656
 108 run: reply height
9999 mem: location 1656 is 5
9999 trace: reply: decrementing callstack depth from 7
9999 run: result 0 is 5
9999 mem: storing 5 in location 1246
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1243 is 4
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1247
 107 run: break-if at-bottom-of-screen?, 
9999 mem: location 1247 is 0
9999 run: jump-if fell through
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1242 is 1009
9999 mem: location 1243 is 4
9999 mem: location 1244 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 108 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1236
 108 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1237
 108 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1238
 108 run: *row <- copy new-row
9999 mem: location 1236 is 4
9999 mem: location 1238 is 1011
9999 mem: storing 4 in location 1011
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: *column <- copy new-column
9999 mem: location 1237 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 0 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
9999 trace: reply: decrementing callstack depth from 7
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1242
 107 run: clear-line-delimited screen, left, right
9999 mem: location 1242 is 1009
9999 mem: location 1244 is 0
9999 mem: location 1245 is 9
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 108 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1190
 108 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1191
 108 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1192
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 0
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 40
9999 mem: storing 1095 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1095
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1215 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1095
9999 mem: storing 32 in location 1095
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1095
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1215 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1096
9999 mem: storing 7 in location 1096
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 0
9999 mem: storing 1 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 1
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 41
9999 mem: storing 1097 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1215 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1097
9999 mem: storing 32 in location 1097
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1215 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1098
9999 mem: storing 7 in location 1098
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 1
9999 mem: storing 2 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 2
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 42
9999 mem: storing 1099 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1215 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1099
9999 mem: storing 32 in location 1099
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1215 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1100
9999 mem: storing 7 in location 1100
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 2
9999 mem: storing 3 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 3
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 43
9999 mem: storing 1101 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1215 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1101
9999 mem: storing 32 in location 1101
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1215 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1102
9999 mem: storing 7 in location 1102
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 3
9999 mem: storing 4 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 4
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 44
9999 mem: storing 1103 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1215 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1103
9999 mem: storing 32 in location 1103
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1215 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1104
9999 mem: storing 7 in location 1104
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 4
9999 mem: storing 5 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 5
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 45 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 45
9999 mem: storing 1105 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1105
9999 mem: location 1105 is 32
9999 mem: location 1106 is 7
9999 mem: location 1215 is 1105
9999 run: address to copy is 1105
9999 mem: storing 1105 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1105
9999 mem: storing 32 in location 1105
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1105
9999 mem: location 1105 is 32
9999 mem: location 1106 is 7
9999 mem: location 1215 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1106
9999 mem: storing 7 in location 1106
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 5
9999 mem: storing 6 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 6
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 46 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 46
9999 mem: storing 1107 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1107
9999 mem: location 1107 is 32
9999 mem: location 1108 is 7
9999 mem: location 1215 is 1107
9999 run: address to copy is 1107
9999 mem: storing 1107 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1107
9999 mem: storing 32 in location 1107
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1107
9999 mem: location 1107 is 32
9999 mem: location 1108 is 7
9999 mem: location 1215 is 1107
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1108
9999 mem: storing 7 in location 1108
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 6
9999 mem: storing 7 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 7
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 47 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
9999 schedule: print-character/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run1004/scenario-editor-can-undo-and-redo-delete
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 47
9999 mem: storing 1109 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1109
9999 mem: location 1109 is 32
9999 mem: location 1110 is 7
9999 mem: location 1215 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1109
9999 mem: storing 32 in location 1109
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1109
9999 mem: location 1109 is 32
9999 mem: location 1110 is 7
9999 mem: location 1215 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1110
9999 mem: storing 7 in location 1110
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 7
9999 mem: storing 8 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 8
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 48 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 48
9999 mem: storing 1111 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1111
9999 mem: location 1111 is 32
9999 mem: location 1112 is 7
9999 mem: location 1215 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1111
9999 mem: storing 32 in location 1111
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1111
9999 mem: location 1111 is 32
9999 mem: location 1112 is 7
9999 mem: location 1215 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1112
9999 mem: storing 7 in location 1112
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 8
9999 mem: storing 9 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 9
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 49 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 49
9999 mem: storing 1113 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1113
9999 mem: location 1113 is 32
9999 mem: location 1114 is 7
9999 mem: location 1215 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1113
9999 mem: storing 32 in location 1113
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1113
9999 mem: location 1113 is 32
9999 mem: location 1114 is 7
9999 mem: location 1215 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1114
9999 mem: storing 7 in location 1114
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 9
9999 mem: storing 10 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 10
9999 mem: location 1192 is 9
9999 mem: storing 1 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 1
9999 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 7
 107 run: row <- add row, 1
9999 mem: location 1243 is 4
9999 mem: storing 5 in location 1243
 107 run: loop 
9999 run: jumping to instruction 9
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1243 is 5
9999 mem: location 1246 is 5
9999 mem: storing 1 in location 1247
 107 run: break-if at-bottom-of-screen?, 
9999 mem: location 1247 is 1
9999 run: jumping to instruction 15
9999 trace: fall-through: exiting clear-rest-of-screen; decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 trace: fall-through: exiting editor-render; decrementing callstack depth from 4
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1631
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1631
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1301
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 2 in location 1185
 105 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 105 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 105 run: *column <- copy new-column
9999 mem: location 1185 is 2
9999 mem: location 1187 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 104 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1651
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1651 in location 1222
 105 run: break-unless x, 
9999 mem: location 1222 is 1651
9999 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1651
9999 mem: location 1651 is 1
9999 mem: location 1652 is 1646
9999 mem: location 1222 is 1651
9999 run: address to copy is 1651
9999 mem: storing 1651 in location 1223
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1651
9999 mem: location 1651 is 1
9999 mem: location 1652 is 1646
9999 mem: location 1222 is 1651
9999 run: address to copy is 1652
9999 run: its type is address
9999 mem: location 1652 is 1646
9999 mem: storing 1646 in location 1224
 105 run: max:number <- length *buf
9999 mem: location 1224 is 1646
9999 mem: storing 1 in location 1225
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1651
9999 mem: location 1651 is 1
9999 mem: location 1225 is 1
9999 mem: storing 1 in location 1226
 105 run: break-unless done?, 
9999 mem: location 1226 is 1
9999 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1653 in location 1227
 105 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1227 is 1653
9999 mem: location 1653 is 0
9999 mem: location 1654 is 0
9999 mem: location 1655 is 0
9999 mem: location 1656 is 0
9999 mem: location 1222 is 1651
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1651
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1651 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 1 in location 1307
 104 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 104 run: break-if quit?, 
9999 mem: location 1307 is 1
9999 run: jumping to instruction 28
9999 trace: fall-through: exiting editor-event-loop; decrementing callstack depth from 3
9999 trace: fall-through: exiting run1004; decrementing callstack depth from 2
 102 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1631
9999 mem: location 2 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 3
 102 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1631
9999 mem: location 2 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 4
 102 run: memory-should-contain [
    3 <- 1
    4 <- 2
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: screen-should-contain [
    .          .
    .abdef     .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: assume-console [
    press ctrl-y
  ]
9999 parse: instruction: press
9999 parse:   ingredient: {"ctrl-y": <>}
 102 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
9999 parse: instruction: editor-event-loop
9999 parse:   ingredient: {"screen": "address"}
9999 parse:   ingredient: {"console": "address"}
9999 parse:   ingredient: {"2": <"address" : "editor-data">}
9999 after-brace: recipe run1005
9999 after-brace: editor-event-loop ...
9999 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1664
9999 mem: location 2 is 1115
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1297
 104 run: console:address <- next-ingredient 
9999 mem: storing 1664 in location 1298
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1299
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1631
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1631
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1301
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 2 in location 1185
 105 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 105 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 105 run: *column <- copy new-column
9999 mem: location 1185 is 2
9999 mem: location 1187 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 104 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1664
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1664 in location 1222
 105 run: break-unless x, 
9999 mem: location 1222 is 1664
9999 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1664
9999 mem: location 1664 is 0
9999 mem: location 1665 is 1659
9999 mem: location 1222 is 1664
9999 run: address to copy is 1664
9999 mem: storing 1664 in location 1223
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1664
9999 mem: location 1664 is 0
9999 mem: location 1665 is 1659
9999 mem: location 1222 is 1664
9999 run: address to copy is 1665
9999 run: its type is address
9999 mem: location 1665 is 1659
9999 mem: storing 1659 in location 1224
 105 run: max:number <- length *buf
9999 mem: location 1224 is 1659
9999 mem: storing 1 in location 1225
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1664
9999 mem: location 1664 is 0
9999 mem: location 1225 is 1
9999 mem: storing 0 in location 1226
 105 run: break-unless done?, 
9999 mem: location 1226 is 0
9999 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1224 is 1659
9999 mem: location 1223 is 1664
9999 mem: location 1664 is 0
9999 run: address to copy is 1660
9999 run: its type is event
9999 mem: location 1660 is 0
9999 mem: location 1661 is 25
9999 mem: location 1662 is 0
9999 mem: location 1663 is 0
9999 mem: storing 0 in location 1228
9999 mem: storing 25 in location 1229
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 105 run: *idx <- add *idx, 1
9999 mem: location 1223 is 1664
9999 mem: location 1664 is 0
9999 mem: location 1223 is 1664
9999 mem: storing 1 in location 1664
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1228 is 0
9999 mem: location 1229 is 25
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1222 is 1664
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is [0, 25, 0, 0]
9999 run: result 1 is 1664
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1302
9999 mem: storing 25 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1664 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 0 in location 1307
 104 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 104 run: break-if quit?, 
9999 mem: location 1307 is 0
9999 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1302 is 0
9999 mem: location 1303 is 25
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: storing 0 in location 1308
 104 run: break-unless t, 
9999 mem: location 1308 is 0
9999 run: jumping to instruction 18
 104 run: break-if t, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 mem: location 1302 is 0
9999 mem: location 1303 is 25
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1312
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1313
 105 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1314
9999 mem: storing 25 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
 105 run: jump-if editor, 1:offset
9999 mem: location 1313 is 1115
9999 run: jumping to instruction 6
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1666
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1668
 106 run: break-unless sc, 
9999 mem: location 1668 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1668 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1668 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1669
 106 run: reply width
9999 mem: location 1669 is 10
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 10
9999 mem: storing 10 in location 1318
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1668
 106 run: break-unless sc, 
9999 mem: location 1668 is 1009
9999 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1668 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1668 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1669
 106 run: reply height
9999 mem: location 1669 is 5
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1319
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1631
9999 mem: location 1313 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1320
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1631
9999 mem: location 1313 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1321
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1631
9999 mem: location 1313 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1322
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1631
9999 mem: location 1313 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1323
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1631
9999 mem: location 1313 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1324
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1325
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1326
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1314 is 0
9999 mem: location 1315 is 25
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 1315 in location 1327
 105 run: break-unless c, 
9999 mem: location 1327 is 1315
9999 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 25
9999 mem: storing 1 in location 1328
 105 run: break-unless redo?, 
9999 mem: location 1328 is 1
9999 run: jump-unless fell through
 105 run: redo:address:address:list <- get-address *editor, redo:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1631
9999 mem: location 1313 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1329
 105 run: break-unless *redo, 
9999 mem: location 1329 is 1125
9999 mem: location 1125 is 1631
9999 run: jump-unless fell through
 105 run: op:address:operation/skiptypecheck <- first *redo
9999 mem: location 1329 is 1125
9999 mem: location 1125 is 1631
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 1631 in location 1668
 106 run: result:location <- get *in, value:offset
9999 mem: location 1668 is 1631
9999 mem: location 1631 is 1565
9999 mem: location 1632 is 1607
9999 mem: location 1668 is 1631
9999 run: address to copy is 1631
9999 run: its type is number
9999 mem: location 1631 is 1565
9999 mem: storing 1565 in location 1669
 106 run: reply result
9999 mem: location 1669 is 1565
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1565
9999 mem: storing 1565 in location 1330
 105 run: *redo <- rest *redo
9999 mem: location 1329 is 1125
9999 mem: location 1125 is 1631
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 1631 in location 1668
 106 run: result:address:list <- get *in, next:offset
9999 mem: location 1668 is 1631
9999 mem: location 1631 is 1565
9999 mem: location 1632 is 1607
9999 mem: location 1668 is 1631
9999 run: address to copy is 1632
9999 run: its type is address
9999 mem: location 1632 is 1607
9999 mem: storing 1607 in location 1669
 106 run: reply result
9999 mem: location 1669 is 1607
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1607
9999 mem: location 1329 is 1125
9999 mem: storing 1607 in location 1125
 105 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1657
9999 mem: location 1125 is 1607
9999 mem: location 1313 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1331
 105 run: *undo/skiptypecheck <- push op, *undo
9999 mem: location 1330 is 1565
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1657
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: x:location <- next-ingredient 
9999 mem: storing 1565 in location 1183
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 1657 in location 1184
 106 run: result:address:list <- new list:type
9999 mem: new alloc: 1670
9999 mem: storing 1670 in location 1185
 106 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1185 is 1670
9999 mem: location 1670 is 0
9999 mem: location 1671 is 0
9999 mem: location 1185 is 1670
9999 run: address to copy is 1670
9999 mem: storing 1670 in location 1186
 106 run: *val <- copy x
9999 mem: location 1183 is 1565
9999 mem: location 1186 is 1670
9999 mem: storing 1565 in location 1670
 106 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1185 is 1670
9999 mem: location 1670 is 1565
9999 mem: location 1671 is 0
9999 mem: location 1185 is 1670
9999 run: address to copy is 1671
9999 mem: storing 1671 in location 1187
 106 run: *next <- copy in
9999 mem: location 1184 is 1657
9999 mem: location 1187 is 1671
9999 mem: storing 1657 in location 1671
 106 run: reply result
9999 mem: location 1185 is 1670
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1670
9999 mem: location 1331 is 1124
9999 mem: storing 1670 in location 1124
 105 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1330 is 1565
9999 mem: location 1565 is 2
9999 mem: location 1566 is 1
9999 mem: location 1567 is 2
9999 mem: location 1568 is 1147
9999 mem: location 1569 is 1
9999 mem: location 1570 is 1
9999 mem: location 1571 is 1147
9999 mem: location 1572 is 1443
9999 mem: location 1573 is 1427
9999 mem: location 1574 is 1449
9999 mem: location 1575 is 1
9999 mem: location 1330 is 1565
9999 mem: storing 1566 in location 1332
 105 run: break-unless deletion, 
9999 mem: location 1332 is 1566
9999 run: jump-unless fell through
 105 run: start:address:duplex-list <- get *deletion, delete-from:offset
9999 mem: location 1332 is 1566
9999 mem: location 1566 is 1
9999 mem: location 1567 is 2
9999 mem: location 1568 is 1147
9999 mem: location 1569 is 1
9999 mem: location 1570 is 1
9999 mem: location 1571 is 1147
9999 mem: location 1572 is 1443
9999 mem: location 1573 is 1427
9999 mem: location 1574 is 1449
9999 mem: location 1575 is 1
9999 mem: location 1332 is 1566
9999 run: address to copy is 1573
9999 run: its type is address
9999 mem: location 1573 is 1427
9999 mem: storing 1427 in location 1333
 105 run: end:address:duplex-list <- get *deletion, delete-until:offset
9999 mem: location 1332 is 1566
9999 mem: location 1566 is 1
9999 mem: location 1567 is 2
9999 mem: location 1568 is 1147
9999 mem: location 1569 is 1
9999 mem: location 1570 is 1
9999 mem: location 1571 is 1147
9999 mem: location 1572 is 1443
9999 mem: location 1573 is 1427
9999 mem: location 1574 is 1449
9999 mem: location 1575 is 1
9999 mem: location 1332 is 1566
9999 run: address to copy is 1574
9999 run: its type is address
9999 mem: location 1574 is 1449
9999 mem: storing 1449 in location 1334
 105 run: remove-duplex-between start, end
9999 mem: location 1333 is 1427
9999 mem: location 1334 is 1449
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: start:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1183
 106 run: end:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1184
 106 run: jump-if start, 1:offset
9999 mem: location 1183 is 1427
9999 run: jumping to instruction 5
 106 run: next:address:address:duplex-list <- get-address *start, next:offset
9999 mem: location 1183 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1443
9999 mem: location 1429 is 1147
9999 mem: location 1183 is 1427
9999 run: address to copy is 1428
9999 mem: storing 1428 in location 1185
 106 run: nothing-to-delete?:boolean <- equal *next, end
9999 mem: location 1185 is 1428
9999 mem: location 1428 is 1443
9999 mem: location 1184 is 1449
9999 mem: storing 0 in location 1186
 106 run: jump-unless nothing-to-delete?, 1:offset
9999 mem: location 1186 is 0
9999 run: jumping to instruction 9
 106 run: prev:address:address:duplex-list <- get-address **next, prev:offset
9999 mem: location 1185 is 1428
9999 mem: location 1428 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1449
9999 mem: location 1445 is 1427
9999 mem: location 1185 is 1428
9999 mem: location 1428 is 1443
9999 run: address to copy is 1445
9999 mem: storing 1445 in location 1187
 106 run: *prev <- copy 0
9999 mem: location 1187 is 1445
9999 mem: storing 0 in location 1445
 106 run: *next <- copy end
9999 mem: location 1184 is 1449
9999 mem: location 1185 is 1428
9999 mem: storing 1449 in location 1428
 106 run: jump-if end, 1:offset
9999 mem: location 1184 is 1449
9999 run: jumping to instruction 14
 106 run: prev <- get-address *end, prev:offset
9999 mem: location 1184 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1443
9999 mem: location 1184 is 1449
9999 run: address to copy is 1451
9999 mem: storing 1451 in location 1187
 106 run: next <- get-address **prev, next:offset
9999 mem: location 1187 is 1451
9999 mem: location 1451 is 1443
9999 mem: location 1443 is 98
9999 mem: location 1444 is 1449
9999 mem: location 1445 is 0
9999 mem: location 1187 is 1451
9999 mem: location 1451 is 1443
9999 run: address to copy is 1444
9999 mem: storing 1444 in location 1185
 106 run: *next <- copy 0
9999 mem: location 1185 is 1444
9999 mem: storing 0 in location 1444
 106 run: *prev <- copy start
9999 mem: location 1183 is 1427
9999 mem: location 1187 is 1451
9999 mem: storing 1427 in location 1451
 106 run: reply start
9999 mem: location 1183 is 1427
9999 trace: reply: decrementing callstack depth from 5
 105 run: *cursor-row <- get *deletion, after-row:offset
9999 mem: location 1332 is 1566
9999 mem: location 1566 is 1
9999 mem: location 1567 is 2
9999 mem: location 1568 is 1147
9999 mem: location 1569 is 1
9999 mem: location 1570 is 1
9999 mem: location 1571 is 1147
9999 mem: location 1572 is 1443
9999 mem: location 1573 is 1427
9999 mem: location 1574 is 1449
9999 mem: location 1575 is 1
9999 mem: location 1332 is 1566
9999 run: address to copy is 1569
9999 run: its type is number
9999 mem: location 1569 is 1
9999 mem: location 1323 is 1121
9999 mem: storing 1 in location 1121
 105 run: *cursor-column <- get *deletion, after-column:offset
9999 mem: location 1332 is 1566
9999 mem: location 1566 is 1
9999 mem: location 1567 is 2
9999 mem: location 1568 is 1147
9999 mem: location 1569 is 1
9999 mem: location 1570 is 1
9999 mem: location 1571 is 1147
9999 mem: location 1572 is 1443
9999 mem: location 1573 is 1427
9999 mem: location 1574 is 1449
9999 mem: location 1575 is 1
9999 mem: location 1332 is 1566
9999 run: address to copy is 1570
9999 run: its type is number
9999 mem: location 1570 is 1
9999 mem: location 1324 is 1122
9999 mem: storing 1 in location 1122
 105 run: top:address:address:duplex-list <- get-address *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 1607
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1335
 105 run: *top <- get *deletion, after-top-of-screen:offset
9999 mem: location 1332 is 1566
9999 mem: location 1566 is 1
9999 mem: location 1567 is 2
9999 mem: location 1568 is 1147
9999 mem: location 1569 is 1
9999 mem: location 1570 is 1
9999 mem: location 1571 is 1147
9999 mem: location 1572 is 1443
9999 mem: location 1573 is 1427
9999 mem: location 1574 is 1449
9999 mem: location 1575 is 1
9999 mem: location 1332 is 1566
9999 run: address to copy is 1571
9999 run: its type is address
9999 mem: location 1571 is 1147
9999 mem: location 1335 is 1116
9999 mem: storing 1147 in location 1116
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1330 is 1565
9999 mem: location 1565 is 2
9999 mem: location 1566 is 1
9999 mem: location 1567 is 2
9999 mem: location 1568 is 1147
9999 mem: location 1569 is 1
9999 mem: location 1570 is 1
9999 mem: location 1571 is 1147
9999 mem: location 1572 is 1443
9999 mem: location 1573 is 1427
9999 mem: location 1574 is 1449
9999 mem: location 1575 is 1
9999 mem: location 1330 is 1565
9999 mem: storing 0 in location 1336
 105 run: break-unless move, 
9999 mem: location 1336 is 0
9999 run: jumping to instruction 48
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1330 is 1565
9999 mem: location 1565 is 2
9999 mem: location 1566 is 1
9999 mem: location 1567 is 2
9999 mem: location 1568 is 1147
9999 mem: location 1569 is 1
9999 mem: location 1570 is 1
9999 mem: location 1571 is 1147
9999 mem: location 1572 is 1443
9999 mem: location 1573 is 1427
9999 mem: location 1574 is 1449
9999 mem: location 1575 is 1
9999 mem: location 1330 is 1565
9999 mem: storing 0 in location 1337
 105 run: break-unless typing, 
9999 mem: location 1337 is 0
9999 run: jumping to instruction 58
 105 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 1/go-render
9999 mem: location 1312 is 1009
9999 mem: location 1313 is 1115
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 1
9999 mem: storing 1009 in location 1297
9999 mem: storing 1115 in location 1299
9999 mem: storing 1 in location 1309
 104 run: break-unless go-render?, 
9999 mem: location 1309 is 1
9999 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1141
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1142
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1142 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 1607
9999 mem: location 1142 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1143
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1142 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 1607
9999 mem: location 1142 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1144
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1141 is 1009
9999 mem: location 1142 is 1115
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1152
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1153
 106 run: jump-if editor, 1:offset
9999 mem: location 1153 is 1115
9999 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 1607
9999 mem: location 1153 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1154
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1152 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1668
 107 run: break-unless sc, 
9999 mem: location 1668 is 1009
9999 run: jump-unless fell through
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1668 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1668 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1669
 107 run: reply height
9999 mem: location 1669 is 5
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 5
9999 mem: storing 5 in location 1155
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 1607
9999 mem: location 1153 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1156
 106 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 1607
9999 mem: location 1153 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1157
 106 run: prev:address:duplex-list <- copy curr
9999 mem: location 1157 is 1147
9999 mem: storing 1147 in location 1158
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1147
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1147 in location 1668
 107 run: jump-if in, 1:offset
9999 mem: location 1668 is 1147
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1668 is 1147
9999 mem: location 1147 is 167
9999 mem: location 1148 is 1427
9999 mem: location 1149 is 0
9999 mem: location 1668 is 1147
9999 run: address to copy is 1148
9999 run: its type is address
9999 mem: location 1148 is 1427
9999 mem: storing 1427 in location 1669
 107 run: reply result
9999 mem: location 1669 is 1427
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1427
9999 mem: storing 1427 in location 1157
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1159
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1160
 106 run: column:number <- copy left
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1161
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 1607
9999 mem: location 1153 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1162
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 1607
9999 mem: location 1153 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1163
 106 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1443
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 1607
9999 mem: location 1153 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1164
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1152 is 1009
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 107 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 107 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 107 run: *column <- copy new-column
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1152
 106 run: break-unless curr, 
9999 mem: location 1157 is 1427
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 0
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 0
9999 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1449
9999 mem: location 1429 is 1147
9999 mem: location 1157 is 1427
9999 run: address to copy is 1427
9999 run: its type is character
9999 mem: location 1427 is 97
9999 mem: storing 97 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 97
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 97
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 97
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 97
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 0
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 97
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 97
  90 print-character: 97 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 97
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 97
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 10
9999 mem: storing 1035 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1215 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 97
9999 mem: location 1216 is 1035
9999 mem: storing 97 in location 1035
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1215 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1036
9999 mem: storing 7 in location 1036
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1427
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1668
 107 run: jump-if in, 1:offset
9999 mem: location 1668 is 1427
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1668 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1449
9999 mem: location 1429 is 1147
9999 mem: location 1668 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1449
9999 mem: storing 1449 in location 1669
 107 run: reply result
9999 mem: location 1669 is 1449
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1449
9999 mem: storing 1449 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1147
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1147 in location 1668
 107 run: jump-if in, 1:offset
9999 mem: location 1668 is 1147
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1668 is 1147
9999 mem: location 1147 is 167
9999 mem: location 1148 is 1427
9999 mem: location 1149 is 0
9999 mem: location 1668 is 1147
9999 run: address to copy is 1148
9999 run: its type is address
9999 mem: location 1148 is 1427
9999 mem: storing 1427 in location 1669
 107 run: reply result
9999 mem: location 1669 is 1427
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1427
9999 mem: storing 1427 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 0
9999 mem: storing 1 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 1449
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 1
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 1
9999 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1158 is 1427
9999 mem: location 1164 is 1118
9999 mem: storing 1427 in location 1118
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1427
9999 mem: location 1157 is 1449
9999 run: address to copy is 1449
9999 run: its type is character
9999 mem: location 1449 is 100
9999 mem: storing 100 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 100
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
9999 schedule: get-color/render/editor-render/editor-event-loop/run1005/scenario-editor-can-undo-and-redo-delete
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 100
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 100
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 1
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 100
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 100
  90 print-character: 100 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 100
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 100
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 11
9999 mem: storing 1037 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1215 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 100
9999 mem: location 1216 is 1037
9999 mem: storing 100 in location 1037
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1037
9999 mem: location 1037 is 100
9999 mem: location 1038 is 7
9999 mem: location 1215 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1038
9999 mem: storing 7 in location 1038
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1449
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1668
 107 run: jump-if in, 1:offset
9999 mem: location 1668 is 1449
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1668 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1427
9999 mem: location 1668 is 1449
9999 run: address to copy is 1450
9999 run: its type is address
9999 mem: location 1450 is 1452
9999 mem: storing 1452 in location 1669
 107 run: reply result
9999 mem: location 1669 is 1452
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1452
9999 mem: storing 1452 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1427
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1668
 107 run: jump-if in, 1:offset
9999 mem: location 1668 is 1427
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1668 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1449
9999 mem: location 1429 is 1147
9999 mem: location 1668 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1449
9999 mem: storing 1449 in location 1669
 107 run: reply result
9999 mem: location 1669 is 1449
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1449
9999 mem: storing 1449 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 1
9999 mem: storing 2 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 1452
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 2
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 0
9999 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1157 is 1452
9999 run: address to copy is 1452
9999 run: its type is character
9999 mem: location 1452 is 101
9999 mem: storing 101 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 101
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 101
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 101
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 2
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 101
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 101
  90 print-character: 101 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 101
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 101
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 12
9999 mem: storing 1039 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 100
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 101
9999 mem: location 1216 is 1039
9999 mem: storing 101 in location 1039
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 101
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1040
9999 mem: storing 7 in location 1040
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1452
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1668
 107 run: jump-if in, 1:offset
9999 mem: location 1668 is 1452
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1668 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1668 is 1452
9999 run: address to copy is 1453
9999 run: its type is address
9999 mem: location 1453 is 1455
9999 mem: storing 1455 in location 1669
 107 run: reply result
9999 mem: location 1669 is 1455
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1449
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1449 in location 1668
 107 run: jump-if in, 1:offset
9999 mem: location 1668 is 1449
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1668 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1427
9999 mem: location 1668 is 1449
9999 run: address to copy is 1450
9999 run: its type is address
9999 mem: location 1450 is 1452
9999 mem: storing 1452 in location 1669
 107 run: reply result
9999 mem: location 1669 is 1452
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1452
9999 mem: storing 1452 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 2
9999 mem: storing 3 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 1455
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 3
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 0
9999 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1157 is 1455
9999 run: address to copy is 1455
9999 run: its type is character
9999 mem: location 1455 is 102
9999 mem: storing 102 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 102
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 102
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 102
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 3
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 102
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 102
  90 print-character: 102 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 102
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 102
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 13
9999 mem: storing 1041 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1041
9999 mem: location 1041 is 101
9999 mem: location 1042 is 7
9999 mem: location 1215 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 102
9999 mem: location 1216 is 1041
9999 mem: storing 102 in location 1041
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1041
9999 mem: location 1041 is 102
9999 mem: location 1042 is 7
9999 mem: location 1215 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1042
9999 mem: storing 7 in location 1042
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1455
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1455 in location 1668
 107 run: jump-if in, 1:offset
9999 mem: location 1668 is 1455
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1668 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1668 is 1455
9999 run: address to copy is 1456
9999 run: its type is address
9999 mem: location 1456 is 0
9999 mem: storing 0 in location 1669
 107 run: reply result
9999 mem: location 1669 is 0
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 0
9999 mem: storing 0 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1452
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1452 in location 1668
 107 run: jump-if in, 1:offset
9999 mem: location 1668 is 1452
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1668 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1668 is 1452
9999 run: address to copy is 1453
9999 run: its type is address
9999 mem: location 1453 is 1455
9999 mem: storing 1455 in location 1669
 107 run: reply result
9999 mem: location 1669 is 1455
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 3
9999 mem: storing 4 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 0
9999 run: jumping to instruction 67
 106 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 1607
9999 mem: location 1153 is 1115
9999 run: address to copy is 1117
9999 mem: storing 1117 in location 1172
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1157 is 0
9999 mem: location 1172 is 1117
9999 mem: storing 0 in location 1117
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1161 is 4
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1173
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1166 is 1
9999 mem: location 1173 is 0
9999 mem: storing 0 in location 1174
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1175
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: storing 0 in location 1176
 106 run: break-unless before-cursor?, 
9999 mem: location 1176 is 0
9999 run: jumping to instruction 80
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1152 is 1009
9999 mem: location 1153 is 1115
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1
9999 run: result 1 is 4
9999 mem: storing 1 in location 1145
9999 mem: storing 4 in location 1146
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1141 is 1009
9999 mem: location 1146 is 4
9999 mem: location 1144 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1190
 106 run: column:number <- next-ingredient 
9999 mem: storing 4 in location 1191
 106 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1192
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 4
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 14
9999 mem: storing 1043 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1043
9999 mem: location 1043 is 102
9999 mem: location 1044 is 7
9999 mem: location 1215 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1043
9999 mem: storing 32 in location 1043
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1215 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1044
9999 mem: storing 7 in location 1044
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 4
9999 mem: storing 5 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 5
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 15
9999 mem: storing 1045 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1215 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1045
9999 mem: storing 32 in location 1045
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1215 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1046
9999 mem: storing 7 in location 1046
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 5
9999 mem: storing 6 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 6
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 16
9999 mem: storing 1047 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1215 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1047
9999 mem: storing 32 in location 1047
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1215 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1048
9999 mem: storing 7 in location 1048
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
9999 schedule: clear-line-delimited/editor-render/editor-event-loop/run1005/scenario-editor-can-undo-and-redo-delete
 106 run: column <- add column, 1
9999 mem: location 1191 is 6
9999 mem: storing 7 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 7
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 17 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 17
9999 mem: storing 1049 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1215 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1049
9999 mem: storing 32 in location 1049
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1215 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1050
9999 mem: storing 7 in location 1050
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 7
9999 mem: storing 8 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 8
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 18 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 18
9999 mem: storing 1051 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1215 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1051
9999 mem: storing 32 in location 1051
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1215 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1052
9999 mem: storing 7 in location 1052
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 8
9999 mem: storing 9 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 9
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 19 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 19
9999 mem: storing 1053 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1215 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1053
9999 mem: storing 32 in location 1053
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1215 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1054
9999 mem: storing 7 in location 1054
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 9
9999 mem: storing 10 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 10
9999 mem: location 1192 is 9
9999 mem: storing 1 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 1
9999 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1145 is 1
9999 mem: storing 2 in location 1145
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1141 is 1009
9999 mem: location 1145 is 2
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1222
 106 run: row:number <- next-ingredient 
9999 mem: storing 2 in location 1223
 106 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 1224
 106 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1225
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1226
9999 mem: storing 1 in location 1227
 106 run: break-if style-found?, 
9999 mem: location 1227 is 1
9999 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1228
9999 mem: storing 0 in location 1229
 106 run: break-if color-found?, 
9999 mem: location 1229 is 0
9999 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1228
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 106 run: break-if bg-color-found?, 
9999 mem: location 1231 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1230
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1222 is 1009
9999 mem: location 1223 is 2
9999 mem: location 1224 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1184
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 107 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 107 run: *row <- copy new-row
9999 mem: location 1184 is 2
9999 mem: location 1186 is 1011
9999 mem: storing 2 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 107 run: *column <- copy new-column
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1222
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 0
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 20
9999 mem: storing 1055 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1055
9999 mem: location 1055 is 9480
9999 mem: location 1056 is 245
9999 mem: location 1215 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1055
9999 mem: storing 9480 in location 1055
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1055
9999 mem: location 1055 is 9480
9999 mem: location 1056 is 245
9999 mem: location 1215 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1056
9999 mem: storing 245 in location 1056
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 0
9999 mem: storing 1 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 1
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 21
9999 mem: storing 1057 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1057
9999 mem: location 1057 is 9480
9999 mem: location 1058 is 245
9999 mem: location 1215 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1057
9999 mem: storing 9480 in location 1057
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1057
9999 mem: location 1057 is 9480
9999 mem: location 1058 is 245
9999 mem: location 1215 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1058
9999 mem: storing 245 in location 1058
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 1
9999 mem: storing 2 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 2
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 22
9999 mem: storing 1059 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1059
9999 mem: location 1059 is 9480
9999 mem: location 1060 is 245
9999 mem: location 1215 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1059
9999 mem: storing 9480 in location 1059
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1059
9999 mem: location 1059 is 9480
9999 mem: location 1060 is 245
9999 mem: location 1215 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1060
9999 mem: storing 245 in location 1060
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 2
9999 mem: storing 3 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 3
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 23
9999 mem: storing 1061 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1061
9999 mem: location 1061 is 9480
9999 mem: location 1062 is 245
9999 mem: location 1215 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1061
9999 mem: storing 9480 in location 1061
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1061
9999 mem: location 1061 is 9480
9999 mem: location 1062 is 245
9999 mem: location 1215 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1062
9999 mem: storing 245 in location 1062
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 3
9999 mem: storing 4 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 4
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 24
9999 mem: storing 1063 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1063
9999 mem: location 1063 is 9480
9999 mem: location 1064 is 245
9999 mem: location 1215 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1063
9999 mem: storing 9480 in location 1063
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1063
9999 mem: location 1063 is 9480
9999 mem: location 1064 is 245
9999 mem: location 1215 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1064
9999 mem: storing 245 in location 1064
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 4
9999 mem: storing 5 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 5
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
9999 schedule: print-character/draw-horizontal/editor-render/editor-event-loop/run1005/scenario-editor-can-undo-and-redo-delete
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 25 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 25
9999 mem: storing 1065 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1065
9999 mem: location 1065 is 9480
9999 mem: location 1066 is 245
9999 mem: location 1215 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1065
9999 mem: storing 9480 in location 1065
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1065
9999 mem: location 1065 is 9480
9999 mem: location 1066 is 245
9999 mem: location 1215 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1066
9999 mem: storing 245 in location 1066
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 5
9999 mem: storing 6 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 6
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 26 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 26
9999 mem: storing 1067 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1067
9999 mem: location 1067 is 9480
9999 mem: location 1068 is 245
9999 mem: location 1215 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1067
9999 mem: storing 9480 in location 1067
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1067
9999 mem: location 1067 is 9480
9999 mem: location 1068 is 245
9999 mem: location 1215 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1068
9999 mem: storing 245 in location 1068
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 6
9999 mem: storing 7 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 7
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 27 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 27
9999 mem: storing 1069 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1069
9999 mem: location 1069 is 9480
9999 mem: location 1070 is 245
9999 mem: location 1215 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1069
9999 mem: storing 9480 in location 1069
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1069
9999 mem: location 1069 is 9480
9999 mem: location 1070 is 245
9999 mem: location 1215 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1070
9999 mem: storing 245 in location 1070
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 7
9999 mem: storing 8 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 8
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 28 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 28
9999 mem: storing 1071 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1071
9999 mem: location 1071 is 9480
9999 mem: location 1072 is 245
9999 mem: location 1215 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1071
9999 mem: storing 9480 in location 1071
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1071
9999 mem: location 1071 is 9480
9999 mem: location 1072 is 245
9999 mem: location 1215 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1072
9999 mem: storing 245 in location 1072
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 8
9999 mem: storing 9 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 9
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 29 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 29
9999 mem: storing 1073 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1073
9999 mem: location 1073 is 9480
9999 mem: location 1074 is 245
9999 mem: location 1215 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1073
9999 mem: storing 9480 in location 1073
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1073
9999 mem: location 1073 is 9480
9999 mem: location 1074 is 245
9999 mem: location 1215 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1074
9999 mem: storing 245 in location 1074
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 9
9999 mem: storing 10 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 10
9999 mem: location 1225 is 9
9999 mem: storing 0 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 27
9999 trace: fall-through: exiting draw-horizontal; decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1145 is 2
9999 mem: storing 3 in location 1145
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1141 is 1009
9999 mem: location 1145 is 3
9999 mem: location 1143 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1183
 106 run: row:number <- next-ingredient 
9999 mem: storing 3 in location 1184
 106 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 106 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1186
 106 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1187
 106 run: break-if screen, 
9999 mem: location 1183 is 1009
9999 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1183 is 1009
9999 mem: location 1184 is 3
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1236
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1237
 107 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1238
 107 run: *row <- copy new-row
9999 mem: location 1236 is 3
9999 mem: location 1238 is 1011
9999 mem: storing 3 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 107 run: *column <- copy new-column
9999 mem: location 1237 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1183
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1183 is 1009
9999 mem: location 1185 is 0
9999 mem: location 1187 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 107 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1190
 107 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1191
 107 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1192
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 0
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 30
9999 mem: storing 1075 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1075
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1215 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1075
9999 mem: storing 32 in location 1075
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1075
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1215 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1076
9999 mem: storing 7 in location 1076
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 0
9999 mem: storing 1 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 1
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 31
9999 mem: storing 1077 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1215 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1077
9999 mem: storing 32 in location 1077
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1215 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1078
9999 mem: storing 7 in location 1078
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 1
9999 mem: storing 2 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 2
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 32
9999 mem: storing 1079 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1215 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1079
9999 mem: storing 32 in location 1079
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1215 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1080
9999 mem: storing 7 in location 1080
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 2
9999 mem: storing 3 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 3
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
9999 schedule: print-character/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run1005/scenario-editor-can-undo-and-redo-delete
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 33
9999 mem: storing 1081 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1215 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1081
9999 mem: storing 32 in location 1081
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1215 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1082
9999 mem: storing 7 in location 1082
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 3
9999 mem: storing 4 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 4
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 34
9999 mem: storing 1083 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1215 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1083
9999 mem: storing 32 in location 1083
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1215 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1084
9999 mem: storing 7 in location 1084
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 4
9999 mem: storing 5 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 5
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 35 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 35
9999 mem: storing 1085 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1085
9999 mem: location 1085 is 32
9999 mem: location 1086 is 7
9999 mem: location 1215 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1085
9999 mem: storing 32 in location 1085
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1085
9999 mem: location 1085 is 32
9999 mem: location 1086 is 7
9999 mem: location 1215 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1086
9999 mem: storing 7 in location 1086
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 5
9999 mem: storing 6 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 6
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 36 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 36
9999 mem: storing 1087 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1087
9999 mem: location 1087 is 32
9999 mem: location 1088 is 7
9999 mem: location 1215 is 1087
9999 run: address to copy is 1087
9999 mem: storing 1087 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1087
9999 mem: storing 32 in location 1087
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1087
9999 mem: location 1087 is 32
9999 mem: location 1088 is 7
9999 mem: location 1215 is 1087
9999 run: address to copy is 1088
9999 mem: storing 1088 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1088
9999 mem: storing 7 in location 1088
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 6
9999 mem: storing 7 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 7
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 37 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 37
9999 mem: storing 1089 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1089
9999 mem: location 1089 is 32
9999 mem: location 1090 is 7
9999 mem: location 1215 is 1089
9999 run: address to copy is 1089
9999 mem: storing 1089 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1089
9999 mem: storing 32 in location 1089
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1089
9999 mem: location 1089 is 32
9999 mem: location 1090 is 7
9999 mem: location 1215 is 1089
9999 run: address to copy is 1090
9999 mem: storing 1090 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1090
9999 mem: storing 7 in location 1090
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 7
9999 mem: storing 8 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 8
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 38 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 38
9999 mem: storing 1091 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1091
9999 mem: location 1091 is 32
9999 mem: location 1092 is 7
9999 mem: location 1215 is 1091
9999 run: address to copy is 1091
9999 mem: storing 1091 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1091
9999 mem: storing 32 in location 1091
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1091
9999 mem: location 1091 is 32
9999 mem: location 1092 is 7
9999 mem: location 1215 is 1091
9999 run: address to copy is 1092
9999 mem: storing 1092 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1092
9999 mem: storing 7 in location 1092
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 8
9999 mem: storing 9 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 9
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 39 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 39
9999 mem: storing 1093 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1093
9999 mem: location 1093 is 32
9999 mem: location 1094 is 7
9999 mem: location 1215 is 1093
9999 run: address to copy is 1093
9999 mem: storing 1093 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1093
9999 mem: storing 32 in location 1093
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1093
9999 mem: location 1093 is 32
9999 mem: location 1094 is 7
9999 mem: location 1215 is 1093
9999 run: address to copy is 1094
9999 mem: storing 1094 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1094
9999 mem: storing 7 in location 1094
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 9
9999 mem: storing 10 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 10
9999 mem: location 1192 is 9
9999 mem: storing 1 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 1
9999 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1183 is 1009
9999 mem: location 1184 is 3
9999 mem: location 1186 is 0
9999 mem: location 1187 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 107 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1242
 107 run: row:number <- next-ingredient 
9999 mem: storing 3 in location 1243
 107 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1244
 107 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1245
 107 run: row <- add row, 1
9999 mem: location 1243 is 3
9999 mem: storing 4 in location 1243
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1242 is 1009
9999 mem: location 1243 is 4
9999 mem: location 1244 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 108 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1236
 108 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1237
 108 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1238
 108 run: *row <- copy new-row
9999 mem: location 1236 is 4
9999 mem: location 1238 is 1011
9999 mem: storing 4 in location 1011
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: *column <- copy new-column
9999 mem: location 1237 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 0 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
9999 trace: reply: decrementing callstack depth from 7
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1242
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1242 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1668
 108 run: break-unless sc, 
9999 mem: location 1668 is 1009
9999 run: jump-unless fell through
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1668 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1668 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1669
 108 run: reply height
9999 mem: location 1669 is 5
9999 trace: reply: decrementing callstack depth from 7
9999 run: result 0 is 5
9999 mem: storing 5 in location 1246
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1243 is 4
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1247
 107 run: break-if at-bottom-of-screen?, 
9999 mem: location 1247 is 0
9999 run: jump-if fell through
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1242 is 1009
9999 mem: location 1243 is 4
9999 mem: location 1244 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 108 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1236
 108 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1237
 108 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1238
 108 run: *row <- copy new-row
9999 mem: location 1236 is 4
9999 mem: location 1238 is 1011
9999 mem: storing 4 in location 1011
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: *column <- copy new-column
9999 mem: location 1237 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 0 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
9999 trace: reply: decrementing callstack depth from 7
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1242
 107 run: clear-line-delimited screen, left, right
9999 mem: location 1242 is 1009
9999 mem: location 1244 is 0
9999 mem: location 1245 is 9
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 108 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1190
 108 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1191
 108 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1192
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 0
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 40
9999 mem: storing 1095 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1095
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1215 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1095
9999 mem: storing 32 in location 1095
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1095
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1215 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1096
9999 mem: storing 7 in location 1096
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 0
9999 mem: storing 1 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 1
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
9999 schedule: print-character/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run1005/scenario-editor-can-undo-and-redo-delete
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 41
9999 mem: storing 1097 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1215 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1097
9999 mem: storing 32 in location 1097
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1215 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1098
9999 mem: storing 7 in location 1098
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 1
9999 mem: storing 2 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 2
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 42
9999 mem: storing 1099 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1215 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1099
9999 mem: storing 32 in location 1099
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1215 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1100
9999 mem: storing 7 in location 1100
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 2
9999 mem: storing 3 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 3
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 43
9999 mem: storing 1101 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1215 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1101
9999 mem: storing 32 in location 1101
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1215 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1102
9999 mem: storing 7 in location 1102
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 3
9999 mem: storing 4 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 4
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 44
9999 mem: storing 1103 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1215 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1103
9999 mem: storing 32 in location 1103
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1215 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1104
9999 mem: storing 7 in location 1104
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 4
9999 mem: storing 5 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 5
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 45 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 45
9999 mem: storing 1105 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1105
9999 mem: location 1105 is 32
9999 mem: location 1106 is 7
9999 mem: location 1215 is 1105
9999 run: address to copy is 1105
9999 mem: storing 1105 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1105
9999 mem: storing 32 in location 1105
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1105
9999 mem: location 1105 is 32
9999 mem: location 1106 is 7
9999 mem: location 1215 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1106
9999 mem: storing 7 in location 1106
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 5
9999 mem: storing 6 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 6
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 46 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 46
9999 mem: storing 1107 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1107
9999 mem: location 1107 is 32
9999 mem: location 1108 is 7
9999 mem: location 1215 is 1107
9999 run: address to copy is 1107
9999 mem: storing 1107 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1107
9999 mem: storing 32 in location 1107
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1107
9999 mem: location 1107 is 32
9999 mem: location 1108 is 7
9999 mem: location 1215 is 1107
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1108
9999 mem: storing 7 in location 1108
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 6
9999 mem: storing 7 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 7
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 47 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 47
9999 mem: storing 1109 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1109
9999 mem: location 1109 is 32
9999 mem: location 1110 is 7
9999 mem: location 1215 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1109
9999 mem: storing 32 in location 1109
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1109
9999 mem: location 1109 is 32
9999 mem: location 1110 is 7
9999 mem: location 1215 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1110
9999 mem: storing 7 in location 1110
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 7
9999 mem: storing 8 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 8
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 48 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 48
9999 mem: storing 1111 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1111
9999 mem: location 1111 is 32
9999 mem: location 1112 is 7
9999 mem: location 1215 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1111
9999 mem: storing 32 in location 1111
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1111
9999 mem: location 1111 is 32
9999 mem: location 1112 is 7
9999 mem: location 1215 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1112
9999 mem: storing 7 in location 1112
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 8
9999 mem: storing 9 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 9
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 49 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 49
9999 mem: storing 1113 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1113
9999 mem: location 1113 is 32
9999 mem: location 1114 is 7
9999 mem: location 1215 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1113
9999 mem: storing 32 in location 1113
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1113
9999 mem: location 1113 is 32
9999 mem: location 1114 is 7
9999 mem: location 1215 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1114
9999 mem: storing 7 in location 1114
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 9
9999 mem: storing 10 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 10
9999 mem: location 1192 is 9
9999 mem: storing 1 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 1
9999 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 7
 107 run: row <- add row, 1
9999 mem: location 1243 is 4
9999 mem: storing 5 in location 1243
 107 run: loop 
9999 run: jumping to instruction 9
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1243 is 5
9999 mem: location 1246 is 5
9999 mem: storing 1 in location 1247
 107 run: break-if at-bottom-of-screen?, 
9999 mem: location 1247 is 1
9999 run: jumping to instruction 15
9999 trace: fall-through: exiting clear-rest-of-screen; decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 trace: fall-through: exiting editor-render; decrementing callstack depth from 4
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 1607
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 1607
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1301
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1185
 105 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
9999 schedule: move-cursor/editor-event-loop/run1005/scenario-editor-can-undo-and-redo-delete
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 105 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 105 run: *column <- copy new-column
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 104 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1664
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1664 in location 1222
 105 run: break-unless x, 
9999 mem: location 1222 is 1664
9999 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1664
9999 mem: location 1664 is 1
9999 mem: location 1665 is 1659
9999 mem: location 1222 is 1664
9999 run: address to copy is 1664
9999 mem: storing 1664 in location 1223
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1664
9999 mem: location 1664 is 1
9999 mem: location 1665 is 1659
9999 mem: location 1222 is 1664
9999 run: address to copy is 1665
9999 run: its type is address
9999 mem: location 1665 is 1659
9999 mem: storing 1659 in location 1224
 105 run: max:number <- length *buf
9999 mem: location 1224 is 1659
9999 mem: storing 1 in location 1225
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1664
9999 mem: location 1664 is 1
9999 mem: location 1225 is 1
9999 mem: storing 1 in location 1226
 105 run: break-unless done?, 
9999 mem: location 1226 is 1
9999 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1666 in location 1227
 105 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1227 is 1666
9999 mem: location 1666 is 0
9999 mem: location 1667 is 0
9999 mem: location 1668 is 0
9999 mem: location 1669 is 0
9999 mem: location 1222 is 1664
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1664
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1664 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 1 in location 1307
 104 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 104 run: break-if quit?, 
9999 mem: location 1307 is 1
9999 run: jumping to instruction 28
9999 trace: fall-through: exiting editor-event-loop; decrementing callstack depth from 3
9999 trace: fall-through: exiting run1005; decrementing callstack depth from 2
 102 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 1607
9999 mem: location 2 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 3
 102 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 1607
9999 mem: location 2 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 4
 102 run: memory-should-contain [
    3 <- 1
    4 <- 1
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: screen-should-contain [
    .          .
    .adef      .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: assume-console [
    press ctrl-y
  ]
9999 parse: instruction: press
9999 parse:   ingredient: {"ctrl-y": <>}
 102 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
9999 parse: instruction: editor-event-loop
9999 parse:   ingredient: {"screen": "address"}
9999 parse:   ingredient: {"console": "address"}
9999 parse:   ingredient: {"2": <"address" : "editor-data">}
9999 after-brace: recipe run1006
9999 after-brace: editor-event-loop ...
9999 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1677
9999 mem: location 2 is 1115
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1297
 104 run: console:address <- next-ingredient 
9999 mem: storing 1677 in location 1298
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1299
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 1607
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 1607
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1301
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1185
 105 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 105 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 105 run: *column <- copy new-column
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 104 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1677
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1677 in location 1222
 105 run: break-unless x, 
9999 mem: location 1222 is 1677
9999 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1677
9999 mem: location 1677 is 0
9999 mem: location 1678 is 1672
9999 mem: location 1222 is 1677
9999 run: address to copy is 1677
9999 mem: storing 1677 in location 1223
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1677
9999 mem: location 1677 is 0
9999 mem: location 1678 is 1672
9999 mem: location 1222 is 1677
9999 run: address to copy is 1678
9999 run: its type is address
9999 mem: location 1678 is 1672
9999 mem: storing 1672 in location 1224
 105 run: max:number <- length *buf
9999 mem: location 1224 is 1672
9999 mem: storing 1 in location 1225
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1677
9999 mem: location 1677 is 0
9999 mem: location 1225 is 1
9999 mem: storing 0 in location 1226
 105 run: break-unless done?, 
9999 mem: location 1226 is 0
9999 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1224 is 1672
9999 mem: location 1223 is 1677
9999 mem: location 1677 is 0
9999 run: address to copy is 1673
9999 run: its type is event
9999 mem: location 1673 is 0
9999 mem: location 1674 is 25
9999 mem: location 1675 is 0
9999 mem: location 1676 is 0
9999 mem: storing 0 in location 1228
9999 mem: storing 25 in location 1229
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 105 run: *idx <- add *idx, 1
9999 mem: location 1223 is 1677
9999 mem: location 1677 is 0
9999 mem: location 1223 is 1677
9999 mem: storing 1 in location 1677
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1228 is 0
9999 mem: location 1229 is 25
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1222 is 1677
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is [0, 25, 0, 0]
9999 run: result 1 is 1677
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1302
9999 mem: storing 25 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1677 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 0 in location 1307
 104 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 104 run: break-if quit?, 
9999 mem: location 1307 is 0
9999 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1302 is 0
9999 mem: location 1303 is 25
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: storing 0 in location 1308
 104 run: break-unless t, 
9999 mem: location 1308 is 0
9999 run: jumping to instruction 18
 104 run: break-if t, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 mem: location 1302 is 0
9999 mem: location 1303 is 25
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1312
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1313
 105 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1314
9999 mem: storing 25 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
 105 run: jump-if editor, 1:offset
9999 mem: location 1313 is 1115
9999 run: jumping to instruction 6
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1679
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1681
 106 run: break-unless sc, 
9999 mem: location 1681 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1681 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1681 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1682
 106 run: reply width
9999 mem: location 1682 is 10
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 10
9999 mem: storing 10 in location 1318
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1312 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1681
 106 run: break-unless sc, 
9999 mem: location 1681 is 1009
9999 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1681 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1681 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1682
 106 run: reply height
9999 mem: location 1682 is 5
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1319
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 1607
9999 mem: location 1313 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1320
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 1607
9999 mem: location 1313 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1321
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 1607
9999 mem: location 1313 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1322
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 1607
9999 mem: location 1313 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1323
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 1607
9999 mem: location 1313 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1324
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1323 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1325
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1324 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1326
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1314 is 0
9999 mem: location 1315 is 25
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 1315 in location 1327
 105 run: break-unless c, 
9999 mem: location 1327 is 1315
9999 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1327 is 1315
9999 mem: location 1315 is 25
9999 mem: storing 1 in location 1328
 105 run: break-unless redo?, 
9999 mem: location 1328 is 1
9999 run: jump-unless fell through
 105 run: redo:address:address:list <- get-address *editor, redo:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 1607
9999 mem: location 1313 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1329
 105 run: break-unless *redo, 
9999 mem: location 1329 is 1125
9999 mem: location 1125 is 1607
9999 run: jump-unless fell through
 105 run: op:address:operation/skiptypecheck <- first *redo
9999 mem: location 1329 is 1125
9999 mem: location 1125 is 1607
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 1607 in location 1681
 106 run: result:location <- get *in, value:offset
9999 mem: location 1681 is 1607
9999 mem: location 1607 is 1578
9999 mem: location 1608 is 0
9999 mem: location 1681 is 1607
9999 run: address to copy is 1607
9999 run: its type is number
9999 mem: location 1607 is 1578
9999 mem: storing 1578 in location 1682
 106 run: reply result
9999 mem: location 1682 is 1578
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1578
9999 mem: storing 1578 in location 1330
 105 run: *redo <- rest *redo
9999 mem: location 1329 is 1125
9999 mem: location 1125 is 1607
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 1607 in location 1681
 106 run: result:address:list <- get *in, next:offset
9999 mem: location 1681 is 1607
9999 mem: location 1607 is 1578
9999 mem: location 1608 is 0
9999 mem: location 1681 is 1607
9999 run: address to copy is 1608
9999 run: its type is address
9999 mem: location 1608 is 0
9999 mem: storing 0 in location 1682
 106 run: reply result
9999 mem: location 1682 is 0
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 0
9999 mem: location 1329 is 1125
9999 mem: storing 0 in location 1125
 105 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1670
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1331
 105 run: *undo/skiptypecheck <- push op, *undo
9999 mem: location 1330 is 1578
9999 mem: location 1331 is 1124
9999 mem: location 1124 is 1670
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: x:location <- next-ingredient 
9999 mem: storing 1578 in location 1183
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 1670 in location 1184
 106 run: result:address:list <- new list:type
9999 mem: new alloc: 1683
9999 mem: storing 1683 in location 1185
 106 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1185 is 1683
9999 mem: location 1683 is 0
9999 mem: location 1684 is 0
9999 mem: location 1185 is 1683
9999 run: address to copy is 1683
9999 mem: storing 1683 in location 1186
 106 run: *val <- copy x
9999 mem: location 1183 is 1578
9999 mem: location 1186 is 1683
9999 mem: storing 1578 in location 1683
 106 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1185 is 1683
9999 mem: location 1683 is 1578
9999 mem: location 1684 is 0
9999 mem: location 1185 is 1683
9999 run: address to copy is 1684
9999 mem: storing 1684 in location 1187
 106 run: *next <- copy in
9999 mem: location 1184 is 1670
9999 mem: location 1187 is 1684
9999 mem: storing 1670 in location 1684
 106 run: reply result
9999 mem: location 1185 is 1683
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1683
9999 mem: location 1331 is 1124
9999 mem: storing 1683 in location 1124
 105 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1330 is 1578
9999 mem: location 1578 is 2
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1455
9999 mem: location 1588 is 2
9999 mem: location 1330 is 1578
9999 mem: storing 1579 in location 1332
 105 run: break-unless deletion, 
9999 mem: location 1332 is 1579
9999 run: jump-unless fell through
 105 run: start:address:duplex-list <- get *deletion, delete-from:offset
9999 mem: location 1332 is 1579
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1455
9999 mem: location 1588 is 2
9999 mem: location 1332 is 1579
9999 run: address to copy is 1586
9999 run: its type is address
9999 mem: location 1586 is 1427
9999 mem: storing 1427 in location 1333
 105 run: end:address:duplex-list <- get *deletion, delete-until:offset
9999 mem: location 1332 is 1579
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1455
9999 mem: location 1588 is 2
9999 mem: location 1332 is 1579
9999 run: address to copy is 1587
9999 run: its type is address
9999 mem: location 1587 is 1455
9999 mem: storing 1455 in location 1334
 105 run: remove-duplex-between start, end
9999 mem: location 1333 is 1427
9999 mem: location 1334 is 1455
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: start:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1183
 106 run: end:address:duplex-list <- next-ingredient 
9999 mem: storing 1455 in location 1184
 106 run: jump-if start, 1:offset
9999 mem: location 1183 is 1427
9999 run: jumping to instruction 5
 106 run: next:address:address:duplex-list <- get-address *start, next:offset
9999 mem: location 1183 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1449
9999 mem: location 1429 is 1147
9999 mem: location 1183 is 1427
9999 run: address to copy is 1428
9999 mem: storing 1428 in location 1185
 106 run: nothing-to-delete?:boolean <- equal *next, end
9999 mem: location 1185 is 1428
9999 mem: location 1428 is 1449
9999 mem: location 1184 is 1455
9999 mem: storing 0 in location 1186
 106 run: jump-unless nothing-to-delete?, 1:offset
9999 mem: location 1186 is 0
9999 run: jumping to instruction 9
 106 run: prev:address:address:duplex-list <- get-address **next, prev:offset
9999 mem: location 1185 is 1428
9999 mem: location 1428 is 1449
9999 mem: location 1449 is 100
9999 mem: location 1450 is 1452
9999 mem: location 1451 is 1427
9999 mem: location 1185 is 1428
9999 mem: location 1428 is 1449
9999 run: address to copy is 1451
9999 mem: storing 1451 in location 1187
 106 run: *prev <- copy 0
9999 mem: location 1187 is 1451
9999 mem: storing 0 in location 1451
 106 run: *next <- copy end
9999 mem: location 1184 is 1455
9999 mem: location 1185 is 1428
9999 mem: storing 1455 in location 1428
 106 run: jump-if end, 1:offset
9999 mem: location 1184 is 1455
9999 run: jumping to instruction 14
 106 run: prev <- get-address *end, prev:offset
9999 mem: location 1184 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1452
9999 mem: location 1184 is 1455
9999 run: address to copy is 1457
9999 mem: storing 1457 in location 1187
 106 run: next <- get-address **prev, next:offset
9999 mem: location 1187 is 1457
9999 mem: location 1457 is 1452
9999 mem: location 1452 is 101
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1449
9999 mem: location 1187 is 1457
9999 mem: location 1457 is 1452
9999 run: address to copy is 1453
9999 mem: storing 1453 in location 1185
 106 run: *next <- copy 0
9999 mem: location 1185 is 1453
9999 mem: storing 0 in location 1453
 106 run: *prev <- copy start
9999 mem: location 1183 is 1427
9999 mem: location 1187 is 1457
9999 mem: storing 1427 in location 1457
 106 run: reply start
9999 mem: location 1183 is 1427
9999 trace: reply: decrementing callstack depth from 5
 105 run: *cursor-row <- get *deletion, after-row:offset
9999 mem: location 1332 is 1579
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1455
9999 mem: location 1588 is 2
9999 mem: location 1332 is 1579
9999 run: address to copy is 1582
9999 run: its type is number
9999 mem: location 1582 is 1
9999 mem: location 1323 is 1121
9999 mem: storing 1 in location 1121
 105 run: *cursor-column <- get *deletion, after-column:offset
9999 mem: location 1332 is 1579
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1455
9999 mem: location 1588 is 2
9999 mem: location 1332 is 1579
9999 run: address to copy is 1583
9999 run: its type is number
9999 mem: location 1583 is 1
9999 mem: location 1324 is 1122
9999 mem: storing 1 in location 1122
 105 run: top:address:address:duplex-list <- get-address *editor, top-of-screen:offset
9999 mem: location 1313 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1683
9999 mem: location 1125 is 0
9999 mem: location 1313 is 1115
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1335
 105 run: *top <- get *deletion, after-top-of-screen:offset
9999 mem: location 1332 is 1579
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1455
9999 mem: location 1588 is 2
9999 mem: location 1332 is 1579
9999 run: address to copy is 1584
9999 run: its type is address
9999 mem: location 1584 is 1147
9999 mem: location 1335 is 1116
9999 mem: storing 1147 in location 1116
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1330 is 1578
9999 mem: location 1578 is 2
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1455
9999 mem: location 1588 is 2
9999 mem: location 1330 is 1578
9999 mem: storing 0 in location 1336
 105 run: break-unless move, 
9999 mem: location 1336 is 0
9999 run: jumping to instruction 48
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1330 is 1578
9999 mem: location 1578 is 2
9999 mem: location 1579 is 1
9999 mem: location 1580 is 1
9999 mem: location 1581 is 1147
9999 mem: location 1582 is 1
9999 mem: location 1583 is 1
9999 mem: location 1584 is 1147
9999 mem: location 1585 is 1449
9999 mem: location 1586 is 1427
9999 mem: location 1587 is 1455
9999 mem: location 1588 is 2
9999 mem: location 1330 is 1578
9999 mem: storing 0 in location 1337
 105 run: break-unless typing, 
9999 mem: location 1337 is 0
9999 run: jumping to instruction 58
 105 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 1/go-render
9999 mem: location 1312 is 1009
9999 mem: location 1313 is 1115
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 1
9999 mem: storing 1009 in location 1297
9999 mem: storing 1115 in location 1299
9999 mem: storing 1 in location 1309
 104 run: break-unless go-render?, 
9999 mem: location 1309 is 1
9999 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1297 is 1009
9999 mem: location 1299 is 1115
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1141
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1142
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1142 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1683
9999 mem: location 1125 is 0
9999 mem: location 1142 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1143
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1142 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1683
9999 mem: location 1125 is 0
9999 mem: location 1142 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1144
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1141 is 1009
9999 mem: location 1142 is 1115
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1152
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1153
 106 run: jump-if editor, 1:offset
9999 mem: location 1153 is 1115
9999 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1683
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1154
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1152 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1681
 107 run: break-unless sc, 
9999 mem: location 1681 is 1009
9999 run: jump-unless fell through
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1681 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1681 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1682
 107 run: reply height
9999 mem: location 1682 is 5
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 5
9999 mem: storing 5 in location 1155
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1683
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1156
 106 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1683
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1147
9999 mem: storing 1147 in location 1157
 106 run: prev:address:duplex-list <- copy curr
9999 mem: location 1157 is 1147
9999 mem: storing 1147 in location 1158
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1147
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1147 in location 1681
 107 run: jump-if in, 1:offset
9999 mem: location 1681 is 1147
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1681 is 1147
9999 mem: location 1147 is 167
9999 mem: location 1148 is 1427
9999 mem: location 1149 is 0
9999 mem: location 1681 is 1147
9999 run: address to copy is 1148
9999 run: its type is address
9999 mem: location 1148 is 1427
9999 mem: storing 1427 in location 1682
 107 run: reply result
9999 mem: location 1682 is 1427
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1427
9999 mem: storing 1427 in location 1157
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1159
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1160
 106 run: column:number <- copy left
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1161
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1683
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1162
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1683
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1163
 106 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1683
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1164
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1152 is 1009
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 107 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 107 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 107 run: *column <- copy new-column
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1152
 106 run: break-unless curr, 
9999 mem: location 1157 is 1427
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 0
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 0
9999 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1455
9999 mem: location 1429 is 1147
9999 mem: location 1157 is 1427
9999 run: address to copy is 1427
9999 run: its type is character
9999 mem: location 1427 is 97
9999 mem: storing 97 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 97
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 97
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 97
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 97
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 0
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 97
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 97
  90 print-character: 97 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 97
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 97
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 10
9999 mem: storing 1035 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1215 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 97
9999 mem: location 1216 is 1035
9999 mem: storing 97 in location 1035
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1215 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1036
9999 mem: storing 7 in location 1036
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1427
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1681
 107 run: jump-if in, 1:offset
9999 mem: location 1681 is 1427
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1681 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1455
9999 mem: location 1429 is 1147
9999 mem: location 1681 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1455
9999 mem: storing 1455 in location 1682
 107 run: reply result
9999 mem: location 1682 is 1455
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1147
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1147 in location 1681
 107 run: jump-if in, 1:offset
9999 mem: location 1681 is 1147
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1681 is 1147
9999 mem: location 1147 is 167
9999 mem: location 1148 is 1427
9999 mem: location 1149 is 0
9999 mem: location 1681 is 1147
9999 run: address to copy is 1148
9999 run: its type is address
9999 mem: location 1148 is 1427
9999 mem: storing 1427 in location 1682
 107 run: reply result
9999 mem: location 1682 is 1427
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1427
9999 mem: storing 1427 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 0
9999 mem: storing 1 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 1455
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1160 is 1
9999 mem: location 1155 is 5
9999 mem: storing 0 in location 1165
 106 run: break-if off-screen?, 
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1166 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1161 is 1
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1167
 106 run: break-unless at-cursor?, 
9999 mem: location 1167 is 1
9999 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1158 is 1427
9999 mem: location 1164 is 1118
9999 mem: storing 1427 in location 1118
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1427
9999 mem: location 1157 is 1455
9999 run: address to copy is 1455
9999 run: its type is character
9999 mem: location 1455 is 102
9999 mem: storing 102 in location 1168
 106 run: color <- get-color color, c
9999 mem: location 1159 is 7
9999 mem: location 1168 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1611
 107 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1612
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1611 is 7
9999 mem: storing 1 in location 1613
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1612 is 102
9999 mem: storing 0 in location 1614
 107 run: break-unless starting-comment?, 
9999 mem: location 1614 is 0
9999 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1615
 107 run: break-unless color-is-blue?, 
9999 mem: location 1615 is 0
9999 run: jumping to instruction 20
 107 run: break-unless color-is-white?, 
9999 mem: location 1613 is 1
9999 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1612 is 102
9999 mem: storing 0 in location 1617
 107 run: break-unless starting-assignment?, 
9999 mem: location 1617 is 0
9999 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1611 is 7
9999 mem: storing 0 in location 1618
 107 run: break-unless color-is-red?, 
9999 mem: location 1618 is 0
9999 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1611 is 7
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 7
9999 mem: storing 7 in location 1159
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1168 is 102
9999 mem: storing 0 in location 1169
 106 run: break-unless newline?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1161 is 1
9999 mem: location 1156 is 9
9999 mem: storing 0 in location 1171
 106 run: break-unless at-right?, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1152 is 1009
9999 mem: location 1168 is 102
9999 mem: location 1159 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 102
  90 print-character: 102 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 102
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 102
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 11
9999 mem: storing 1037 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1037
9999 mem: location 1037 is 100
9999 mem: location 1038 is 7
9999 mem: location 1215 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 102
9999 mem: location 1216 is 1037
9999 mem: storing 102 in location 1037
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1037
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1215 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1038
9999 mem: storing 7 in location 1038
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex curr
9999 mem: location 1157 is 1455
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1455 in location 1681
 107 run: jump-if in, 1:offset
9999 mem: location 1681 is 1455
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1681 is 1455
9999 mem: location 1455 is 102
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1427
9999 mem: location 1681 is 1455
9999 run: address to copy is 1456
9999 run: its type is address
9999 mem: location 1456 is 0
9999 mem: storing 0 in location 1682
 107 run: reply result
9999 mem: location 1682 is 0
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 0
9999 mem: storing 0 in location 1157
 106 run: prev <- next-duplex prev
9999 mem: location 1158 is 1427
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1681
 107 run: jump-if in, 1:offset
9999 mem: location 1681 is 1427
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1681 is 1427
9999 mem: location 1427 is 97
9999 mem: location 1428 is 1455
9999 mem: location 1429 is 1147
9999 mem: location 1681 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1455
9999 mem: storing 1455 in location 1682
 107 run: reply result
9999 mem: location 1682 is 1455
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1158
 106 run: column <- add column, 1
9999 mem: location 1161 is 1
9999 mem: storing 2 in location 1161
 106 run: loop 
9999 run: jumping to instruction 20
 106 run: break-unless curr, 
9999 mem: location 1157 is 0
9999 run: jumping to instruction 67
 106 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1683
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1117
9999 mem: storing 1117 in location 1172
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1157 is 0
9999 mem: location 1172 is 1117
9999 mem: storing 0 in location 1117
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1166
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1161 is 2
9999 mem: location 1163 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1173
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1166 is 1
9999 mem: location 1173 is 0
9999 mem: storing 0 in location 1174
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1175
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: storing 0 in location 1176
 106 run: break-unless before-cursor?, 
9999 mem: location 1176 is 0
9999 run: jumping to instruction 80
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 2
9999 mem: location 1152 is 1009
9999 mem: location 1153 is 1115
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1
9999 run: result 1 is 2
9999 mem: storing 1 in location 1145
9999 mem: storing 2 in location 1146
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1141 is 1009
9999 mem: location 1146 is 2
9999 mem: location 1144 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1190
 106 run: column:number <- next-ingredient 
9999 mem: storing 2 in location 1191
 106 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1192
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 2
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
9999 schedule: print-character/clear-line-delimited/editor-render/editor-event-loop/run1006/scenario-editor-can-undo-and-redo-delete
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 12
9999 mem: storing 1039 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 101
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1039
9999 mem: storing 32 in location 1039
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1215 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1040
9999 mem: storing 7 in location 1040
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 2
9999 mem: storing 3 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 3
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 13
9999 mem: storing 1041 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1041
9999 mem: location 1041 is 102
9999 mem: location 1042 is 7
9999 mem: location 1215 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1041
9999 mem: storing 32 in location 1041
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1215 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1042
9999 mem: storing 7 in location 1042
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 3
9999 mem: storing 4 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 4
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 14
9999 mem: storing 1043 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1215 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1043
9999 mem: storing 32 in location 1043
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1215 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1044
9999 mem: storing 7 in location 1044
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 4
9999 mem: storing 5 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 5
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 15
9999 mem: storing 1045 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1215 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1045
9999 mem: storing 32 in location 1045
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1215 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1046
9999 mem: storing 7 in location 1046
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 5
9999 mem: storing 6 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 6
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 16
9999 mem: storing 1047 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1215 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1047
9999 mem: storing 32 in location 1047
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1215 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1048
9999 mem: storing 7 in location 1048
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 6
9999 mem: storing 7 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 7
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 17 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 17
9999 mem: storing 1049 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1215 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1049
9999 mem: storing 32 in location 1049
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1215 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1050
9999 mem: storing 7 in location 1050
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 7
9999 mem: storing 8 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 8
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 18 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 18
9999 mem: storing 1051 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1215 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1051
9999 mem: storing 32 in location 1051
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1215 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1052
9999 mem: storing 7 in location 1052
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 8
9999 mem: storing 9 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 9
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 19 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 19
9999 mem: storing 1053 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1215 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1053
9999 mem: storing 32 in location 1053
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1215 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1054
9999 mem: storing 7 in location 1054
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1191 is 9
9999 mem: storing 10 in location 1191
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 10
9999 mem: location 1192 is 9
9999 mem: storing 1 in location 1193
 106 run: break-if done?, 
9999 mem: location 1193 is 1
9999 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1145 is 1
9999 mem: storing 2 in location 1145
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1141 is 1009
9999 mem: location 1145 is 2
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1222
 106 run: row:number <- next-ingredient 
9999 mem: storing 2 in location 1223
 106 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 1224
 106 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1225
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1226
9999 mem: storing 1 in location 1227
 106 run: break-if style-found?, 
9999 mem: location 1227 is 1
9999 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1228
9999 mem: storing 0 in location 1229
 106 run: break-if color-found?, 
9999 mem: location 1229 is 0
9999 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1228
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 106 run: break-if bg-color-found?, 
9999 mem: location 1231 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1230
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1222 is 1009
9999 mem: location 1223 is 2
9999 mem: location 1224 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1184
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 107 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 107 run: *row <- copy new-row
9999 mem: location 1184 is 2
9999 mem: location 1186 is 1011
9999 mem: storing 2 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 107 run: *column <- copy new-column
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1222
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 0
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 20
9999 mem: storing 1055 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1055
9999 mem: location 1055 is 9480
9999 mem: location 1056 is 245
9999 mem: location 1215 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1055
9999 mem: storing 9480 in location 1055
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1055
9999 mem: location 1055 is 9480
9999 mem: location 1056 is 245
9999 mem: location 1215 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1056
9999 mem: storing 245 in location 1056
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
9999 schedule: print-character/draw-horizontal/editor-render/editor-event-loop/run1006/scenario-editor-can-undo-and-redo-delete
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 0
9999 mem: storing 1 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 1
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 21
9999 mem: storing 1057 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1057
9999 mem: location 1057 is 9480
9999 mem: location 1058 is 245
9999 mem: location 1215 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1057
9999 mem: storing 9480 in location 1057
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1057
9999 mem: location 1057 is 9480
9999 mem: location 1058 is 245
9999 mem: location 1215 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1058
9999 mem: storing 245 in location 1058
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 1
9999 mem: storing 2 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 2
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 22
9999 mem: storing 1059 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1059
9999 mem: location 1059 is 9480
9999 mem: location 1060 is 245
9999 mem: location 1215 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1059
9999 mem: storing 9480 in location 1059
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1059
9999 mem: location 1059 is 9480
9999 mem: location 1060 is 245
9999 mem: location 1215 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1060
9999 mem: storing 245 in location 1060
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 2
9999 mem: storing 3 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 3
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 23
9999 mem: storing 1061 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1061
9999 mem: location 1061 is 9480
9999 mem: location 1062 is 245
9999 mem: location 1215 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1061
9999 mem: storing 9480 in location 1061
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1061
9999 mem: location 1061 is 9480
9999 mem: location 1062 is 245
9999 mem: location 1215 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1062
9999 mem: storing 245 in location 1062
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 3
9999 mem: storing 4 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 4
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 24
9999 mem: storing 1063 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1063
9999 mem: location 1063 is 9480
9999 mem: location 1064 is 245
9999 mem: location 1215 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1063
9999 mem: storing 9480 in location 1063
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1063
9999 mem: location 1063 is 9480
9999 mem: location 1064 is 245
9999 mem: location 1215 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1064
9999 mem: storing 245 in location 1064
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 4
9999 mem: storing 5 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 5
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 25 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 25
9999 mem: storing 1065 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1065
9999 mem: location 1065 is 9480
9999 mem: location 1066 is 245
9999 mem: location 1215 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1065
9999 mem: storing 9480 in location 1065
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1065
9999 mem: location 1065 is 9480
9999 mem: location 1066 is 245
9999 mem: location 1215 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1066
9999 mem: storing 245 in location 1066
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 5
9999 mem: storing 6 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 6
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 26 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 26
9999 mem: storing 1067 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1067
9999 mem: location 1067 is 9480
9999 mem: location 1068 is 245
9999 mem: location 1215 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1067
9999 mem: storing 9480 in location 1067
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1067
9999 mem: location 1067 is 9480
9999 mem: location 1068 is 245
9999 mem: location 1215 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1068
9999 mem: storing 245 in location 1068
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 6
9999 mem: storing 7 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 7
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 27 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 27
9999 mem: storing 1069 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1069
9999 mem: location 1069 is 9480
9999 mem: location 1070 is 245
9999 mem: location 1215 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1069
9999 mem: storing 9480 in location 1069
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1069
9999 mem: location 1069 is 9480
9999 mem: location 1070 is 245
9999 mem: location 1215 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1070
9999 mem: storing 245 in location 1070
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 7
9999 mem: storing 8 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 8
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 28 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 28
9999 mem: storing 1071 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1071
9999 mem: location 1071 is 9480
9999 mem: location 1072 is 245
9999 mem: location 1215 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1071
9999 mem: storing 9480 in location 1071
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1071
9999 mem: location 1071 is 9480
9999 mem: location 1072 is 245
9999 mem: location 1215 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1072
9999 mem: storing 245 in location 1072
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 8
9999 mem: storing 9 in location 1224
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 9
9999 mem: location 1225 is 9
9999 mem: storing 1 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1222 is 1009
9999 mem: location 1226 is 9480
9999 mem: location 1228 is 245
9999 mem: location 1230 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1197
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1198
9999 mem: storing 1 in location 1199
 107 run: break-if color-found?, 
9999 mem: location 1199 is 1
9999 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 1 in location 1201
 107 run: break-if bg-color-found?, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1197 is 9480
  90 print-character: 9480 
 107 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1207
 107 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1202 is 10
9999 mem: storing 20 in location 1210
 107 run: index <- add index, *column
9999 mem: location 1210 is 20
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 29 in location 1210
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 107 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 9480
9999 mem: storing 0 in location 1213
 107 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 29
9999 mem: storing 1073 in location 1215
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1073
9999 mem: location 1073 is 9480
9999 mem: location 1074 is 245
9999 mem: location 1215 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1216
 107 run: *cursor-contents <- copy c
9999 mem: location 1197 is 9480
9999 mem: location 1216 is 1073
9999 mem: storing 9480 in location 1073
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1073
9999 mem: location 1073 is 9480
9999 mem: location 1074 is 245
9999 mem: location 1215 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1217
 107 run: *cursor-color <- copy color
9999 mem: location 1198 is 245
9999 mem: location 1217 is 1074
9999 mem: storing 245 in location 1074
 107 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 107 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1224 is 9
9999 mem: storing 10 in location 1224
9999 schedule: draw-horizontal/editor-render/editor-event-loop/run1006/scenario-editor-can-undo-and-redo-delete
 106 run: loop 
9999 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1224 is 10
9999 mem: location 1225 is 9
9999 mem: storing 0 in location 1232
 106 run: break-unless continue?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 27
9999 trace: fall-through: exiting draw-horizontal; decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1145 is 2
9999 mem: storing 3 in location 1145
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1141 is 1009
9999 mem: location 1145 is 3
9999 mem: location 1143 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1183
 106 run: row:number <- next-ingredient 
9999 mem: storing 3 in location 1184
 106 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1185
 106 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1186
 106 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1187
 106 run: break-if screen, 
9999 mem: location 1183 is 1009
9999 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1183 is 1009
9999 mem: location 1184 is 3
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1236
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1237
 107 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1238
 107 run: *row <- copy new-row
9999 mem: location 1236 is 3
9999 mem: location 1238 is 1011
9999 mem: storing 3 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 107 run: *column <- copy new-column
9999 mem: location 1237 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1183
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1183 is 1009
9999 mem: location 1185 is 0
9999 mem: location 1187 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 107 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1190
 107 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1191
 107 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1192
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 0
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 30
9999 mem: storing 1075 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1075
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1215 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1075
9999 mem: storing 32 in location 1075
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1075
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1215 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1076
9999 mem: storing 7 in location 1076
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 0
9999 mem: storing 1 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 1
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 31
9999 mem: storing 1077 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1215 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1077
9999 mem: storing 32 in location 1077
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1215 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1078
9999 mem: storing 7 in location 1078
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 1
9999 mem: storing 2 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 2
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 32
9999 mem: storing 1079 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1215 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1079
9999 mem: storing 32 in location 1079
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1215 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1080
9999 mem: storing 7 in location 1080
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 2
9999 mem: storing 3 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 3
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 33
9999 mem: storing 1081 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1215 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1081
9999 mem: storing 32 in location 1081
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1215 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1082
9999 mem: storing 7 in location 1082
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 3
9999 mem: storing 4 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 4
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 34
9999 mem: storing 1083 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1215 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1083
9999 mem: storing 32 in location 1083
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1215 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1084
9999 mem: storing 7 in location 1084
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 4
9999 mem: storing 5 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 5
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 35 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 35
9999 mem: storing 1085 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1085
9999 mem: location 1085 is 32
9999 mem: location 1086 is 7
9999 mem: location 1215 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1085
9999 mem: storing 32 in location 1085
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1085
9999 mem: location 1085 is 32
9999 mem: location 1086 is 7
9999 mem: location 1215 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1086
9999 mem: storing 7 in location 1086
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 5
9999 mem: storing 6 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 6
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 36 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 36
9999 mem: storing 1087 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1087
9999 mem: location 1087 is 32
9999 mem: location 1088 is 7
9999 mem: location 1215 is 1087
9999 run: address to copy is 1087
9999 mem: storing 1087 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1087
9999 mem: storing 32 in location 1087
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1087
9999 mem: location 1087 is 32
9999 mem: location 1088 is 7
9999 mem: location 1215 is 1087
9999 run: address to copy is 1088
9999 mem: storing 1088 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1088
9999 mem: storing 7 in location 1088
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 6
9999 mem: storing 7 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 7
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 37 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 37
9999 mem: storing 1089 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1089
9999 mem: location 1089 is 32
9999 mem: location 1090 is 7
9999 mem: location 1215 is 1089
9999 run: address to copy is 1089
9999 mem: storing 1089 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1089
9999 mem: storing 32 in location 1089
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1089
9999 mem: location 1089 is 32
9999 mem: location 1090 is 7
9999 mem: location 1215 is 1089
9999 run: address to copy is 1090
9999 mem: storing 1090 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1090
9999 mem: storing 7 in location 1090
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 7
9999 mem: storing 8 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 8
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
9999 schedule: print-character/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run1006/scenario-editor-can-undo-and-redo-delete
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 38 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 38
9999 mem: storing 1091 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1091
9999 mem: location 1091 is 32
9999 mem: location 1092 is 7
9999 mem: location 1215 is 1091
9999 run: address to copy is 1091
9999 mem: storing 1091 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1091
9999 mem: storing 32 in location 1091
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1091
9999 mem: location 1091 is 32
9999 mem: location 1092 is 7
9999 mem: location 1215 is 1091
9999 run: address to copy is 1092
9999 mem: storing 1092 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1092
9999 mem: storing 7 in location 1092
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 8
9999 mem: storing 9 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 9
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 108 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 108 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 108 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 108 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 108 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 108 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1202 is 10
9999 mem: storing 30 in location 1210
 108 run: index <- add index, *column
9999 mem: location 1210 is 30
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 39 in location 1210
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 108 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 108 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 39
9999 mem: storing 1093 in location 1215
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1093
9999 mem: location 1093 is 32
9999 mem: location 1094 is 7
9999 mem: location 1215 is 1093
9999 run: address to copy is 1093
9999 mem: storing 1093 in location 1216
 108 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1093
9999 mem: storing 32 in location 1093
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1093
9999 mem: location 1093 is 32
9999 mem: location 1094 is 7
9999 mem: location 1215 is 1093
9999 run: address to copy is 1094
9999 mem: storing 1094 in location 1217
 108 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1094
9999 mem: storing 7 in location 1094
 108 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 108 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1191 is 9
9999 mem: storing 10 in location 1191
 107 run: loop 
9999 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 10
9999 mem: location 1192 is 9
9999 mem: storing 1 in location 1193
 107 run: break-if done?, 
9999 mem: location 1193 is 1
9999 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1183 is 1009
9999 mem: location 1184 is 3
9999 mem: location 1186 is 0
9999 mem: location 1187 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 107 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1242
 107 run: row:number <- next-ingredient 
9999 mem: storing 3 in location 1243
 107 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1244
 107 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1245
 107 run: row <- add row, 1
9999 mem: location 1243 is 3
9999 mem: storing 4 in location 1243
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1242 is 1009
9999 mem: location 1243 is 4
9999 mem: location 1244 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 108 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1236
 108 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1237
 108 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1238
 108 run: *row <- copy new-row
9999 mem: location 1236 is 4
9999 mem: location 1238 is 1011
9999 mem: storing 4 in location 1011
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: *column <- copy new-column
9999 mem: location 1237 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 0 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
9999 trace: reply: decrementing callstack depth from 7
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1242
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1242 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1681
 108 run: break-unless sc, 
9999 mem: location 1681 is 1009
9999 run: jump-unless fell through
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1681 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1681 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1682
 108 run: reply height
9999 mem: location 1682 is 5
9999 trace: reply: decrementing callstack depth from 7
9999 run: result 0 is 5
9999 mem: storing 5 in location 1246
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1243 is 4
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1247
 107 run: break-if at-bottom-of-screen?, 
9999 mem: location 1247 is 0
9999 run: jump-if fell through
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1242 is 1009
9999 mem: location 1243 is 4
9999 mem: location 1244 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 108 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1236
 108 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1237
 108 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1238
 108 run: *row <- copy new-row
9999 mem: location 1236 is 4
9999 mem: location 1238 is 1011
9999 mem: storing 4 in location 1011
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: *column <- copy new-column
9999 mem: location 1237 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 0 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
9999 trace: reply: decrementing callstack depth from 7
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1242
 107 run: clear-line-delimited screen, left, right
9999 mem: location 1242 is 1009
9999 mem: location 1244 is 0
9999 mem: location 1245 is 9
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 108 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1190
 108 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1191
 108 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1192
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 0
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 40
9999 mem: storing 1095 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1095
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1215 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1095
9999 mem: storing 32 in location 1095
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1095
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1215 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1096
9999 mem: storing 7 in location 1096
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1206 is 1012
9999 mem: storing 1 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 0
9999 mem: storing 1 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 1
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 41
9999 mem: storing 1097 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1215 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1097
9999 mem: storing 32 in location 1097
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1215 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1098
9999 mem: storing 7 in location 1098
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1206 is 1012
9999 mem: storing 2 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 1
9999 mem: storing 2 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 2
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 42
9999 mem: storing 1099 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1215 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1099
9999 mem: storing 32 in location 1099
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1215 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1100
9999 mem: storing 7 in location 1100
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1206 is 1012
9999 mem: storing 3 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 2
9999 mem: storing 3 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 3
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 43
9999 mem: storing 1101 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1215 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1101
9999 mem: storing 32 in location 1101
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1215 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1102
9999 mem: storing 7 in location 1102
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1206 is 1012
9999 mem: storing 4 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 3
9999 mem: storing 4 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 4
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 44
9999 mem: storing 1103 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1215 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1103
9999 mem: storing 32 in location 1103
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1215 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1104
9999 mem: storing 7 in location 1104
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1206 is 1012
9999 mem: storing 5 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 4
9999 mem: storing 5 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 5
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 45 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 45
9999 mem: storing 1105 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1105
9999 mem: location 1105 is 32
9999 mem: location 1106 is 7
9999 mem: location 1215 is 1105
9999 run: address to copy is 1105
9999 mem: storing 1105 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1105
9999 mem: storing 32 in location 1105
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1105
9999 mem: location 1105 is 32
9999 mem: location 1106 is 7
9999 mem: location 1215 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1106
9999 mem: storing 7 in location 1106
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1206 is 1012
9999 mem: storing 6 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 5
9999 mem: storing 6 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 6
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
9999 schedule: print-character/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run1006/scenario-editor-can-undo-and-redo-delete
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 46 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 46
9999 mem: storing 1107 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1107
9999 mem: location 1107 is 32
9999 mem: location 1108 is 7
9999 mem: location 1215 is 1107
9999 run: address to copy is 1107
9999 mem: storing 1107 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1107
9999 mem: storing 32 in location 1107
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1107
9999 mem: location 1107 is 32
9999 mem: location 1108 is 7
9999 mem: location 1215 is 1107
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1108
9999 mem: storing 7 in location 1108
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1206 is 1012
9999 mem: storing 7 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 6
9999 mem: storing 7 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 7
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 47 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 47
9999 mem: storing 1109 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1109
9999 mem: location 1109 is 32
9999 mem: location 1110 is 7
9999 mem: location 1215 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1109
9999 mem: storing 32 in location 1109
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1109
9999 mem: location 1109 is 32
9999 mem: location 1110 is 7
9999 mem: location 1215 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1110
9999 mem: storing 7 in location 1110
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1206 is 1012
9999 mem: storing 8 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 7
9999 mem: storing 8 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 8
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 48 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 48
9999 mem: storing 1111 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1111
9999 mem: location 1111 is 32
9999 mem: location 1112 is 7
9999 mem: location 1215 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1111
9999 mem: storing 32 in location 1111
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1111
9999 mem: location 1111 is 32
9999 mem: location 1112 is 7
9999 mem: location 1215 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1112
9999 mem: storing 7 in location 1112
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1218 is 9
9999 mem: storing 0 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 0
9999 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1206 is 1012
9999 mem: storing 9 in location 1012
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 8
9999 mem: storing 9 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 9
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 0
9999 run: jump-if fell through
 108 run: print-character screen, 32/space
9999 mem: location 1190 is 1009
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 109 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1196
 109 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1197
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 109 run: break-if color-found?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 109 run: color <- copy 7/white
9999 mem: storing 7 in location 1198
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 109 run: break-if bg-color-found?, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 109 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1200
 109 run: trace 90, [print-character], c
9999 mem: location 1197 is 32
  90 print-character: 32 
 109 run: break-unless sc, 
9999 mem: location 1196 is 1009
9999 run: jump-unless fell through
 109 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 109 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 109 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1204
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 25
 109 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1206
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 109 run: jump-if legal?, 1:offset
9999 mem: location 1205 is 1
9999 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1207
 109 run: break-unless newline?, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1204 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1202 is 10
9999 mem: storing 40 in location 1210
 109 run: index <- add index, *column
9999 mem: location 1210 is 40
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 49 in location 1210
 109 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1196 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
 109 run: len:number <- length *buf
9999 mem: location 1211 is 1014
9999 mem: storing 50 in location 1212
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1197 is 32
9999 mem: storing 0 in location 1213
 109 run: break-unless backspace?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1211 is 1014
9999 mem: location 1210 is 49
9999 mem: storing 1113 in location 1215
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1215 is 1113
9999 mem: location 1113 is 32
9999 mem: location 1114 is 7
9999 mem: location 1215 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1216
 109 run: *cursor-contents <- copy c
9999 mem: location 1197 is 32
9999 mem: location 1216 is 1113
9999 mem: storing 32 in location 1113
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1215 is 1113
9999 mem: location 1113 is 32
9999 mem: location 1114 is 7
9999 mem: location 1215 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1217
 109 run: *cursor-color <- copy color
9999 mem: location 1198 is 7
9999 mem: location 1217 is 1114
9999 mem: storing 7 in location 1114
 109 run: right:number <- subtract width, 1
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1218
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1206 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1218 is 9
9999 mem: storing 1 in location 1219
 109 run: break-if at-right?, 
9999 mem: location 1219 is 1
9999 run: jumping to instruction 74
 109 run: reply sc/same-as-ingredient:0
9999 mem: location 1196 is 1009
9999 trace: reply: decrementing callstack depth from 8
 108 run: column <- add column, 1
9999 mem: location 1191 is 9
9999 mem: storing 10 in location 1191
 108 run: loop 
9999 run: jumping to instruction 5
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1191 is 10
9999 mem: location 1192 is 9
9999 mem: storing 1 in location 1193
 108 run: break-if done?, 
9999 mem: location 1193 is 1
9999 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 7
 107 run: row <- add row, 1
9999 mem: location 1243 is 4
9999 mem: storing 5 in location 1243
 107 run: loop 
9999 run: jumping to instruction 9
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1243 is 5
9999 mem: location 1246 is 5
9999 mem: storing 1 in location 1247
 107 run: break-if at-bottom-of-screen?, 
9999 mem: location 1247 is 1
9999 run: jumping to instruction 15
9999 trace: fall-through: exiting clear-rest-of-screen; decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 trace: fall-through: exiting editor-render; decrementing callstack depth from 4
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1683
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1300
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1683
9999 mem: location 1125 is 0
9999 mem: location 1299 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1301
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1300 is 1
9999 mem: location 1301 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1183
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1184
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1185
 105 run: break-unless sc, 
9999 mem: location 1183 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 105 run: *row <- copy new-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1183 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1183 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1187
 105 run: *column <- copy new-column
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1183 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 104 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1677
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1677 in location 1222
 105 run: break-unless x, 
9999 mem: location 1222 is 1677
9999 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1222 is 1677
9999 mem: location 1677 is 1
9999 mem: location 1678 is 1672
9999 mem: location 1222 is 1677
9999 run: address to copy is 1677
9999 mem: storing 1677 in location 1223
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1222 is 1677
9999 mem: location 1677 is 1
9999 mem: location 1678 is 1672
9999 mem: location 1222 is 1677
9999 run: address to copy is 1678
9999 run: its type is address
9999 mem: location 1678 is 1672
9999 mem: storing 1672 in location 1224
 105 run: max:number <- length *buf
9999 mem: location 1224 is 1672
9999 mem: storing 1 in location 1225
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1223 is 1677
9999 mem: location 1677 is 1
9999 mem: location 1225 is 1
9999 mem: storing 1 in location 1226
 105 run: break-unless done?, 
9999 mem: location 1226 is 1
9999 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1679 in location 1227
 105 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1227 is 1679
9999 mem: location 1679 is 0
9999 mem: location 1680 is 0
9999 mem: location 1681 is 0
9999 mem: location 1682 is 0
9999 mem: location 1222 is 1677
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1677
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1677 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 1 in location 1307
 104 run: loop-unless found?, 
9999 mem: location 1306 is 1
9999 run: jump-unless fell through
 104 run: break-if quit?, 
9999 mem: location 1307 is 1
9999 run: jumping to instruction 28
9999 trace: fall-through: exiting editor-event-loop; decrementing callstack depth from 3
9999 trace: fall-through: exiting run1006; decrementing callstack depth from 2
 102 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1683
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 3
 102 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1147
9999 mem: location 1116 is 1147
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1427
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1683
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 4
 102 run: memory-should-contain [
    3 <- 1
    4 <- 1
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: screen-should-contain [
    .          .
    .af        .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
9999 trace: fall-through: exiting scenario-editor-can-undo-and-redo-delete; decrementing callstack depth from 1
